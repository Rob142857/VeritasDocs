{
  "version": 3,
  "sources": ["../node_modules/es-errors/type.js", "../node_modules/object-inspect/index.js", "../node_modules/side-channel-list/index.js", "../node_modules/es-object-atoms/index.js", "../node_modules/es-errors/index.js", "../node_modules/es-errors/eval.js", "../node_modules/es-errors/range.js", "../node_modules/es-errors/ref.js", "../node_modules/es-errors/syntax.js", "../node_modules/es-errors/uri.js", "../node_modules/math-intrinsics/abs.js", "../node_modules/math-intrinsics/floor.js", "../node_modules/math-intrinsics/max.js", "../node_modules/math-intrinsics/min.js", "../node_modules/math-intrinsics/pow.js", "../node_modules/math-intrinsics/round.js", "../node_modules/math-intrinsics/isNaN.js", "../node_modules/math-intrinsics/sign.js", "../node_modules/gopd/gOPD.js", "../node_modules/gopd/index.js", "../node_modules/es-define-property/index.js", "../node_modules/has-symbols/shams.js", "../node_modules/has-symbols/index.js", "../node_modules/get-proto/Reflect.getPrototypeOf.js", "../node_modules/get-proto/Object.getPrototypeOf.js", "../node_modules/function-bind/implementation.js", "../node_modules/function-bind/index.js", "../node_modules/call-bind-apply-helpers/functionCall.js", "../node_modules/call-bind-apply-helpers/functionApply.js", "../node_modules/call-bind-apply-helpers/reflectApply.js", "../node_modules/call-bind-apply-helpers/actualApply.js", "../node_modules/call-bind-apply-helpers/index.js", "../node_modules/dunder-proto/get.js", "../node_modules/get-proto/index.js", "../node_modules/hasown/index.js", "../node_modules/get-intrinsic/index.js", "../node_modules/call-bound/index.js", "../node_modules/side-channel-map/index.js", "../node_modules/side-channel-weakmap/index.js", "../node_modules/side-channel/index.js", "../node_modules/qs/lib/formats.js", "../node_modules/qs/lib/utils.js", "../node_modules/qs/lib/stringify.js", "../node_modules/qs/lib/parse.js", "../node_modules/qs/lib/index.js", "../node_modules/hono/dist/compose.js", "../node_modules/hono/dist/request/constants.js", "../node_modules/hono/dist/utils/body.js", "../node_modules/hono/dist/utils/url.js", "../node_modules/hono/dist/request.js", "../node_modules/hono/dist/utils/html.js", "../node_modules/hono/dist/context.js", "../node_modules/hono/dist/router.js", "../node_modules/hono/dist/utils/constants.js", "../node_modules/hono/dist/hono-base.js", "../node_modules/hono/dist/router/reg-exp-router/node.js", "../node_modules/hono/dist/router/reg-exp-router/trie.js", "../node_modules/hono/dist/router/reg-exp-router/router.js", "../node_modules/hono/dist/router/smart-router/router.js", "../node_modules/hono/dist/router/trie-router/node.js", "../node_modules/hono/dist/router/trie-router/router.js", "../node_modules/hono/dist/hono.js", "../node_modules/hono/dist/middleware/cors/index.js", "../src/utils/crypto.ts", "../src/handlers/auth.ts", "../src/utils/ipfs.ts", "../src/utils/blockchain.ts", "../src/handlers/assets.ts", "../node_modules/@maatara/core-pqc-wasm/core_pqc_wasm.js", "../node_modules/@maatara/src/index.ts", "../src/utils/ethereum.ts", "../src/handlers/web3-assets.ts", "../src/handlers/users.ts", "../node_modules/stripe/esm/net/HttpClient.js", "../node_modules/stripe/esm/net/FetchHttpClient.js", "../node_modules/stripe/esm/crypto/CryptoProvider.js", "../node_modules/stripe/esm/crypto/SubtleCryptoProvider.js", "../node_modules/stripe/esm/platform/PlatformFunctions.js", "../node_modules/stripe/esm/StripeEmitter.js", "../node_modules/stripe/esm/platform/WebPlatformFunctions.js", "../node_modules/stripe/esm/Error.js", "../node_modules/stripe/esm/apiVersion.js", "../node_modules/stripe/esm/resources.js", "../node_modules/stripe/esm/ResourceNamespace.js", "../node_modules/stripe/esm/utils.js", "../node_modules/stripe/esm/autoPagination.js", "../node_modules/stripe/esm/StripeMethod.js", "../node_modules/stripe/esm/StripeResource.js", "../node_modules/stripe/esm/resources/FinancialConnections/Accounts.js", "../node_modules/stripe/esm/resources/Entitlements/ActiveEntitlements.js", "../node_modules/stripe/esm/resources/TestHelpers/Issuing/Authorizations.js", "../node_modules/stripe/esm/resources/Issuing/Authorizations.js", "../node_modules/stripe/esm/resources/Tax/Calculations.js", "../node_modules/stripe/esm/resources/Issuing/Cardholders.js", "../node_modules/stripe/esm/resources/TestHelpers/Issuing/Cards.js", "../node_modules/stripe/esm/resources/Issuing/Cards.js", "../node_modules/stripe/esm/resources/BillingPortal/Configurations.js", "../node_modules/stripe/esm/resources/Terminal/Configurations.js", "../node_modules/stripe/esm/resources/TestHelpers/ConfirmationTokens.js", "../node_modules/stripe/esm/resources/Terminal/ConnectionTokens.js", "../node_modules/stripe/esm/resources/Treasury/CreditReversals.js", "../node_modules/stripe/esm/resources/TestHelpers/Customers.js", "../node_modules/stripe/esm/resources/Treasury/DebitReversals.js", "../node_modules/stripe/esm/resources/Issuing/Disputes.js", "../node_modules/stripe/esm/resources/Radar/EarlyFraudWarnings.js", "../node_modules/stripe/esm/resources/Entitlements/Features.js", "../node_modules/stripe/esm/resources/Treasury/FinancialAccounts.js", "../node_modules/stripe/esm/resources/TestHelpers/Treasury/InboundTransfers.js", "../node_modules/stripe/esm/resources/Treasury/InboundTransfers.js", "../node_modules/stripe/esm/resources/Terminal/Locations.js", "../node_modules/stripe/esm/resources/Billing/MeterEventAdjustments.js", "../node_modules/stripe/esm/resources/Billing/MeterEvents.js", "../node_modules/stripe/esm/resources/Billing/Meters.js", "../node_modules/stripe/esm/resources/Climate/Orders.js", "../node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundPayments.js", "../node_modules/stripe/esm/resources/Treasury/OutboundPayments.js", "../node_modules/stripe/esm/resources/TestHelpers/Treasury/OutboundTransfers.js", "../node_modules/stripe/esm/resources/Treasury/OutboundTransfers.js", "../node_modules/stripe/esm/resources/TestHelpers/Issuing/PersonalizationDesigns.js", "../node_modules/stripe/esm/resources/Issuing/PersonalizationDesigns.js", "../node_modules/stripe/esm/resources/Issuing/PhysicalBundles.js", "../node_modules/stripe/esm/resources/Climate/Products.js", "../node_modules/stripe/esm/resources/TestHelpers/Terminal/Readers.js", "../node_modules/stripe/esm/resources/Terminal/Readers.js", "../node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedCredits.js", "../node_modules/stripe/esm/resources/Treasury/ReceivedCredits.js", "../node_modules/stripe/esm/resources/TestHelpers/Treasury/ReceivedDebits.js", "../node_modules/stripe/esm/resources/Treasury/ReceivedDebits.js", "../node_modules/stripe/esm/resources/TestHelpers/Refunds.js", "../node_modules/stripe/esm/resources/Tax/Registrations.js", "../node_modules/stripe/esm/resources/Reporting/ReportRuns.js", "../node_modules/stripe/esm/resources/Reporting/ReportTypes.js", "../node_modules/stripe/esm/resources/Forwarding/Requests.js", "../node_modules/stripe/esm/resources/Sigma/ScheduledQueryRuns.js", "../node_modules/stripe/esm/resources/Apps/Secrets.js", "../node_modules/stripe/esm/resources/BillingPortal/Sessions.js", "../node_modules/stripe/esm/resources/Checkout/Sessions.js", "../node_modules/stripe/esm/resources/FinancialConnections/Sessions.js", "../node_modules/stripe/esm/resources/Tax/Settings.js", "../node_modules/stripe/esm/resources/Climate/Suppliers.js", "../node_modules/stripe/esm/resources/TestHelpers/TestClocks.js", "../node_modules/stripe/esm/resources/Issuing/Tokens.js", "../node_modules/stripe/esm/resources/Treasury/TransactionEntries.js", "../node_modules/stripe/esm/resources/TestHelpers/Issuing/Transactions.js", "../node_modules/stripe/esm/resources/FinancialConnections/Transactions.js", "../node_modules/stripe/esm/resources/Issuing/Transactions.js", "../node_modules/stripe/esm/resources/Tax/Transactions.js", "../node_modules/stripe/esm/resources/Treasury/Transactions.js", "../node_modules/stripe/esm/resources/Radar/ValueListItems.js", "../node_modules/stripe/esm/resources/Radar/ValueLists.js", "../node_modules/stripe/esm/resources/Identity/VerificationReports.js", "../node_modules/stripe/esm/resources/Identity/VerificationSessions.js", "../node_modules/stripe/esm/resources/Accounts.js", "../node_modules/stripe/esm/resources/AccountLinks.js", "../node_modules/stripe/esm/resources/AccountSessions.js", "../node_modules/stripe/esm/resources/ApplePayDomains.js", "../node_modules/stripe/esm/resources/ApplicationFees.js", "../node_modules/stripe/esm/resources/Balance.js", "../node_modules/stripe/esm/resources/BalanceTransactions.js", "../node_modules/stripe/esm/resources/Charges.js", "../node_modules/stripe/esm/resources/ConfirmationTokens.js", "../node_modules/stripe/esm/resources/CountrySpecs.js", "../node_modules/stripe/esm/resources/Coupons.js", "../node_modules/stripe/esm/resources/CreditNotes.js", "../node_modules/stripe/esm/resources/CustomerSessions.js", "../node_modules/stripe/esm/resources/Customers.js", "../node_modules/stripe/esm/resources/Disputes.js", "../node_modules/stripe/esm/resources/EphemeralKeys.js", "../node_modules/stripe/esm/resources/Events.js", "../node_modules/stripe/esm/resources/ExchangeRates.js", "../node_modules/stripe/esm/resources/FileLinks.js", "../node_modules/stripe/esm/multipart.js", "../node_modules/stripe/esm/resources/Files.js", "../node_modules/stripe/esm/resources/InvoiceItems.js", "../node_modules/stripe/esm/resources/Invoices.js", "../node_modules/stripe/esm/resources/Mandates.js", "../node_modules/stripe/esm/resources/OAuth.js", "../node_modules/stripe/esm/resources/PaymentIntents.js", "../node_modules/stripe/esm/resources/PaymentLinks.js", "../node_modules/stripe/esm/resources/PaymentMethodConfigurations.js", "../node_modules/stripe/esm/resources/PaymentMethodDomains.js", "../node_modules/stripe/esm/resources/PaymentMethods.js", "../node_modules/stripe/esm/resources/Payouts.js", "../node_modules/stripe/esm/resources/Plans.js", "../node_modules/stripe/esm/resources/Prices.js", "../node_modules/stripe/esm/resources/Products.js", "../node_modules/stripe/esm/resources/PromotionCodes.js", "../node_modules/stripe/esm/resources/Quotes.js", "../node_modules/stripe/esm/resources/Refunds.js", "../node_modules/stripe/esm/resources/Reviews.js", "../node_modules/stripe/esm/resources/SetupAttempts.js", "../node_modules/stripe/esm/resources/SetupIntents.js", "../node_modules/stripe/esm/resources/ShippingRates.js", "../node_modules/stripe/esm/resources/Sources.js", "../node_modules/stripe/esm/resources/SubscriptionItems.js", "../node_modules/stripe/esm/resources/SubscriptionSchedules.js", "../node_modules/stripe/esm/resources/Subscriptions.js", "../node_modules/stripe/esm/resources/TaxCodes.js", "../node_modules/stripe/esm/resources/TaxIds.js", "../node_modules/stripe/esm/resources/TaxRates.js", "../node_modules/stripe/esm/resources/Tokens.js", "../node_modules/stripe/esm/resources/Topups.js", "../node_modules/stripe/esm/resources/Transfers.js", "../node_modules/stripe/esm/resources/WebhookEndpoints.js", "../node_modules/stripe/esm/RequestSender.js", "../node_modules/stripe/esm/Webhooks.js", "../node_modules/stripe/esm/stripe.core.js", "../node_modules/stripe/esm/stripe.esm.worker.js", "../src/handlers/stripe.ts", "../src/handlers/search.ts", "../src/handlers/docs.ts", "../src/index.ts"],
  "sourceRoot": ".wrangler-test",
  "sourcesContent": ["'use strict';\n\n/** @type {import('./type')} */\nmodule.exports = TypeError;\n", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction canTrustToString(obj) {\n    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));\n}\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list.\n* By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('./list.d.ts').listGetNode} */\n// eslint-disable-next-line consistent-return\nvar listGetNode = function (list, key, isDelete) {\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\t// eslint-disable-next-line eqeqeq\n\tfor (; (curr = prev.next) != null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tif (!isDelete) {\n\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\t}\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('./list.d.ts').listGet} */\nvar listGet = function (objects, key) {\n\tif (!objects) {\n\t\treturn void undefined;\n\t}\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('./list.d.ts').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('./list.d.ts').ListNode<typeof value, typeof key>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('./list.d.ts').listHas} */\nvar listHas = function (objects, key) {\n\tif (!objects) {\n\t\treturn false;\n\t}\n\treturn !!listGetNode(objects, key);\n};\n/** @type {import('./list.d.ts').listDelete} */\n// eslint-disable-next-line consistent-return\nvar listDelete = function (objects, key) {\n\tif (objects) {\n\t\treturn listGetNode(objects, key, true);\n\t}\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannelList() {\n\t/** @typedef {ReturnType<typeof getSideChannelList>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {import('./list.d.ts').RootNode<V, K> | undefined} */ var $o;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tvar root = $o && $o.next;\n\t\t\tvar deletedNode = listDelete($o, key);\n\t\t\tif (deletedNode && root && root === deletedNode) {\n\t\t\t\t$o = void undefined;\n\t\t\t}\n\t\t\treturn !!deletedNode;\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn listGet($o, key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn listHas($o, key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$o) {\n\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t$o = {\n\t\t\t\t\tnext: void undefined\n\t\t\t\t};\n\t\t\t}\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tlistSet(/** @type {NonNullable<typeof $o>} */ ($o), key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Object;\n", "'use strict';\n\n/** @type {import('.')} */\nmodule.exports = Error;\n", "'use strict';\n\n/** @type {import('./eval')} */\nmodule.exports = EvalError;\n", "'use strict';\n\n/** @type {import('./range')} */\nmodule.exports = RangeError;\n", "'use strict';\n\n/** @type {import('./ref')} */\nmodule.exports = ReferenceError;\n", "'use strict';\n\n/** @type {import('./syntax')} */\nmodule.exports = SyntaxError;\n", "'use strict';\n\n/** @type {import('./uri')} */\nmodule.exports = URIError;\n", "'use strict';\n\n/** @type {import('./abs')} */\nmodule.exports = Math.abs;\n", "'use strict';\n\n/** @type {import('./floor')} */\nmodule.exports = Math.floor;\n", "'use strict';\n\n/** @type {import('./max')} */\nmodule.exports = Math.max;\n", "'use strict';\n\n/** @type {import('./min')} */\nmodule.exports = Math.min;\n", "'use strict';\n\n/** @type {import('./pow')} */\nmodule.exports = Math.pow;\n", "'use strict';\n\n/** @type {import('./round')} */\nmodule.exports = Math.round;\n", "'use strict';\n\n/** @type {import('./isNaN')} */\nmodule.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n", "'use strict';\n\nvar $isNaN = require('./isNaN');\n\n/** @type {import('./sign')} */\nmodule.exports = function sign(number) {\n\tif ($isNaN(number) || number === 0) {\n\t\treturn number;\n\t}\n\treturn number < 0 ? -1 : +1;\n};\n", "'use strict';\n\n/** @type {import('./gOPD')} */\nmodule.exports = Object.getOwnPropertyDescriptor;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $gOPD = require('./gOPD');\n\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n", "'use strict';\n\n/** @type {import('.')} */\nvar $defineProperty = Object.defineProperty || false;\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = false;\n\t}\n}\n\nmodule.exports = $defineProperty;\n", "'use strict';\n\n/** @type {import('./shams')} */\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\t/** @type {{ [k in symbol]?: unknown }} */\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\t// eslint-disable-next-line no-extra-parens\n\t\tvar descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/** @type {import('./Reflect.getPrototypeOf')} */\nmodule.exports = (typeof Reflect !== 'undefined' && Reflect.getPrototypeOf) || null;\n", "'use strict';\n\nvar $Object = require('es-object-atoms');\n\n/** @type {import('./Object.getPrototypeOf')} */\nmodule.exports = $Object.getPrototypeOf || null;\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\n/** @type {import('./functionCall')} */\nmodule.exports = Function.prototype.call;\n", "'use strict';\n\n/** @type {import('./functionApply')} */\nmodule.exports = Function.prototype.apply;\n", "'use strict';\n\n/** @type {import('./reflectApply')} */\nmodule.exports = typeof Reflect !== 'undefined' && Reflect && Reflect.apply;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nvar $apply = require('./functionApply');\nvar $call = require('./functionCall');\nvar $reflectApply = require('./reflectApply');\n\n/** @type {import('./actualApply')} */\nmodule.exports = $reflectApply || bind.call($call, $apply);\n", "'use strict';\n\nvar bind = require('function-bind');\nvar $TypeError = require('es-errors/type');\n\nvar $call = require('./functionCall');\nvar $actualApply = require('./actualApply');\n\n/** @type {(args: [Function, thisArg?: unknown, ...args: unknown[]]) => Function} TODO FIXME, find a way to use import('.') */\nmodule.exports = function callBindBasic(args) {\n\tif (args.length < 1 || typeof args[0] !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\treturn $actualApply(bind, $call, args);\n};\n", "'use strict';\n\nvar callBind = require('call-bind-apply-helpers');\nvar gOPD = require('gopd');\n\nvar hasProtoAccessor;\ntry {\n\t// eslint-disable-next-line no-extra-parens, no-proto\n\thasProtoAccessor = /** @type {{ __proto__?: typeof Array.prototype }} */ ([]).__proto__ === Array.prototype;\n} catch (e) {\n\tif (!e || typeof e !== 'object' || !('code' in e) || e.code !== 'ERR_PROTO_ACCESS') {\n\t\tthrow e;\n\t}\n}\n\n// eslint-disable-next-line no-extra-parens\nvar desc = !!hasProtoAccessor && gOPD && gOPD(Object.prototype, /** @type {keyof typeof Object.prototype} */ ('__proto__'));\n\nvar $Object = Object;\nvar $getPrototypeOf = $Object.getPrototypeOf;\n\n/** @type {import('./get')} */\nmodule.exports = desc && typeof desc.get === 'function'\n\t? callBind([desc.get])\n\t: typeof $getPrototypeOf === 'function'\n\t\t? /** @type {import('./get')} */ function getDunder(value) {\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\treturn $getPrototypeOf(value == null ? value : $Object(value));\n\t\t}\n\t\t: false;\n", "'use strict';\n\nvar reflectGetProto = require('./Reflect.getPrototypeOf');\nvar originalGetProto = require('./Object.getPrototypeOf');\n\nvar getDunderProto = require('dunder-proto/get');\n\n/** @type {import('.')} */\nmodule.exports = reflectGetProto\n\t? function getProto(O) {\n\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\treturn reflectGetProto(O);\n\t}\n\t: originalGetProto\n\t\t? function getProto(O) {\n\t\t\tif (!O || (typeof O !== 'object' && typeof O !== 'function')) {\n\t\t\t\tthrow new TypeError('getProto: not an object');\n\t\t\t}\n\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\treturn originalGetProto(O);\n\t\t}\n\t\t: getDunderProto\n\t\t\t? function getProto(O) {\n\t\t\t\t// @ts-expect-error TS can't narrow inside a closure, for some reason\n\t\t\t\treturn getDunderProto(O);\n\t\t\t}\n\t\t\t: null;\n", "'use strict';\n\nvar call = Function.prototype.call;\nvar $hasOwn = Object.prototype.hasOwnProperty;\nvar bind = require('function-bind');\n\n/** @type {import('.')} */\nmodule.exports = bind.call(call, $hasOwn);\n", "'use strict';\n\nvar undefined;\n\nvar $Object = require('es-object-atoms');\n\nvar $Error = require('es-errors');\nvar $EvalError = require('es-errors/eval');\nvar $RangeError = require('es-errors/range');\nvar $ReferenceError = require('es-errors/ref');\nvar $SyntaxError = require('es-errors/syntax');\nvar $TypeError = require('es-errors/type');\nvar $URIError = require('es-errors/uri');\n\nvar abs = require('math-intrinsics/abs');\nvar floor = require('math-intrinsics/floor');\nvar max = require('math-intrinsics/max');\nvar min = require('math-intrinsics/min');\nvar pow = require('math-intrinsics/pow');\nvar round = require('math-intrinsics/round');\nvar sign = require('math-intrinsics/sign');\n\nvar $Function = Function;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = require('gopd');\nvar $defineProperty = require('es-define-property');\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = require('get-proto');\nvar $ObjectGPO = require('get-proto/Object.getPrototypeOf');\nvar $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');\n\nvar $apply = require('call-bind-apply-helpers/functionApply');\nvar $call = require('call-bind-apply-helpers/functionCall');\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t__proto__: null,\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': $Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': $EvalError,\n\t'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': $Object,\n\t'%Object.getOwnPropertyDescriptor%': $gOPD,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': $RangeError,\n\t'%ReferenceError%': $ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': $URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\n\t'%Function.prototype.call%': $call,\n\t'%Function.prototype.apply%': $apply,\n\t'%Object.defineProperty%': $defineProperty,\n\t'%Object.getPrototypeOf%': $ObjectGPO,\n\t'%Math.abs%': abs,\n\t'%Math.floor%': floor,\n\t'%Math.max%': max,\n\t'%Math.min%': min,\n\t'%Math.pow%': pow,\n\t'%Math.round%': round,\n\t'%Math.sign%': sign,\n\t'%Reflect.getPrototypeOf%': $ReflectGPO\n};\n\nif (getProto) {\n\ttry {\n\t\tnull.error; // eslint-disable-line no-unused-expressions\n\t} catch (e) {\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\t\tvar errorProto = getProto(getProto(e));\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\n\t}\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen && getProto) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t__proto__: null,\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('hasown');\nvar $concat = bind.call($call, Array.prototype.concat);\nvar $spliceApply = bind.call($apply, Array.prototype.splice);\nvar $replace = bind.call($call, String.prototype.replace);\nvar $strSlice = bind.call($call, String.prototype.slice);\nvar $exec = bind.call($call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBindBasic = require('call-bind-apply-helpers');\n\n/** @type {(thisArg: string, searchString: string, position?: number) => number} */\nvar $indexOf = callBindBasic([GetIntrinsic('%String.prototype.indexOf%')]);\n\n/** @type {import('.')} */\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\t/* eslint no-extra-parens: 0 */\n\n\tvar intrinsic = /** @type {(this: unknown, ...args: unknown[]) => unknown} */ (GetIntrinsic(name, !!allowMissing));\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBindBasic(/** @type {const} */ ([intrinsic]));\n\t}\n\treturn intrinsic;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $Map = GetIntrinsic('%Map%', true);\n\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => V} */\nvar $mapGet = callBound('Map.prototype.get', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K, value: V) => void} */\nvar $mapSet = callBound('Map.prototype.set', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapHas = callBound('Map.prototype.has', true);\n/** @type {<K, V>(thisArg: Map<K, V>, key: K) => boolean} */\nvar $mapDelete = callBound('Map.prototype.delete', true);\n/** @type {<K, V>(thisArg: Map<K, V>) => number} */\nvar $mapSize = callBound('Map.prototype.size', true);\n\n/** @type {import('.')} */\nmodule.exports = !!$Map && /** @type {Exclude<import('.'), false>} */ function getSideChannelMap() {\n\t/** @typedef {ReturnType<typeof getSideChannelMap>} Channel */\n\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t/** @type {Map<K, V> | undefined} */ var $m;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\tif ($m) {\n\t\t\t\tvar result = $mapDelete($m, key);\n\t\t\t\tif ($mapSize($m) === 0) {\n\t\t\t\t\t$m = void undefined;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($m) {\n\t\t\t\treturn $mapGet($m, key);\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($m) {\n\t\t\t\treturn $mapHas($m, key);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$m) {\n\t\t\t\t// @ts-expect-error TS can't handle narrowing a variable inside a closure\n\t\t\t\t$m = new $Map();\n\t\t\t}\n\t\t\t$mapSet($m, key, value);\n\t\t}\n\t};\n\n\t// @ts-expect-error TODO: figure out why TS is erroring here\n\treturn channel;\n};\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bound');\nvar inspect = require('object-inspect');\nvar getSideChannelMap = require('side-channel-map');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\n\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => V} */\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K, value: V) => void} */\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\n/** @type {<K extends object, V>(thisArg: WeakMap<K, V>, key: K) => boolean} */\nvar $weakMapDelete = callBound('WeakMap.prototype.delete', true);\n\n/** @type {import('.')} */\nmodule.exports = $WeakMap\n\t? /** @type {Exclude<import('.'), false>} */ function getSideChannelWeakMap() {\n\t\t/** @typedef {ReturnType<typeof getSideChannelWeakMap>} Channel */\n\t\t/** @typedef {Parameters<Channel['get']>[0]} K */\n\t\t/** @typedef {Parameters<Channel['set']>[1]} V */\n\n\t\t/** @type {WeakMap<K & object, V> | undefined} */ var $wm;\n\t\t/** @type {Channel | undefined} */ var $m;\n\n\t\t/** @type {Channel} */\n\t\tvar channel = {\n\t\t\tassert: function (key) {\n\t\t\t\tif (!channel.has(key)) {\n\t\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t\t}\n\t\t\t},\n\t\t\t'delete': function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapDelete($wm, key);\n\t\t\t\t\t}\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif ($m) {\n\t\t\t\t\t\treturn $m['delete'](key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tget: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn $m && $m.get(key);\n\t\t\t},\n\t\t\thas: function (key) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif ($wm) {\n\t\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!$m && $m.has(key);\n\t\t\t},\n\t\t\tset: function (key, value) {\n\t\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\t\tif (!$wm) {\n\t\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t\t}\n\t\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t\t} else if (getSideChannelMap) {\n\t\t\t\t\tif (!$m) {\n\t\t\t\t\t\t$m = getSideChannelMap();\n\t\t\t\t\t}\n\t\t\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\t\t\t/** @type {NonNullable<typeof $m>} */ ($m).set(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// @ts-expect-error TODO: figure out why this is erroring\n\t\treturn channel;\n\t}\n\t: getSideChannelMap;\n", "'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\n\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n\t/** @type {Channel | undefined} */ var $channelData;\n\n\t/** @type {Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\t'delete': function (key) {\n\t\t\treturn !!$channelData && $channelData['delete'](key);\n\t\t},\n\t\tget: function (key) {\n\t\t\treturn $channelData && $channelData.get(key);\n\t\t},\n\t\thas: function (key) {\n\t\t\treturn !!$channelData && $channelData.has(key);\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif (!$channelData) {\n\t\t\t\t$channelData = makeChannel();\n\t\t\t}\n\n\t\t\t$channelData.set(key, value);\n\t\t}\n\t};\n\t// @ts-expect-error TODO: figure out why this is erroring\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? { __proto__: null } : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object' && typeof source !== 'function') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if (\n                (options && (options.plainObjects || options.allowPrototypes))\n                || !has.call(Object.prototype, source)\n            ) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, defaultDecoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    commaRoundTrip: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    filter: void undefined,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && key && typeof key.value !== 'undefined'\n            ? key.value\n            : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? String(key).replace(/\\./g, '%2E') : String(key);\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n        var value = obj[key];\n\n        if (options.skipNulls && value === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            value,\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false,\n    throwOnLimitExceeded: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options, currentArrayLength) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    if (options.throwOnLimitExceeded && currentArrayLength >= options.arrayLimit) {\n        throw new RangeError('Array limit exceeded. Only ' + options.arrayLimit + ' element' + (options.arrayLimit === 1 ? '' : 's') + ' allowed in an array.');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(\n        options.delimiter,\n        options.throwOnLimitExceeded ? limit + 1 : limit\n    );\n\n    if (options.throwOnLimitExceeded && parts.length > limit) {\n        throw new RangeError('Parameter limit exceeded. Only ' + limit + ' parameter' + (limit === 1 ? '' : 's') + ' allowed.');\n    }\n\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key;\n        var val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n\n            val = utils.maybeMap(\n                parseArrayValue(\n                    part.slice(pos + 1),\n                    options,\n                    isArray(obj[key]) ? obj[key].length : 0\n                ),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(String(val));\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var currentArrayLength = 0;\n    if (chain.length > 0 && chain[chain.length - 1] === '[]') {\n        var parentKey = chain.slice(0, -1).join('');\n        currentArrayLength = Array.isArray(val) && val[parentKey] ? val[parentKey].length : 0;\n    }\n\n    var leaf = valuesParsed ? val : parseArrayValue(val, options, currentArrayLength);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : utils.combine([], leaf);\n        } else {\n            obj = options.plainObjects ? { __proto__: null } : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    if (typeof opts.throwOnLimitExceeded !== 'undefined' && typeof opts.throwOnLimitExceeded !== 'boolean') {\n        throw new TypeError('`throwOnLimitExceeded` option must be a boolean');\n    }\n\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n        throwOnLimitExceeded: typeof opts.throwOnLimitExceeded === 'boolean' ? opts.throwOnLimitExceeded : false\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? { __proto__: null } : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? { __proto__: null } : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n", "// src/request/constants.ts\nvar GET_MATCH_RESULT = Symbol();\nexport {\n  GET_MATCH_RESULT\n};\n", "// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    if (!key.endsWith(\"[]\")) {\n      form[key] = value;\n    } else {\n      form[key] = [value];\n    }\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n", "// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", url.indexOf(\":\") + 4);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? tryDecode(value, decodeURIComponent_) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n", "// src/request.ts\nimport { GET_MATCH_RESULT } from \"./request/constants.js\";\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param && /\\%/.test(param) ? tryDecodeURIComponent(param) : param;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value !== void 0) {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"text\").then((text) => JSON.parse(text));\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get [GET_MATCH_RESULT]() {\n    return this.#matchResult;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n", "// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n", "// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setDefaultContentType = (contentType, headers) => {\n  return {\n    \"Content-Type\": contentType,\n    ...headers\n  };\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status;\n  #executionCtx;\n  #res;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #preparedHeaders;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    return this.#res ||= new Response(null, {\n      headers: this.#preparedHeaders ??= new Headers()\n    });\n  }\n  set res(_res) {\n    if (this.#res && _res) {\n      _res = new Response(_res.body, _res);\n      for (const [k, v] of this.#res.headers.entries()) {\n        if (k === \"content-type\") {\n          continue;\n        }\n        if (k === \"set-cookie\") {\n          const cookies = this.#res.headers.getSetCookie();\n          _res.headers.delete(\"set-cookie\");\n          for (const cookie of cookies) {\n            _res.headers.append(\"set-cookie\", cookie);\n          }\n        } else {\n          _res.headers.set(k, v);\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (this.finalized) {\n      this.#res = new Response(this.#res.body, this.#res);\n    }\n    const headers = this.#res ? this.#res.headers : this.#preparedHeaders ??= new Headers();\n    if (value === void 0) {\n      headers.delete(name);\n    } else if (options?.append) {\n      headers.append(name, value);\n    } else {\n      headers.set(name, value);\n    }\n  };\n  status = (status) => {\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    const responseHeaders = this.#res ? new Headers(this.#res.headers) : this.#preparedHeaders ?? new Headers();\n    if (typeof arg === \"object\" && \"headers\" in arg) {\n      const argHeaders = arg.headers instanceof Headers ? arg.headers : new Headers(arg.headers);\n      for (const [key, value] of argHeaders) {\n        if (key.toLowerCase() === \"set-cookie\") {\n          responseHeaders.append(key, value);\n        } else {\n          responseHeaders.set(key, value);\n        }\n      }\n    }\n    if (headers) {\n      for (const [k, v] of Object.entries(headers)) {\n        if (typeof v === \"string\") {\n          responseHeaders.set(k, v);\n        } else {\n          responseHeaders.delete(k);\n          for (const v2 of v) {\n            responseHeaders.append(k, v2);\n          }\n        }\n      }\n    }\n    const status = typeof arg === \"number\" ? arg : arg?.status ?? this.#status;\n    return new Response(data, { status, headers: responseHeaders });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => this.#newResponse(data, arg, headers);\n  text = (text, arg, headers) => {\n    return !this.#preparedHeaders && !this.#status && !arg && !headers && !this.finalized ? new Response(text) : this.#newResponse(\n      text,\n      arg,\n      setDefaultContentType(TEXT_PLAIN, headers)\n    );\n  };\n  json = (object, arg, headers) => {\n    return this.#newResponse(\n      JSON.stringify(object),\n      arg,\n      setDefaultContentType(\"application/json\", headers)\n    );\n  };\n  html = (html, arg, headers) => {\n    const res = (html2) => this.#newResponse(html2, arg, setDefaultContentType(\"text/html; charset=UTF-8\", headers));\n    return typeof html === \"object\" ? resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then(res) : res(html);\n  };\n  redirect = (location, status) => {\n    const locationString = String(location);\n    this.header(\n      \"Location\",\n      !/[^\\x00-\\xFF]/.test(locationString) ? locationString : encodeURI(locationString)\n    );\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n", "// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n", "// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n", "// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    const res = err.getResponse();\n    return c.newResponse(res.body, res);\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.errorHandler = this.errorHandler;\n    clone.#notFoundHandler = this.#notFoundHandler;\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        if (options.replaceRequest === false) {\n          replaceRequest = (request) => request;\n        } else {\n          replaceRequest = options.replaceRequest;\n        }\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { basePath: this._basePath, path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n", "// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        if (regexpStr === \".*\") {\n          throw PATH_ERROR;\n        }\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n", "// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n", "// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n", "// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n", "// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (key in curNode.#children) {\n        curNode = curNode.#children[key];\n        if (pattern) {\n          possibleKeys.push(pattern[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    curNode.#methods.push({\n      [method]: {\n        handler,\n        possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n        score: this.#order\n      }\n    });\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          if (!part && !(matcher instanceof RegExp)) {\n            continue;\n          }\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n", "// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n", "// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n", "// src/middleware/cors/index.ts\nvar cors = (options) => {\n  const defaults = {\n    origin: \"*\",\n    allowMethods: [\"GET\", \"HEAD\", \"PUT\", \"POST\", \"DELETE\", \"PATCH\"],\n    allowHeaders: [],\n    exposeHeaders: []\n  };\n  const opts = {\n    ...defaults,\n    ...options\n  };\n  const findAllowOrigin = ((optsOrigin) => {\n    if (typeof optsOrigin === \"string\") {\n      if (optsOrigin === \"*\") {\n        return () => optsOrigin;\n      } else {\n        return (origin) => optsOrigin === origin ? origin : null;\n      }\n    } else if (typeof optsOrigin === \"function\") {\n      return optsOrigin;\n    } else {\n      return (origin) => optsOrigin.includes(origin) ? origin : null;\n    }\n  })(opts.origin);\n  const findAllowMethods = ((optsAllowMethods) => {\n    if (typeof optsAllowMethods === \"function\") {\n      return optsAllowMethods;\n    } else if (Array.isArray(optsAllowMethods)) {\n      return () => optsAllowMethods;\n    } else {\n      return () => [];\n    }\n  })(opts.allowMethods);\n  return async function cors2(c, next) {\n    function set(key, value) {\n      c.res.headers.set(key, value);\n    }\n    const allowOrigin = await findAllowOrigin(c.req.header(\"origin\") || \"\", c);\n    if (allowOrigin) {\n      set(\"Access-Control-Allow-Origin\", allowOrigin);\n    }\n    if (opts.origin !== \"*\") {\n      const existingVary = c.req.header(\"Vary\");\n      if (existingVary) {\n        set(\"Vary\", existingVary);\n      } else {\n        set(\"Vary\", \"Origin\");\n      }\n    }\n    if (opts.credentials) {\n      set(\"Access-Control-Allow-Credentials\", \"true\");\n    }\n    if (opts.exposeHeaders?.length) {\n      set(\"Access-Control-Expose-Headers\", opts.exposeHeaders.join(\",\"));\n    }\n    if (c.req.method === \"OPTIONS\") {\n      if (opts.maxAge != null) {\n        set(\"Access-Control-Max-Age\", opts.maxAge.toString());\n      }\n      const allowMethods = await findAllowMethods(c.req.header(\"origin\") || \"\", c);\n      if (allowMethods.length) {\n        set(\"Access-Control-Allow-Methods\", allowMethods.join(\",\"));\n      }\n      let headers = opts.allowHeaders;\n      if (!headers?.length) {\n        const requestHeaders = c.req.header(\"Access-Control-Request-Headers\");\n        if (requestHeaders) {\n          headers = requestHeaders.split(/\\s*,\\s*/);\n        }\n      }\n      if (headers?.length) {\n        set(\"Access-Control-Allow-Headers\", headers.join(\",\"));\n        c.res.headers.append(\"Vary\", \"Access-Control-Request-Headers\");\n      }\n      c.res.headers.delete(\"Content-Length\");\n      c.res.headers.delete(\"Content-Type\");\n      return new Response(null, {\n        headers: c.res.headers,\n        status: 204,\n        statusText: \"No Content\"\n      });\n    }\n    await next();\n  };\n};\nexport {\n  cors\n};\n", "// Crypto utilities using Maatara API\r\nimport { Environment } from '../types';\r\n\r\n// Base64url encoding/decoding utilities for Cloudflare Workers\r\nfunction stringToBase64url(str: string): string {\r\n  const encoder = new TextEncoder();\r\n  const bytes = encoder.encode(str);\r\n  const base64 = btoa(String.fromCharCode(...bytes));\r\n  return base64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\r\n}\r\n\r\nfunction base64urlToString(b64u: string): string {\r\n  // Add back padding if needed\r\n  let base64 = b64u.replace(/-/g, '+').replace(/_/g, '/');\r\n  while (base64.length % 4) {\r\n    base64 += '=';\r\n  }\r\n  const binary = atob(base64);\r\n  const bytes = new Uint8Array(binary.length);\r\n  for (let i = 0; i < binary.length; i++) {\r\n    bytes[i] = binary.charCodeAt(i);\r\n  }\r\n  const decoder = new TextDecoder();\r\n  return decoder.decode(bytes);\r\n}\r\n\r\nexport class MaataraClient {\r\n  private apiBase: string;\r\n\r\n  constructor(env: Environment) {\r\n    this.apiBase = env.MAATARA_API_BASE || 'https://maatara-core-worker.rme-6e5.workers.dev';\r\n  }\r\n\r\n  async generateKeyPair(): Promise<{ publicKey: string; privateKey: string }> {\r\n    const response = await fetch(`${this.apiBase}/api/crypto/kyber/keygen`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to generate key pair: ${response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json() as any;\r\n    return {\r\n      publicKey: data.public_b64u,\r\n      privateKey: data.secret_b64u\r\n    };\r\n  }\r\n\r\n  async encryptData(data: string, publicKey: string): Promise<string> {\r\n    // Step 1: Encapsulate shared secret using Kyber\r\n    const encapsResponse = await fetch(`${this.apiBase}/api/crypto/kyber/encaps`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ public_b64u: publicKey })\r\n    });\r\n    \r\n    if (!encapsResponse.ok) {\r\n      throw new Error(`Failed to encapsulate: ${encapsResponse.statusText}`);\r\n    }\r\n    \r\n    const encapsData = await encapsResponse.json() as any;\r\n    const sharedSecret = encapsData.shared_b64u;\r\n    const kemCt = encapsData.kem_ct_b64u;\r\n    \r\n    // Step 2: Derive AES key from shared secret\r\n    const infoB64u = stringToBase64url('veritas-aes');\r\n    const kdfResponse = await fetch(`${this.apiBase}/api/crypto/hkdf`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        secret_b64u: sharedSecret,\r\n        info_b64u: infoB64u,\r\n        salt_b64u: '',\r\n        len: 32\r\n      })\r\n    });\r\n    \r\n    if (!kdfResponse.ok) {\r\n      throw new Error(`Failed to derive key: ${kdfResponse.statusText}`);\r\n    }\r\n    \r\n    const kdfData = await kdfResponse.json() as any;\r\n    const aesKey = kdfData.key_b64u;\r\n    \r\n    // Step 3: Encrypt data with AES-GCM\r\n    const dekB64u = stringToBase64url(data);\r\n    const aadB64u = stringToBase64url('veritas-documents');\r\n    \r\n    const aesResponse = await fetch(`${this.apiBase}/api/crypto/aes/wrap`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        key_b64u: aesKey,\r\n        dek_b64u: dekB64u,\r\n        aad_b64u: aadB64u\r\n      })\r\n    });\r\n    \r\n    if (!aesResponse.ok) {\r\n      throw new Error(`Failed to encrypt: ${aesResponse.statusText}`);\r\n    }\r\n    \r\n    const aesData = await aesResponse.json() as any;\r\n    \r\n    return JSON.stringify({\r\n      version: '1.0',\r\n      algorithm: 'kyber768-aes256gcm',\r\n      kem_ct: kemCt,\r\n      iv: aesData.iv_b64u,\r\n      ciphertext: aesData.ct_b64u\r\n    });\r\n  }\r\n\r\n  async decryptData(encryptedData: string, privateKey: string): Promise<string> {\r\n    const encData = JSON.parse(encryptedData);\r\n    \r\n    // Step 1: Decapsulate shared secret using Kyber\r\n    const decapsResponse = await fetch(`${this.apiBase}/api/crypto/kyber/decaps`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        secret_b64u: privateKey,\r\n        kem_ct_b64u: encData.kem_ct\r\n      })\r\n    });\r\n    \r\n    if (!decapsResponse.ok) {\r\n      throw new Error(`Failed to decapsulate: ${decapsResponse.statusText}`);\r\n    }\r\n    \r\n    const decapsData = await decapsResponse.json() as any;\r\n    const sharedSecret = decapsData.shared_b64u;\r\n    \r\n    // Step 2: Derive AES key from shared secret\r\n    const infoB64u = stringToBase64url('veritas-aes');\r\n    const kdfResponse = await fetch(`${this.apiBase}/api/crypto/hkdf`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        secret_b64u: sharedSecret,\r\n        info_b64u: infoB64u,\r\n        salt_b64u: '',\r\n        len: 32\r\n      })\r\n    });\r\n    \r\n    if (!kdfResponse.ok) {\r\n      throw new Error(`Failed to derive key: ${kdfResponse.statusText}`);\r\n    }\r\n    \r\n    const kdfData = await kdfResponse.json() as any;\r\n    const aesKey = kdfData.key_b64u;\r\n    \r\n    // Step 3: Decrypt data with AES-GCM\r\n    const aadB64u = stringToBase64url('veritas-documents');\r\n    \r\n    const aesResponse = await fetch(`${this.apiBase}/api/crypto/aes/unwrap`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        key_b64u: aesKey,\r\n        iv_b64u: encData.iv,\r\n        ct_b64u: encData.ciphertext,\r\n        aad_b64u: aadB64u\r\n      })\r\n    });\r\n    \r\n    if (!aesResponse.ok) {\r\n      throw new Error(`Failed to decrypt: ${aesResponse.statusText}`);\r\n    }\r\n    \r\n    const aesData = await aesResponse.json() as any;\r\n    return base64urlToString(aesData.dek_b64u);\r\n  }\r\n\r\n  async signData(data: string, privateKey: string): Promise<string> {\r\n    const messageB64u = stringToBase64url(data);\r\n    \r\n    const response = await fetch(`${this.apiBase}/api/crypto/dilithium/sign`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        message_b64u: messageB64u,\r\n        secret_b64u: privateKey\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to sign data: ${response.statusText}`);\r\n    }\r\n    \r\n    const data_result = await response.json() as any;\r\n    return data_result.signature_b64u;\r\n  }\r\n\r\n  async verifySignature(data: string, signature: string, publicKey: string): Promise<boolean> {\r\n    const messageB64u = stringToBase64url(data);\r\n    \r\n    const response = await fetch(`${this.apiBase}/api/crypto/dilithium/verify`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        message_b64u: messageB64u,\r\n        signature_b64u: signature,\r\n        public_b64u: publicKey\r\n      })\r\n    });\r\n    \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to verify signature: ${response.statusText}`);\r\n    }\r\n    \r\n    const result = await response.json() as any;\r\n    return !!result.valid;\r\n  }\r\n\r\n  async addToChain(transactionData: any): Promise<string> {\r\n    // This method is now deprecated - use VeritasBlockchain class instead\r\n    // For backward compatibility, return a mock transaction ID\r\n    const transactionId = `tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    console.warn('addToChain is deprecated. Use VeritasBlockchain.addTransaction() instead.');\r\n    return transactionId;\r\n  }\r\n\r\n  async getChainBlock(blockNumber: number): Promise<any> {\r\n    // This method is now deprecated - use VeritasBlockchain class instead\r\n    // For backward compatibility, return a mock block structure\r\n    console.warn('getChainBlock is deprecated. Use VeritasBlockchain.getBlock() instead.');\r\n    return {\r\n      index: blockNumber,\r\n      timestamp: Date.now(),\r\n      previousHash: blockNumber > 0 ? `block_${blockNumber - 1}_hash` : '0',\r\n      dataHash: `data_hash_${blockNumber}`,\r\n      metadataHash: `metadata_hash_${blockNumber}`,\r\n      signature: 'deprecated_mock_signature',\r\n      transactions: []\r\n    };\r\n  }\r\n}\r\n\r\nexport function generateMnemonic(): string {\r\n  const words = [\r\n    'abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse',\r\n    'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act',\r\n    'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit',\r\n    'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'against', 'age',\r\n    'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol',\r\n    // ... would include full BIP39 wordlist in production\r\n  ];\r\n\r\n  const mnemonic = [];\r\n  for (let i = 0; i < 12; i++) {\r\n    const randomIndex = Math.floor(Math.random() * words.length);\r\n    mnemonic.push(words[randomIndex]);\r\n  }\r\n\r\n  return mnemonic.join(' ');\r\n}\r\n\r\nexport function generateId(): string {\r\n  return crypto.randomUUID();\r\n}\r\n\r\nexport async function hashString(input: string): Promise<string> {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(input);\r\n  const hash = await crypto.subtle.digest('SHA-256', data);\r\n  return Array.from(new Uint8Array(hash))\r\n    .map(b => b.toString(16).padStart(2, '0'))\r\n    .join('');\r\n}\r\n\r\nexport async function uploadToIPFS(data: string, apiKey: string): Promise<string> {\r\n  // This would integrate with an IPFS service like Pinata or web3.storage\r\n  const response = await fetch('https://api.pinata.cloud/pinning/pinJSONToIPFS', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${apiKey}`,\r\n    },\r\n    body: JSON.stringify({\r\n      pinataContent: { data },\r\n      pinataMetadata: {\r\n        name: `veritas-document-${Date.now()}`,\r\n      },\r\n    }),\r\n  });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`Failed to upload to IPFS: ${response.statusText}`);\r\n  }\r\n\r\n  const result: any = await response.json();\r\n  return result.IpfsHash;\r\n}", "import { Hono } from 'hono';\r\nimport { Environment, OneTimeLink, User, APIResponse } from '../types';\r\nimport { MaataraClient, generateId, generateMnemonic } from '../utils/crypto';\r\nimport { initializeVDC, addUserToVDC } from '../utils/blockchain';\r\n\r\nconst authHandler = new Hono<{ Bindings: Environment }>();\r\n\r\n// Helper function to authenticate user from request headers\r\nasync function authenticateUser(c: any): Promise<User | null> {\r\n  const env = c.env;\r\n  const authHeader = c.req.header('Authorization');\r\n  \r\n  if (!authHeader || !authHeader.startsWith('Bearer ')) {\r\n    return null;\r\n  }\r\n  \r\n  const token = authHeader.substring(7); // Remove 'Bearer ' prefix\r\n  \r\n  // For now, we'll use a simple token format: email:privateKey (base64 encoded)\r\n  // In production, this should be a proper JWT or session token\r\n  try {\r\n    const decoded = atob(token);\r\n    const [email, privateKey] = decoded.split(':');\r\n    \r\n    if (!email || !privateKey) return null;\r\n    \r\n    // Get user ID from email\r\n    const userId = await env.VERITAS_KV.get(`user:email:${email}`);\r\n    if (!userId) return null;\r\n\r\n    // Get user data\r\n    const userData = await env.VERITAS_KV.get(`user:${userId}`);\r\n    if (!userData) return null;\r\n\r\n    const user: User = JSON.parse(userData);\r\n\r\n    // Verify the private key\r\n    if (user.encryptedPrivateData.startsWith('prod-encrypted-data-')) {\r\n      const expectedPrivateKey = user.encryptedPrivateData.replace('prod-encrypted-data-', '');\r\n      if (privateKey !== expectedPrivateKey) return null;\r\n    } else {\r\n      const maataraClient = new MaataraClient(env);\r\n      await maataraClient.decryptData(user.encryptedPrivateData, privateKey);\r\n    }\r\n    \r\n    return user;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\n// Generate one-time account creation link (admin only)\r\nauthHandler.post('/create-link', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { email, adminSecret } = await c.req.json();\r\n\r\n    // Verify admin credentials\r\n    if (adminSecret !== env.ADMIN_SECRET_KEY) {\r\n      return c.json<APIResponse>({ success: false, error: 'Unauthorized' }, 401);\r\n    }\r\n\r\n    if (!email) {\r\n      return c.json<APIResponse>({ success: false, error: 'Email is required' }, 400);\r\n    }\r\n\r\n    const linkId = generateId();\r\n    const token = crypto.randomUUID();\r\n    const expiresAt = Date.now() + (7 * 24 * 60 * 60 * 1000); // 7 days\r\n\r\n    const oneTimeLink: OneTimeLink = {\r\n      id: linkId,\r\n      token,\r\n      createdBy: 'admin',\r\n      inviteType: 'admin',\r\n      email,\r\n      expiresAt,\r\n      used: false,\r\n    };\r\n\r\n    await env.VERITAS_KV.put(`link:${token}`, JSON.stringify(oneTimeLink));\r\n\r\n    const activationUrl = `${c.req.url.split('/api')[0]}/activate?token=${token}`;\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: { activationUrl, expiresAt },\r\n      message: 'One-time activation link created successfully',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating one-time link:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Send invitation to create account (user endpoint)\r\nauthHandler.post('/send-invite', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { email } = await c.req.json();\r\n\r\n    if (!email) {\r\n      return c.json<APIResponse>({ success: false, error: 'Email is required' }, 400);\r\n    }\r\n\r\n    // Authenticate the user\r\n    const sender = await authenticateUser(c);\r\n    if (!sender) {\r\n      return c.json<APIResponse>({ success: false, error: 'Authentication required' }, 401);\r\n    }\r\n\r\n    // Check if user already exists\r\n    const existingUserId = await env.VERITAS_KV.get(`user:email:${email}`);\r\n    if (existingUserId) {\r\n      return c.json<APIResponse>({ success: false, error: 'User with this email already exists' }, 400);\r\n    }\r\n\r\n    // Check if invitation already exists\r\n    const existingInvitePattern = `link:*`;\r\n    // Note: In production, you'd want to scan for existing invites to this email\r\n    // For now, we'll just create a new one\r\n\r\n    const linkId = generateId();\r\n    const token = crypto.randomUUID();\r\n    const expiresAt = Date.now() + (7 * 24 * 60 * 60 * 1000); // 7 days\r\n\r\n    const oneTimeLink: OneTimeLink = {\r\n      id: linkId,\r\n      token,\r\n      createdBy: sender.id,\r\n      inviteType: 'user',\r\n      email,\r\n      expiresAt,\r\n      used: false,\r\n    };\r\n\r\n    await env.VERITAS_KV.put(`link:${token}`, JSON.stringify(oneTimeLink));\r\n\r\n    const activationUrl = `${c.req.url.split('/api')[0]}/activate?token=${token}`;\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: { activationUrl, expiresAt },\r\n      message: 'Invitation sent successfully',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error sending invitation:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Activate account using one-time link\r\nauthHandler.post('/activate', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { \r\n      token,\r\n      kyberPublicKey,\r\n      dilithiumPublicKey,\r\n      encryptedUserData, // Already encrypted client-side\r\n      signature\r\n    } = await c.req.json();\r\n\r\n    if (!token) {\r\n      return c.json<APIResponse>({ success: false, error: 'Token is required' }, 400);\r\n    }\r\n    \r\n    if (!kyberPublicKey || !dilithiumPublicKey) {\r\n      return c.json<APIResponse>({ success: false, error: 'Both Kyber and Dilithium public keys are required' }, 400);\r\n    }\r\n\r\n    if (!encryptedUserData || !signature) {\r\n      return c.json<APIResponse>({ success: false, error: 'Encrypted user data and signature are required' }, 400);\r\n    }\r\n\r\n    // Get one-time link\r\n    const linkData = await env.VERITAS_KV.get(`link:${token}`);\r\n    if (!linkData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Invalid or expired token' }, 400);\r\n    }\r\n\r\n    const oneTimeLink: OneTimeLink = JSON.parse(linkData);\r\n\r\n    if (oneTimeLink.used) {\r\n      return c.json<APIResponse>({ success: false, error: 'Token has already been used' }, 400);\r\n    }\r\n\r\n    if (oneTimeLink.expiresAt < Date.now()) {\r\n      return c.json<APIResponse>({ success: false, error: 'Token has expired' }, 400);\r\n    }\r\n\r\n    // Generate recovery phrase (BIP39 mnemonic)\r\n    const recoveryPhrase = generateMnemonic();\r\n\r\n    // Create user ID\r\n    const userId = generateId();\r\n\r\n    // Determine account type from invite (NOT user-definable!)\r\n    const accountType = oneTimeLink.inviteType === 'admin' ? 'admin' : \r\n                       oneTimeLink.inviteType === 'user' ? 'invited' : 'paid';\r\n\r\n    // Create Veritas blockchain transaction for user registration\r\n    const blockchainTx = {\r\n      // PLAINTEXT (public, searchable)\r\n      type: 'user_registration',\r\n      userId,\r\n      email: oneTimeLink.email, // Email in plaintext for lookups\r\n      kyberPublicKey,\r\n      dilithiumPublicKey,\r\n      accountType, // CRITICAL: Set from invite, NOT from user input\r\n      timestamp: Date.now(),\r\n      \r\n      // ENCRYPTED (Kyber-wrapped, only user can decrypt with their private key)\r\n      encryptedUserData, // Contains: email, personalDetails, preferences\r\n      \r\n      // SIGNATURE (Dilithium, proves authenticity)\r\n      signature\r\n    };\r\n\r\n    // Verify the Dilithium signature before storing\r\n    try {\r\n      const maataraClient = new MaataraClient(env);\r\n      const blockDataToVerify = JSON.stringify({\r\n        kyberPublicKey,\r\n        dilithiumPublicKey,\r\n        encryptedUserData,\r\n        timestamp: blockchainTx.timestamp\r\n      });\r\n      \r\n      const isValid = await maataraClient.verifySignature(\r\n        blockDataToVerify,\r\n        signature,\r\n        dilithiumPublicKey\r\n      );\r\n      \r\n      if (!isValid) {\r\n        return c.json<APIResponse>({ \r\n          success: false, \r\n          error: 'Invalid signature - blockchain transaction rejected' \r\n        }, 401);\r\n      }\r\n    } catch (error) {\r\n      console.error('Signature verification error:', error);\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Signature verification failed' \r\n      }, 500);\r\n    }\r\n\r\n    // Store the blockchain transaction in KV (will migrate to IPFS later)\r\n    const txId = `tx_${userId}_${Date.now()}`;\r\n    await env.VERITAS_KV.put(`blockchain:tx:${txId}`, JSON.stringify(blockchainTx));\r\n    await env.VERITAS_KV.put(`blockchain:user:${userId}`, txId); // Map user to their registration tx\r\n\r\n    // Create minimal user record (most data is in encrypted blockchain tx)\r\n    const user: User = {\r\n      id: userId,\r\n      email: oneTimeLink.email,\r\n      publicKey: kyberPublicKey, // Kyber public key for encryption\r\n      encryptedPrivateData: JSON.stringify({\r\n        recoveryPhrase, // Only recovery phrase stored here\r\n        blockchainTxId: txId, // Reference to blockchain transaction\r\n        dilithiumPublicKey // For signature verification\r\n      }),\r\n      createdAt: Date.now(),\r\n      invitedBy: oneTimeLink.inviteType === 'user' ? oneTimeLink.createdBy : undefined,\r\n      hasActivated: true,\r\n      accountType // From invite, NOT user input\r\n    };\r\n\r\n    // Save user to KV\r\n    await env.VERITAS_KV.put(`user:${userId}`, JSON.stringify(user));\r\n    await env.VERITAS_KV.put(`user:email:${oneTimeLink.email}`, userId);\r\n\r\n    // Mark link as used\r\n    oneTimeLink.used = true;\r\n    oneTimeLink.usedAt = Date.now();\r\n    await env.VERITAS_KV.put(`link:${token}`, JSON.stringify(oneTimeLink));\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: {\r\n        userId,\r\n        kyberPublicKey,\r\n        dilithiumPublicKey,\r\n        blockchainTxId: txId,\r\n        accountType, // Return account type so UI knows user permissions\r\n        recoveryPhrase,\r\n        message: 'Save both private keys securely! You cannot recover them later.'\r\n      },\r\n      message: 'Account activated successfully on Veritas blockchain',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error activating account:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Login (verify user exists and return user data)\r\nauthHandler.post('/login', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { email, privateKey } = await c.req.json();\r\n\r\n    if (!email || !privateKey) {\r\n      return c.json<APIResponse>({ success: false, error: 'Email and private key are required' }, 400);\r\n    }\r\n\r\n    // Get user ID from email\r\n    const userId = await env.VERITAS_KV.get(`user:email:${email}`);\r\n    if (!userId) {\r\n      return c.json<APIResponse>({ success: false, error: 'User not found' }, 404);\r\n    }\r\n\r\n    // Get user data\r\n    const userData = await env.VERITAS_KV.get(`user:${userId}`);\r\n    if (!userData) {\r\n      return c.json<APIResponse>({ success: false, error: 'User data not found' }, 404);\r\n    }\r\n\r\n    const user: User = JSON.parse(userData);\r\n\r\n    // Get blockchain transaction\r\n    const storedData = JSON.parse(user.encryptedPrivateData);\r\n    const blockchainTxId = storedData.blockchainTxId;\r\n    \r\n    if (!blockchainTxId) {\r\n      // Legacy user without blockchain tx - try old verification methods\r\n      try {\r\n        if (typeof storedData === 'string' && storedData.startsWith('prod-encrypted-data-')) {\r\n          const expectedPrivateKey = storedData.replace('prod-encrypted-data-', '');\r\n          if (privateKey !== expectedPrivateKey) {\r\n            return c.json<APIResponse>({ success: false, error: 'Invalid private key' }, 401);\r\n          }\r\n        } else {\r\n          const maataraClient = new MaataraClient(env);\r\n          await maataraClient.decryptData(user.encryptedPrivateData, privateKey);\r\n        }\r\n      } catch (error) {\r\n        console.error('Legacy private key verification failed:', error);\r\n        return c.json<APIResponse>({ success: false, error: 'Invalid private key' }, 401);\r\n      }\r\n      \r\n      return c.json<APIResponse>({\r\n        success: true,\r\n        data: { \r\n          user,\r\n          accountType: user.accountType // Include account type for UI\r\n        },\r\n        message: 'Login successful (legacy user)',\r\n      });\r\n    }\r\n\r\n    // New blockchain-based verification\r\n    const txData = await env.VERITAS_KV.get(`blockchain:tx:${blockchainTxId}`);\r\n    if (!txData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Blockchain transaction not found' }, 500);\r\n    }\r\n\r\n    const blockchainTx = JSON.parse(txData);\r\n\r\n    // THE KEY VERIFICATION: Try to decrypt the encrypted user data with the provided private key\r\n    // If decryption succeeds, the user has the correct private key\r\n    try {\r\n      const maataraClient = new MaataraClient(env);\r\n      const decryptedData = await maataraClient.decryptData(\r\n        blockchainTx.encryptedUserData,\r\n        privateKey\r\n      );\r\n      \r\n      // Parse decrypted data to verify it's valid\r\n      const parsedData = JSON.parse(decryptedData);\r\n      \r\n      // Verify the email matches (additional security check)\r\n      if (parsedData.email !== email) {\r\n        return c.json<APIResponse>({ success: false, error: 'Email mismatch' }, 401);\r\n      }\r\n      \r\n      // Login successful! User proved they have the private key by decrypting their data\r\n      return c.json<APIResponse>({\r\n        success: true,\r\n        data: {\r\n          user,\r\n          blockchainTx, // Include blockchain transaction for client verification\r\n          accountType: user.accountType, // Critical for UI permissions\r\n          decryptedUserData: parsedData // Return decrypted data to client\r\n        },\r\n        message: 'Login successful - blockchain verified',\r\n      });\r\n      \r\n    } catch (error) {\r\n      console.error('Decryption verification failed:', error);\r\n      // If decryption fails, the private key is incorrect\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Invalid private key - decryption failed' \r\n      }, 401);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error during login:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport { authHandler };", "// IPFS utilities using Cloudflare IPFS Gateway for reading and Pinata for pinning\r\nimport { Environment } from '../types';\r\n\r\nexport class IPFSClient {\r\n  private gatewayUrl: string;\r\n  private pinataApiKey?: string;\r\n  private pinataSecretKey?: string;\r\n\r\n  constructor(env: Environment) {\r\n    // Use Cloudflare's IPFS gateway for reading\r\n    this.gatewayUrl = env.IPFS_GATEWAY_URL || 'https://cloudflare-ipfs.com';\r\n    \r\n    // Use Pinata for uploading/pinning if configured\r\n    this.pinataApiKey = env.PINATA_API_KEY;\r\n    this.pinataSecretKey = env.PINATA_SECRET_KEY;\r\n  }\r\n\r\n  /**\r\n   * Upload data to IPFS via Pinata (pinning service)\r\n   * Cloudflare gateway is read-only, so we use Pinata for uploads\r\n   */\r\n  async uploadToIPFS(data: string | Uint8Array): Promise<string> {\r\n    try {\r\n      if (!this.pinataApiKey || !this.pinataSecretKey) {\r\n        throw new Error('Pinata API keys not configured. Please set PINATA_API_KEY and PINATA_SECRET_KEY environment variables.');\r\n      }\r\n\r\n      // Convert data to the format Pinata expects\r\n      let content: any;\r\n      if (typeof data === 'string') {\r\n        // For JSON/text content\r\n        content = { data };\r\n      } else {\r\n        // For binary data, we'd need to use pinFileToIPFS instead\r\n        throw new Error('Binary file uploads not yet implemented. Use pinFileToIPFS for files.');\r\n      }\r\n\r\n      // Upload to IPFS using Pinata\r\n      const response = await fetch('https://api.pinata.cloud/pinning/pinJSONToIPFS', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'pinata_api_key': this.pinataApiKey,\r\n          'pinata_secret_api_key': this.pinataSecretKey,\r\n        },\r\n        body: JSON.stringify({\r\n          pinataContent: content,\r\n          pinataMetadata: {\r\n            name: `veritas-document-${Date.now()}`,\r\n          },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Pinata upload failed: ${response.status} ${errorText}`);\r\n      }\r\n\r\n      const result: { IpfsHash: string } = await response.json();\r\n      return result.IpfsHash; // Return the IPFS hash\r\n    } catch (error) {\r\n      console.error('IPFS upload error:', error);\r\n      throw new Error(`Failed to upload to IPFS: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve data from IPFS via Cloudflare gateway\r\n   */\r\n  async retrieveFromIPFS(hash: string): Promise<string> {\r\n    try {\r\n      const response = await fetch(`${this.gatewayUrl}/ipfs/${hash}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`IPFS retrieval failed: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.text();\r\n    } catch (error) {\r\n      console.error('IPFS retrieval error:', error);\r\n      throw new Error(`Failed to retrieve from IPFS: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pin content to ensure it stays available using Pinata\r\n   */\r\n  async pinToIPFS(hash: string): Promise<boolean> {\r\n    try {\r\n      if (!this.pinataApiKey || !this.pinataSecretKey) {\r\n        console.warn('Pinata API keys not configured. Content will not be pinned.');\r\n        return false;\r\n      }\r\n\r\n      // Pin the content using Pinata\r\n      const response = await fetch(`https://api.pinata.cloud/pinning/pinByHash`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'pinata_api_key': this.pinataApiKey,\r\n          'pinata_secret_api_key': this.pinataSecretKey,\r\n        },\r\n        body: JSON.stringify({\r\n          hashToPin: hash,\r\n          pinataMetadata: {\r\n            name: `veritas-document-${Date.now()}`,\r\n          },\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        console.error(`Pinata pinning failed: ${response.status} ${errorText}`);\r\n        return false;\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(`Successfully pinned ${hash} to IPFS via Pinata`);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('IPFS pinning error:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate IPFS URL for public access\r\n   */\r\n  getIPFSUrl(hash: string): string {\r\n    return `${this.gatewayUrl}/ipfs/${hash}`;\r\n  }\r\n\r\n  /**\r\n   * Upload JSON metadata to IPFS\r\n   */\r\n  async uploadJSONToIPFS(jsonData: any): Promise<string> {\r\n    const jsonString = JSON.stringify(jsonData, null, 2);\r\n    return await this.uploadToIPFS(jsonString);\r\n  }\r\n\r\n  /**\r\n   * Retrieve and parse JSON from IPFS\r\n   */\r\n  async retrieveJSONFromIPFS(hash: string): Promise<any> {\r\n    const jsonString = await this.retrieveFromIPFS(hash);\r\n    return JSON.parse(jsonString);\r\n  }\r\n}\r\n\r\n/**\r\n * Create a content-addressed storage record\r\n * This combines IPFS hash with content metadata\r\n */\r\nexport interface IPFSRecord {\r\n  hash: string;\r\n  size: number;\r\n  contentType: string;\r\n  timestamp: number;\r\n  isPinned: boolean;\r\n  gatewayUrl: string;\r\n}\r\n\r\n/**\r\n * Helper function to create an IPFS record with metadata\r\n */\r\nexport async function createIPFSRecord(\r\n  client: IPFSClient,\r\n  content: string | Uint8Array,\r\n  contentType: string = 'application/octet-stream'\r\n): Promise<IPFSRecord> {\r\n  const hash = await client.uploadToIPFS(content);\r\n  const size = typeof content === 'string' ? new TextEncoder().encode(content).length : content.length;\r\n  const isPinned = await client.pinToIPFS(hash);\r\n\r\n  return {\r\n    hash,\r\n    size,\r\n    contentType,\r\n    timestamp: Date.now(),\r\n    isPinned,\r\n    gatewayUrl: client.getIPFSUrl(hash)\r\n  };\r\n}", "/**\r\n * Veritas Documents Chain (VDC) - Post-Quantum Blockchain\r\n * \r\n * A single master blockchain with dual-signature system:\r\n * - User signatures: Prove user authorization\r\n * - System signatures: Prove platform validation\r\n * \r\n * All blocks signed by system master key stored in Cloudflare Secrets.\r\n */\r\n\r\nimport { Environment } from '../types';\r\nimport { IPFSClient, createIPFSRecord } from './ipfs';\r\nimport { MaataraClient } from './crypto';\r\n\r\n/**\r\n * VDC Transaction with Dual Signatures\r\n */\r\nexport interface VDCTransaction {\r\n  id: string;\r\n  type: 'user_registration' | 'document_creation' | 'asset_transfer' | 'admin_action';\r\n  timestamp: number;\r\n  \r\n  // Transaction data (can be encrypted for sensitive info)\r\n  data: {\r\n    // User registration\r\n    userId?: string;\r\n    email?: string;\r\n    kyberPublicKey?: string;\r\n    dilithiumPublicKey?: string;\r\n    encryptedUserData?: any;\r\n    accountType?: 'admin' | 'paid' | 'invited';\r\n    \r\n    // Document creation\r\n    documentId?: string;\r\n    documentHash?: string;\r\n    ipfsHash?: string;\r\n    metadata?: any;\r\n    \r\n    // Asset transfer\r\n    assetId?: string;\r\n    fromUserId?: string;\r\n    toUserId?: string;\r\n    \r\n    // Generic data\r\n    [key: string]: any;\r\n  };\r\n  \r\n  // DUAL SIGNATURES\r\n  signatures: {\r\n    // User signature (proves user authorized this)\r\n    user: {\r\n      publicKey: string;    // User's Dilithium public key\r\n      signature: string;    // User's Dilithium signature\r\n    };\r\n    \r\n    // System signature (proves platform validated this)\r\n    system: {\r\n      publicKey: string;    // System master Dilithium public key\r\n      signature: string;    // System master Dilithium signature\r\n      keyVersion: number;   // For key rotation\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * VDC Block Structure\r\n */\r\nexport interface VDCBlock {\r\n  blockNumber: number;\r\n  timestamp: number;\r\n  previousHash: string;\r\n  hash: string;\r\n  \r\n  // Block contents\r\n  transactions: VDCTransaction[];\r\n  merkleRoot: string;\r\n  \r\n  // Block signature (system master key signs entire block)\r\n  blockSignature: {\r\n    publicKey: string;\r\n    signature: string;\r\n    keyVersion: number;\r\n  };\r\n  \r\n  // IPFS storage\r\n  ipfsHash?: string;\r\n}\r\n\r\n/**\r\n * Genesis Block Data\r\n */\r\nexport interface VDCGenesisData {\r\n  chain: 'VeritasByMaataraBlockChain' | 'VDC';\r\n  version: string;\r\n  description: string;\r\n  generatedAt: string;\r\n  systemPublicKeys: {\r\n    dilithium: string;\r\n    kyber: string;\r\n    keyVersion: number;\r\n  };\r\n}\r\n\r\n/**\r\n * Veritas Documents Chain (VDC) Blockchain\r\n */\r\nexport class VDCBlockchain {\r\n  private env: Environment;\r\n  private ipfsClient: IPFSClient;\r\n  private maataraClient: MaataraClient;\r\n  private genesisBlock: VDCBlock | null = null;\r\n\r\n  constructor(env: Environment) {\r\n    this.env = env;\r\n    this.ipfsClient = new IPFSClient(env);\r\n    this.maataraClient = new MaataraClient(env);\r\n  }\r\n\r\n  /**\r\n   * Initialize the blockchain (load or create genesis)\r\n   */\r\n  async initialize(): Promise<void> {\r\n    // Try to load existing genesis block\r\n    const genesisData = await this.env.VERITAS_KV.get('vdc:block:0');\r\n    \r\n    if (genesisData) {\r\n      this.genesisBlock = JSON.parse(genesisData);\r\n      console.log('\u2705 VDC: Loaded existing genesis block');\r\n    } else {\r\n      console.log('\u26A0\uFE0F  VDC: No genesis block found - call createGenesisBlock()');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create the genesis block for the VDC blockchain\r\n   * This should only be called ONCE when initializing the chain\r\n   */\r\n  async createGenesisBlock(): Promise<VDCBlock> {\r\n    // Check if genesis already exists\r\n    const existing = await this.env.VERITAS_KV.get('vdc:block:0');\r\n    if (existing) {\r\n      throw new Error('Genesis block already exists! Cannot recreate.');\r\n    }\r\n\r\n    // Get system public keys from environment\r\n    const systemDilithiumPublicKey = this.env.SYSTEM_DILITHIUM_PUBLIC_KEY;\r\n    const systemKyberPublicKey = this.env.SYSTEM_KYBER_PUBLIC_KEY;\r\n    const systemKeyVersion = parseInt(this.env.SYSTEM_KEY_VERSION || '1');\r\n\r\n    if (!systemDilithiumPublicKey) {\r\n      throw new Error('SYSTEM_DILITHIUM_PUBLIC_KEY not found in environment');\r\n    }\r\n\r\n    const genesisData: VDCGenesisData = {\r\n      chain: 'VeritasByMaataraBlockChain',\r\n      version: '1.0.0',\r\n      description: 'Veritas Documents Chain - Post-Quantum Legal Document Blockchain',\r\n      generatedAt: new Date().toISOString(),\r\n      systemPublicKeys: {\r\n        dilithium: systemDilithiumPublicKey,\r\n        kyber: systemKyberPublicKey || '',\r\n        keyVersion: systemKeyVersion\r\n      }\r\n    };\r\n\r\n    const timestamp = Date.now();\r\n\r\n    // Create genesis block\r\n    const genesisBlock: VDCBlock = {\r\n      blockNumber: 0,\r\n      timestamp,\r\n      previousHash: '0',\r\n      hash: '',\r\n      transactions: [],\r\n      merkleRoot: this.calculateMerkleRoot([]),\r\n      blockSignature: {\r\n        publicKey: systemDilithiumPublicKey,\r\n        signature: '',\r\n        keyVersion: systemKeyVersion\r\n      }\r\n    };\r\n\r\n    // Calculate genesis hash\r\n    genesisBlock.hash = await this.calculateBlockHash(genesisBlock);\r\n\r\n    // Sign genesis block with system master key\r\n    const blockDataToSign = {\r\n      blockNumber: 0,\r\n      timestamp,\r\n      previousHash: '0',\r\n      hash: genesisBlock.hash,\r\n      merkleRoot: genesisBlock.merkleRoot,\r\n      genesisData\r\n    };\r\n\r\n    genesisBlock.blockSignature.signature = await this.maataraClient.signData(\r\n      JSON.stringify(blockDataToSign),\r\n      this.env.SYSTEM_DILITHIUM_PRIVATE_KEY\r\n    );\r\n\r\n    // Upload to IPFS\r\n    const blockJson = JSON.stringify(genesisBlock, null, 2);\r\n    const ipfsRecord = await createIPFSRecord(this.ipfsClient, blockJson, 'application/json');\r\n    genesisBlock.ipfsHash = ipfsRecord.hash;\r\n\r\n    // Store in KV\r\n    await this.env.VERITAS_KV.put('vdc:block:0', JSON.stringify(genesisBlock));\r\n    await this.env.VERITAS_KV.put('vdc:latest', JSON.stringify({\r\n      blockNumber: 0,\r\n      hash: genesisBlock.hash,\r\n      ipfsHash: genesisBlock.ipfsHash,\r\n      timestamp\r\n    }));\r\n    await this.env.VERITAS_KV.put('vdc:genesis', JSON.stringify(genesisData));\r\n\r\n    this.genesisBlock = genesisBlock;\r\n\r\n    console.log('\uD83C\uDF89 VDC: Genesis block created!');\r\n    console.log(`   Block Hash: ${genesisBlock.hash}`);\r\n    console.log(`   IPFS Hash: ${genesisBlock.ipfsHash}`);\r\n\r\n    return genesisBlock;\r\n  }\r\n\r\n  /**\r\n   * Add a transaction to the pending pool (with dual signatures)\r\n   */\r\n  async addTransaction(\r\n    type: VDCTransaction['type'],\r\n    data: VDCTransaction['data'],\r\n    userDilithiumPrivateKey: string,\r\n    userDilithiumPublicKey: string\r\n  ): Promise<string> {\r\n    // Create transaction ID\r\n    const txId = `vdc_tx_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n\r\n    // Prepare transaction data for signing\r\n    const txData = {\r\n      id: txId,\r\n      type,\r\n      timestamp: Date.now(),\r\n      data\r\n    };\r\n\r\n    // USER SIGNATURE: User signs the transaction\r\n    const userSignature = await this.maataraClient.signData(\r\n      JSON.stringify(txData),\r\n      userDilithiumPrivateKey\r\n    );\r\n\r\n    // SYSTEM SIGNATURE: System validates and signs the transaction\r\n    const systemKeyVersion = parseInt(this.env.SYSTEM_KEY_VERSION || '1');\r\n    const systemPublicKey = this.env.SYSTEM_DILITHIUM_PUBLIC_KEY;\r\n    const systemPrivateKey = this.env.SYSTEM_DILITHIUM_PRIVATE_KEY;\r\n\r\n    if (!systemPrivateKey || !systemPublicKey) {\r\n      throw new Error('System master keys not configured in environment');\r\n    }\r\n\r\n    const systemSignature = await this.maataraClient.signData(\r\n      JSON.stringify(txData),\r\n      systemPrivateKey\r\n    );\r\n\r\n    // Create final transaction with dual signatures\r\n    const transaction: VDCTransaction = {\r\n      ...txData,\r\n      signatures: {\r\n        user: {\r\n          publicKey: userDilithiumPublicKey,\r\n          signature: userSignature\r\n        },\r\n        system: {\r\n          publicKey: systemPublicKey,\r\n          signature: systemSignature,\r\n          keyVersion: systemKeyVersion\r\n        }\r\n      }\r\n    };\r\n\r\n    // Store in pending pool\r\n    await this.env.VERITAS_KV.put(\r\n      `vdc:pending:${txId}`,\r\n      JSON.stringify(transaction)\r\n    );\r\n\r\n    // Increment pending count\r\n    const countStr = await this.env.VERITAS_KV.get('vdc:pending:count') || '0';\r\n    const count = parseInt(countStr) + 1;\r\n    await this.env.VERITAS_KV.put('vdc:pending:count', count.toString());\r\n\r\n    console.log(`\u2705 VDC: Transaction ${txId} added to pending pool`);\r\n    console.log(`   Type: ${type}`);\r\n    console.log(`   Pending count: ${count}`);\r\n\r\n    return txId;\r\n  }\r\n\r\n  /**\r\n   * Mine a new block with pending transactions\r\n   */\r\n  async mineBlock(): Promise<VDCBlock> {\r\n    // Get pending transactions\r\n    const pendingList = await this.env.VERITAS_KV.list({ prefix: 'vdc:pending:' });\r\n    const transactions: VDCTransaction[] = [];\r\n\r\n    for (const key of pendingList.keys) {\r\n      if (key.name === 'vdc:pending:count') continue;\r\n      \r\n      const txData = await this.env.VERITAS_KV.get(key.name);\r\n      if (txData) {\r\n        transactions.push(JSON.parse(txData));\r\n      }\r\n    }\r\n\r\n    if (transactions.length === 0) {\r\n      throw new Error('No pending transactions to mine');\r\n    }\r\n\r\n    // Get previous block\r\n    const latestData = await this.env.VERITAS_KV.get('vdc:latest');\r\n    if (!latestData) {\r\n      throw new Error('No latest block found - create genesis first');\r\n    }\r\n\r\n    const latest = JSON.parse(latestData);\r\n    const blockNumber = latest.blockNumber + 1;\r\n    const timestamp = Date.now();\r\n\r\n    // Create block\r\n    const block: VDCBlock = {\r\n      blockNumber,\r\n      timestamp,\r\n      previousHash: latest.hash,\r\n      hash: '',\r\n      transactions,\r\n      merkleRoot: this.calculateMerkleRoot(transactions),\r\n      blockSignature: {\r\n        publicKey: this.env.SYSTEM_DILITHIUM_PUBLIC_KEY,\r\n        signature: '',\r\n        keyVersion: parseInt(this.env.SYSTEM_KEY_VERSION || '1')\r\n      }\r\n    };\r\n\r\n    // Calculate block hash\r\n    block.hash = await this.calculateBlockHash(block);\r\n\r\n    // Sign block with system master key\r\n    const blockDataToSign = {\r\n      blockNumber,\r\n      timestamp,\r\n      previousHash: latest.hash,\r\n      hash: block.hash,\r\n      merkleRoot: block.merkleRoot,\r\n      transactionCount: transactions.length\r\n    };\r\n\r\n    block.blockSignature.signature = await this.maataraClient.signData(\r\n      JSON.stringify(blockDataToSign),\r\n      this.env.SYSTEM_DILITHIUM_PRIVATE_KEY\r\n    );\r\n\r\n    // Upload to IPFS\r\n    const blockJson = JSON.stringify(block, null, 2);\r\n    const ipfsRecord = await createIPFSRecord(this.ipfsClient, blockJson, 'application/json');\r\n    block.ipfsHash = ipfsRecord.hash;\r\n\r\n    // Store block in KV\r\n    await this.env.VERITAS_KV.put(`vdc:block:${blockNumber}`, JSON.stringify(block));\r\n    \r\n    // Update latest pointer\r\n    await this.env.VERITAS_KV.put('vdc:latest', JSON.stringify({\r\n      blockNumber,\r\n      hash: block.hash,\r\n      ipfsHash: block.ipfsHash,\r\n      timestamp\r\n    }));\r\n\r\n    // Index transactions\r\n    for (const tx of transactions) {\r\n      await this.env.VERITAS_KV.put(`vdc:tx:${tx.id}`, JSON.stringify({\r\n        blockNumber,\r\n        txId: tx.id,\r\n        type: tx.type,\r\n        timestamp: tx.timestamp\r\n      }));\r\n    }\r\n\r\n    // Clear pending transactions\r\n    for (const key of pendingList.keys) {\r\n      await this.env.VERITAS_KV.delete(key.name);\r\n    }\r\n    await this.env.VERITAS_KV.put('vdc:pending:count', '0');\r\n\r\n    console.log(`\uD83C\uDF89 VDC: Block ${blockNumber} mined!`);\r\n    console.log(`   Hash: ${block.hash}`);\r\n    console.log(`   IPFS: ${block.ipfsHash}`);\r\n    console.log(`   Transactions: ${transactions.length}`);\r\n\r\n    return block;\r\n  }\r\n\r\n  /**\r\n   * Get the latest block\r\n   */\r\n  async getLatestBlock(): Promise<VDCBlock> {\r\n    const latestData = await this.env.VERITAS_KV.get('vdc:latest');\r\n    if (!latestData) {\r\n      throw new Error('No latest block found');\r\n    }\r\n\r\n    const latest = JSON.parse(latestData);\r\n    const blockData = await this.env.VERITAS_KV.get(`vdc:block:${latest.blockNumber}`);\r\n    \r\n    if (!blockData) {\r\n      throw new Error(`Block ${latest.blockNumber} not found`);\r\n    }\r\n\r\n    return JSON.parse(blockData);\r\n  }\r\n\r\n  /**\r\n   * Get a block by number\r\n   */\r\n  async getBlock(blockNumber: number): Promise<VDCBlock | null> {\r\n    const blockData = await this.env.VERITAS_KV.get(`vdc:block:${blockNumber}`);\r\n    return blockData ? JSON.parse(blockData) : null;\r\n  }\r\n\r\n  /**\r\n   * Get transaction by ID\r\n   */\r\n  async getTransaction(txId: string): Promise<VDCTransaction | null> {\r\n    const txIndexData = await this.env.VERITAS_KV.get(`vdc:tx:${txId}`);\r\n    if (!txIndexData) return null;\r\n\r\n    const txIndex = JSON.parse(txIndexData);\r\n    const block = await this.getBlock(txIndex.blockNumber);\r\n    \r\n    if (!block) return null;\r\n\r\n    return block.transactions.find(tx => tx.id === txId) || null;\r\n  }\r\n\r\n  /**\r\n   * Verify a transaction's dual signatures\r\n   */\r\n  async verifyTransaction(transaction: VDCTransaction): Promise<boolean> {\r\n    try {\r\n      const txData = {\r\n        id: transaction.id,\r\n        type: transaction.type,\r\n        timestamp: transaction.timestamp,\r\n        data: transaction.data\r\n      };\r\n      const dataToVerify = JSON.stringify(txData);\r\n\r\n      // Verify user signature\r\n      const userSigValid = await this.maataraClient.verifySignature(\r\n        dataToVerify,\r\n        transaction.signatures.user.signature,\r\n        transaction.signatures.user.publicKey\r\n      );\r\n\r\n      if (!userSigValid) {\r\n        console.error('\u274C VDC: User signature invalid');\r\n        return false;\r\n      }\r\n\r\n      // Verify system signature\r\n      const systemSigValid = await this.maataraClient.verifySignature(\r\n        dataToVerify,\r\n        transaction.signatures.system.signature,\r\n        transaction.signatures.system.publicKey\r\n      );\r\n\r\n      if (!systemSigValid) {\r\n        console.error('\u274C VDC: System signature invalid');\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('\u274C VDC: Transaction verification failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify a block's integrity\r\n   */\r\n  async verifyBlock(block: VDCBlock): Promise<boolean> {\r\n    try {\r\n      // Verify block hash\r\n      const expectedHash = await this.calculateBlockHash(block);\r\n      if (expectedHash !== block.hash) {\r\n        console.error('\u274C VDC: Block hash mismatch');\r\n        return false;\r\n      }\r\n\r\n      // Verify merkle root\r\n      const expectedMerkleRoot = this.calculateMerkleRoot(block.transactions);\r\n      if (expectedMerkleRoot !== block.merkleRoot) {\r\n        console.error('\u274C VDC: Merkle root mismatch');\r\n        return false;\r\n      }\r\n\r\n      // Verify block signature\r\n      const blockDataToVerify = {\r\n        blockNumber: block.blockNumber,\r\n        timestamp: block.timestamp,\r\n        previousHash: block.previousHash,\r\n        hash: block.hash,\r\n        merkleRoot: block.merkleRoot,\r\n        transactionCount: block.transactions.length\r\n      };\r\n\r\n      const blockSigValid = await this.maataraClient.verifySignature(\r\n        JSON.stringify(blockDataToVerify),\r\n        block.blockSignature.signature,\r\n        block.blockSignature.publicKey\r\n      );\r\n\r\n      if (!blockSigValid) {\r\n        console.error('\u274C VDC: Block signature invalid');\r\n        return false;\r\n      }\r\n\r\n      // Verify all transactions\r\n      for (const tx of block.transactions) {\r\n        if (!(await this.verifyTransaction(tx))) {\r\n          console.error(`\u274C VDC: Transaction ${tx.id} invalid`);\r\n          return false;\r\n        }\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error('\u274C VDC: Block verification failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate block hash\r\n   */\r\n  private async calculateBlockHash(block: VDCBlock): Promise<string> {\r\n    const data = `${block.blockNumber}${block.previousHash}${block.merkleRoot}${block.timestamp}`;\r\n    \r\n    // Use Web Crypto API for SHA-256\r\n    const encoder = new TextEncoder();\r\n    const dataBuffer = encoder.encode(data);\r\n    const hashBuffer = await crypto.subtle.digest('SHA-256', dataBuffer);\r\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\r\n    const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');\r\n    \r\n    return hashHex;\r\n  }\r\n\r\n  /**\r\n   * Calculate Merkle root for transactions\r\n   */\r\n  private calculateMerkleRoot(transactions: VDCTransaction[]): string {\r\n    if (transactions.length === 0) {\r\n      return '0000000000000000000000000000000000000000000000000000000000000000';\r\n    }\r\n\r\n    // Simple merkle root: hash all transaction IDs together\r\n    const txHashes = transactions.map(tx => this.hashString(tx.id));\r\n    return this.hashString(txHashes.join(''));\r\n  }\r\n\r\n  /**\r\n   * Hash a string using simple hash function\r\n   */\r\n  private hashString(str: string): string {\r\n    let hash = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n      const char = str.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32-bit integer\r\n    }\r\n    return Math.abs(hash).toString(16).padStart(8, '0');\r\n  }\r\n\r\n  /**\r\n   * Get blockchain statistics\r\n   */\r\n  async getStats(): Promise<any> {\r\n    const latestData = await this.env.VERITAS_KV.get('vdc:latest');\r\n    const pendingCount = await this.env.VERITAS_KV.get('vdc:pending:count') || '0';\r\n    \r\n    if (!latestData) {\r\n      return {\r\n        initialized: false,\r\n        message: 'Genesis block not created yet'\r\n      };\r\n    }\r\n\r\n    const latest = JSON.parse(latestData);\r\n\r\n    return {\r\n      initialized: true,\r\n      chain: 'VeritasByMaataraBlockChain (VDC)',\r\n      totalBlocks: latest.blockNumber + 1,\r\n      latestBlock: {\r\n        number: latest.blockNumber,\r\n        hash: latest.hash,\r\n        ipfsHash: latest.ipfsHash,\r\n        timestamp: latest.timestamp\r\n      },\r\n      pendingTransactions: parseInt(pendingCount),\r\n      genesisHash: this.genesisBlock?.hash || 'unknown'\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Initialize the VDC blockchain\r\n */\r\nexport async function initializeVDC(env: Environment): Promise<VDCBlockchain> {\r\n  const vdc = new VDCBlockchain(env);\r\n  await vdc.initialize();\r\n  return vdc;\r\n}\r\n\r\n/**\r\n * Helper function to add user registration to VDC\r\n */\r\nexport async function addUserToVDC(\r\n  vdc: VDCBlockchain,\r\n  userId: string,\r\n  email: string,\r\n  kyberPublicKey: string,\r\n  dilithiumPublicKey: string,\r\n  encryptedUserData: any,\r\n  accountType: 'admin' | 'paid' | 'invited',\r\n  userDilithiumPrivateKey: string\r\n): Promise<string> {\r\n  const txData = {\r\n    userId,\r\n    email,\r\n    kyberPublicKey,\r\n    dilithiumPublicKey,\r\n    encryptedUserData,\r\n    accountType\r\n  };\r\n\r\n  return await vdc.addTransaction(\r\n    'user_registration',\r\n    txData,\r\n    userDilithiumPrivateKey,\r\n    dilithiumPublicKey\r\n  );\r\n}\r\n\r\n/**\r\n * Helper function to add document creation to VDC\r\n */\r\nexport async function addDocumentToVDC(\r\n  vdc: VDCBlockchain,\r\n  documentId: string,\r\n  documentHash: string,\r\n  ipfsHash: string,\r\n  metadata: any,\r\n  userDilithiumPrivateKey: string,\r\n  userDilithiumPublicKey: string\r\n): Promise<string> {\r\n  const txData = {\r\n    documentId,\r\n    documentHash,\r\n    ipfsHash,\r\n    metadata\r\n  };\r\n\r\n  return await vdc.addTransaction(\r\n    'document_creation',\r\n    txData,\r\n    userDilithiumPrivateKey,\r\n    userDilithiumPublicKey\r\n  );\r\n}\r\n\r\n/**\r\n * Helper function to add asset transfer to VDC\r\n */\r\nexport async function addAssetTransferToVDC(\r\n  vdc: VDCBlockchain,\r\n  assetId: string,\r\n  fromUserId: string,\r\n  toUserId: string,\r\n  userDilithiumPrivateKey: string,\r\n  userDilithiumPublicKey: string\r\n): Promise<string> {\r\n  const txData = {\r\n    assetId,\r\n    fromUserId,\r\n    toUserId\r\n  };\r\n\r\n  return await vdc.addTransaction(\r\n    'asset_transfer',\r\n    txData,\r\n    userDilithiumPrivateKey,\r\n    userDilithiumPublicKey\r\n  );\r\n}\r\n", "import { Hono } from 'hono';\r\nimport { Environment, Asset, User, APIResponse } from '../types';\r\nimport { MaataraClient, generateId, uploadToIPFS } from '../utils/crypto';\r\nimport { initializeVDC, addDocumentToVDC, addAssetTransferToVDC } from '../utils/blockchain';\r\n\r\nconst assetHandler = new Hono<{ Bindings: Environment }>();\r\n\r\n// Create new asset/NFT\r\nassetHandler.post('/create', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const {\r\n      userId,\r\n      title,\r\n      description,\r\n      documentType,\r\n      documentData,\r\n      isPubliclySearchable,\r\n      publicMetadata,\r\n      privateKey,\r\n    } = await c.req.json();\r\n\r\n    if (!userId || !title || !documentData || !privateKey) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'User ID, title, document data, and private key are required' \r\n      }, 400);\r\n    }\r\n\r\n    // Verify user exists\r\n    const userData = await env.VERITAS_KV.get(`user:${userId}`);\r\n    if (!userData) {\r\n      return c.json<APIResponse>({ success: false, error: 'User not found' }, 404);\r\n    }\r\n\r\n    const user: User = JSON.parse(userData);\r\n    const maataraClient = new MaataraClient(env);\r\n\r\n    // Encrypt document data with user's public key\r\n    const encryptedData = await maataraClient.encryptData(\r\n      JSON.stringify(documentData),\r\n      user.publicKey\r\n    );\r\n\r\n    // Upload encrypted data to IPFS\r\n    const ipfsHash = await uploadToIPFS(encryptedData, env.IPFS_API_KEY);\r\n\r\n    // Create asset metadata for signing\r\n    const assetMetadata = {\r\n      title,\r\n      description,\r\n      documentType,\r\n      ipfsHash,\r\n      createdAt: Date.now(),\r\n      creatorId: userId,\r\n    };\r\n\r\n    // Sign the asset metadata\r\n    const signature = await maataraClient.signData(\r\n      JSON.stringify(assetMetadata),\r\n      privateKey\r\n    );\r\n\r\n    // Create asset\r\n    const assetId = generateId();\r\n    const tokenId = `VD-${Date.now()}-${assetId.slice(0, 8)}`;\r\n\r\n    const asset: Asset = {\r\n      id: assetId,\r\n      tokenId,\r\n      ownerId: userId,\r\n      creatorId: userId,\r\n      title,\r\n      description,\r\n      documentType: documentType || 'other',\r\n      ipfsHash,\r\n      encryptedData,\r\n      signature,\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now(),\r\n      isPubliclySearchable: isPubliclySearchable || false,\r\n      publicMetadata: publicMetadata || {},\r\n    };\r\n\r\n    // Save asset to KV\r\n    await env.VERITAS_KV.put(`asset:${assetId}`, JSON.stringify(asset));\r\n    \r\n    // Add to user's assets list\r\n    const userAssetsKey = `user:${userId}:assets`;\r\n    const userAssets = await env.VERITAS_KV.get(userAssetsKey);\r\n    const assetsList = userAssets ? JSON.parse(userAssets) : [];\r\n    assetsList.push(assetId);\r\n    await env.VERITAS_KV.put(userAssetsKey, JSON.stringify(assetsList));\r\n\r\n    // Add asset creation to VDC blockchain\r\n    const blockchain = await initializeVDC(env);\r\n    \r\n    // Use IPFS hash as document hash for now\r\n    // In production, compute SHA-256 of encrypted data\r\n    const documentHash = ipfsHash;\r\n    \r\n    const txId = await addDocumentToVDC(\r\n      blockchain,\r\n      assetId,\r\n      documentHash,\r\n      ipfsHash,\r\n      {\r\n        title,\r\n        documentType: documentType || 'other',\r\n        isPubliclySearchable: isPubliclySearchable || false,\r\n        publicMetadata: publicMetadata || {},\r\n      },\r\n      privateKey,\r\n      user.publicKey // Using existing publicKey field\r\n    );\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: { asset, blockchainTxId: txId },\r\n      message: 'Asset created successfully',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating asset:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Get asset details\r\nassetHandler.get('/:assetId', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const assetId = c.req.param('assetId');\r\n\r\n    const assetData = await env.VERITAS_KV.get(`asset:${assetId}`);\r\n    if (!assetData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Asset not found' }, 404);\r\n    }\r\n\r\n    const asset: Asset = JSON.parse(assetData);\r\n\r\n    // Return public data only (no encrypted content)\r\n    const publicAsset = {\r\n      id: asset.id,\r\n      tokenId: asset.tokenId,\r\n      ownerId: asset.ownerId,\r\n      creatorId: asset.creatorId,\r\n      title: asset.title,\r\n      description: asset.description,\r\n      documentType: asset.documentType,\r\n      createdAt: asset.createdAt,\r\n      updatedAt: asset.updatedAt,\r\n      isPubliclySearchable: asset.isPubliclySearchable,\r\n      publicMetadata: asset.publicMetadata,\r\n    };\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: publicAsset,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting asset:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Get user's assets\r\nassetHandler.get('/user/:userId', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const userId = c.req.param('userId');\r\n\r\n    const userAssetsKey = `user:${userId}:assets`;\r\n    const userAssets = await env.VERITAS_KV.get(userAssetsKey);\r\n    \r\n    if (!userAssets) {\r\n      return c.json<APIResponse>({\r\n        success: true,\r\n        data: { assets: [] },\r\n      });\r\n    }\r\n\r\n    const assetIds: string[] = JSON.parse(userAssets);\r\n    const assets = [];\r\n\r\n    for (const assetId of assetIds) {\r\n      const assetData = await env.VERITAS_KV.get(`asset:${assetId}`);\r\n      if (assetData) {\r\n        const asset: Asset = JSON.parse(assetData);\r\n        // Return public data only\r\n        assets.push({\r\n          id: asset.id,\r\n          tokenId: asset.tokenId,\r\n          ownerId: asset.ownerId,\r\n          creatorId: asset.creatorId,\r\n          title: asset.title,\r\n          description: asset.description,\r\n          documentType: asset.documentType,\r\n          createdAt: asset.createdAt,\r\n          updatedAt: asset.updatedAt,\r\n          isPubliclySearchable: asset.isPubliclySearchable,\r\n          publicMetadata: asset.publicMetadata,\r\n        });\r\n      }\r\n    }\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: { assets },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting user assets:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Transfer asset ownership\r\nassetHandler.post('/transfer', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { assetId, fromUserId, toUserId, privateKey } = await c.req.json();\r\n\r\n    if (!assetId || !fromUserId || !toUserId || !privateKey) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Asset ID, from user ID, to user ID, and private key are required' \r\n      }, 400);\r\n    }\r\n\r\n    // Verify asset exists and user owns it\r\n    const assetData = await env.VERITAS_KV.get(`asset:${assetId}`);\r\n    if (!assetData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Asset not found' }, 404);\r\n    }\r\n\r\n    const asset: Asset = JSON.parse(assetData);\r\n    if (asset.ownerId !== fromUserId) {\r\n      return c.json<APIResponse>({ success: false, error: 'You do not own this asset' }, 403);\r\n    }\r\n\r\n    // Verify from user exists\r\n    const fromUserData = await env.VERITAS_KV.get(`user:${fromUserId}`);\r\n    if (!fromUserData) {\r\n      return c.json<APIResponse>({ success: false, error: 'From user not found' }, 404);\r\n    }\r\n\r\n    const fromUser: User = JSON.parse(fromUserData);\r\n\r\n    // Verify target user exists\r\n    const toUserData = await env.VERITAS_KV.get(`user:${toUserId}`);\r\n    if (!toUserData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Target user not found' }, 404);\r\n    }\r\n\r\n    const maataraClient = new MaataraClient(env);\r\n\r\n    // Create transfer transaction for signing\r\n    const transferData = {\r\n      assetId,\r\n      fromUserId,\r\n      toUserId,\r\n      timestamp: Date.now(),\r\n    };\r\n\r\n    // Sign the transfer\r\n    const signature = await maataraClient.signData(\r\n      JSON.stringify(transferData),\r\n      privateKey\r\n    );\r\n\r\n    // Update asset ownership\r\n    asset.ownerId = toUserId;\r\n    asset.updatedAt = Date.now();\r\n\r\n    // Save updated asset\r\n    await env.VERITAS_KV.put(`asset:${assetId}`, JSON.stringify(asset));\r\n\r\n    // Remove from old owner's assets list\r\n    const oldOwnerAssetsKey = `user:${fromUserId}:assets`;\r\n    const oldOwnerAssets = await env.VERITAS_KV.get(oldOwnerAssetsKey);\r\n    if (oldOwnerAssets) {\r\n      const assetsList: string[] = JSON.parse(oldOwnerAssets);\r\n      const updatedList = assetsList.filter(id => id !== assetId);\r\n      await env.VERITAS_KV.put(oldOwnerAssetsKey, JSON.stringify(updatedList));\r\n    }\r\n\r\n    // Add to new owner's assets list\r\n    const newOwnerAssetsKey = `user:${toUserId}:assets`;\r\n    const newOwnerAssets = await env.VERITAS_KV.get(newOwnerAssetsKey);\r\n    const newAssetsList = newOwnerAssets ? JSON.parse(newOwnerAssets) : [];\r\n    newAssetsList.push(assetId);\r\n    await env.VERITAS_KV.put(newOwnerAssetsKey, JSON.stringify(newAssetsList));\r\n\r\n    // Add transfer to VDC blockchain\r\n    const blockchain = await initializeVDC(env);\r\n    const txId = await addAssetTransferToVDC(\r\n      blockchain,\r\n      assetId,\r\n      fromUserId,\r\n      toUserId,\r\n      privateKey,\r\n      fromUser.publicKey\r\n    );\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: { asset, blockchainTxId: txId },\r\n      message: 'Asset transferred successfully',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error transferring asset:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport { assetHandler };", "let wasm;\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n * @returns {string}\n */\nexport function kyber_keygen() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const ret = wasm.kyber_keygen();\n        deferred1_0 = ret[0];\n        deferred1_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n * @param {string} public_b64u\n * @returns {string}\n */\nexport function kyber_encaps(public_b64u) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(public_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.kyber_encaps(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} secret_b64u\n * @param {string} kem_ct_b64u\n * @returns {string}\n */\nexport function kyber_decaps(secret_b64u, kem_ct_b64u) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(secret_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(kem_ct_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.kyber_decaps(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} secret_b64u\n * @param {string} info_b64u\n * @param {string | null | undefined} salt_b64u\n * @param {number} len\n * @returns {string}\n */\nexport function hkdf_sha256(secret_b64u, info_b64u, salt_b64u, len) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(secret_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(info_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(salt_b64u) ? 0 : passStringToWasm0(salt_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        const ret = wasm.hkdf_sha256(ptr0, len0, ptr1, len1, ptr2, len2, len);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\n/**\n * @param {string} key_b64u\n * @param {string} dek_b64u\n * @param {string} aad_b64u\n * @returns {string}\n */\nexport function aes_gcm_wrap(key_b64u, dek_b64u, aad_b64u) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(key_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(dek_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(aad_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ret = wasm.aes_gcm_wrap(ptr0, len0, ptr1, len1, ptr2, len2);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\n/**\n * @param {string} key_b64u\n * @param {string} iv_b64u\n * @param {string} ct_b64u\n * @param {string} aad_b64u\n * @returns {string}\n */\nexport function aes_gcm_unwrap(key_b64u, iv_b64u, ct_b64u, aad_b64u) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const ptr0 = passStringToWasm0(key_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(iv_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(ct_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ptr3 = passStringToWasm0(aad_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len3 = WASM_VECTOR_LEN;\n        const ret = wasm.aes_gcm_unwrap(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        deferred5_0 = ret[0];\n        deferred5_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @returns {string}\n */\nexport function dilithium_keygen() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const ret = wasm.dilithium_keygen();\n        deferred1_0 = ret[0];\n        deferred1_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\n/**\n * @param {string} message_b64u\n * @param {string} secret_b64u\n * @returns {string}\n */\nexport function dilithium_sign(message_b64u, secret_b64u) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(message_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(secret_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.dilithium_sign(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} message_b64u\n * @param {string} signature_b64u\n * @param {string} public_b64u\n * @returns {string}\n */\nexport function dilithium_verify(message_b64u, signature_b64u, public_b64u) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(message_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(signature_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(public_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ret = wasm.dilithium_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\nexport function start() {\n    wasm.start();\n}\n\n/**\n * @param {string} json\n * @returns {string}\n */\nexport function jcs_canonicalize(json) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.jcs_canonicalize(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} policy_json\n * @returns {string}\n */\nexport function preimage_governance(policy_json) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(policy_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_governance(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} header_json\n * @param {string} asset_json\n * @returns {string}\n */\nexport function preimage_asset_mint(header_json, asset_json) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(header_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(asset_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_asset_mint(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} header_json\n * @returns {string}\n */\nexport function preimage_asset_transfer(header_json) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(header_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_asset_transfer(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} user_id\n * @param {string} root_hex\n * @param {string} epoch\n * @param {string} chains_json\n * @returns {string}\n */\nexport function preimage_anchor(user_id, root_hex, epoch, chains_json) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const ptr0 = passStringToWasm0(user_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(root_hex, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(epoch, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ptr3 = passStringToWasm0(chains_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len3 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_anchor(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        deferred5_0 = ret[0];\n        deferred5_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @param {string} receiver\n * @param {number} bps\n * @returns {string}\n */\nexport function validate_royalty(receiver, bps) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(receiver, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.validate_royalty(ptr0, len0, bps);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} msg_b64u\n * @param {string} attestations_json\n * @param {string | null} [allowed_public_keys_json]\n * @returns {string}\n */\nexport function verify_attestations(msg_b64u, attestations_json, allowed_public_keys_json) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(msg_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(attestations_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(allowed_public_keys_json) ? 0 : passStringToWasm0(allowed_public_keys_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        const ret = wasm.verify_attestations(ptr0, len0, ptr1, len1, ptr2, len2);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_buffer_a1a27a0dfa70165d = function(arg0) {\n        const ret = arg0.buffer;\n        return ret;\n    };\n    imports.wbg.__wbg_call_f2db6205e5c51dc8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_fbe8be8bf6436ce5 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_crypto_574e78ad8b13b65f = function(arg0) {\n        const ret = arg0.crypto;\n        return ret;\n    };\n    imports.wbg.__wbg_getRandomValues_b8f5dbd5f3995a9e = function() { return handleError(function (arg0, arg1) {\n        arg0.getRandomValues(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_log_ea49c7a7eb7689d1 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_msCrypto_a61aeb35a24c1329 = function(arg0) {\n        const ret = arg0.msCrypto;\n        return ret;\n    };\n    imports.wbg.__wbg_new_e52b3efaaa774f96 = function(arg0) {\n        const ret = new Uint8Array(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_ff528e72d35de39a = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_3b01ecda099177e8 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(arg0, arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_08f872dc1e3ada2e = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_node_905d3e251edff8a2 = function(arg0) {\n        const ret = arg0.node;\n        return ret;\n    };\n    imports.wbg.__wbg_process_dc0fbacc7c1c06f7 = function(arg0) {\n        const ret = arg0.process;\n        return ret;\n    };\n    imports.wbg.__wbg_randomFillSync_ac0988aba3254290 = function() { return handleError(function (arg0, arg1) {\n        arg0.randomFillSync(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_require_60cc747a6bc5215a = function() { return handleError(function () {\n        const ret = module.require;\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_fe4e79d1ed3b0e9b = function(arg0, arg1, arg2) {\n        arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_487c52c58d65314d = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_ee9704f328b6b291 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_78c9e3071b912620 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_a093d21393777366 = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_subarray_dd4ade7d53bd8e26 = function(arg0, arg1, arg2) {\n        const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_versions_c01dfd4722a88165 = function(arg0) {\n        const ret = arg0.versions;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = arg0;\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(arg0) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('core_pqc_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n", "// Ma'atara Core PQC Toolkit\r\n// Post-Quantum Cryptography for Browser and Node.js\r\n\r\nexport interface KyberKeypair {\r\n  public_b64u: string;\r\n  secret_b64u: string;\r\n}\r\n\r\nexport interface KyberEncap {\r\n  kem_ct_b64u: string;\r\n  shared_b64u: string;\r\n}\r\n\r\nexport interface AesGcmWrap {\r\n  iv_b64u: string;\r\n  ct_b64u: string;\r\n}\r\n\r\nexport interface DilithiumKeypair {\r\n  algorithm: string;\r\n  public_b64u: string;\r\n  secret_b64u: string;\r\n}\r\n\r\nexport interface DilithiumSignResult {\r\n  signature_b64u: string;\r\n  algorithm: string;\r\n}\r\n\r\nexport interface DilithiumVerifyResult {\r\n  is_valid: boolean;\r\n  algorithm: string;\r\n}\r\n\r\nexport interface HkdfResult {\r\n  key_b64u: string;\r\n}\r\n\r\nexport interface AesGcmUnwrapResult {\r\n  dek_b64u: string;\r\n}\r\n\r\n// Import WASM functions (namespace import for better bundler compatibility)\r\nimport * as wasmPkg from '@maatara/core-pqc-wasm';\r\nconst wasm_kyber_keygen = (wasmPkg as any).kyber_keygen as () => string;\r\nconst wasm_kyber_encaps = (wasmPkg as any).kyber_encaps as (p: string) => string;\r\nconst wasm_kyber_decaps = (wasmPkg as any).kyber_decaps as (s: string, c: string) => string;\r\nconst wasm_hkdf_sha256 = (wasmPkg as any).hkdf_sha256 as (s: string, i: string, salt?: string, len?: number) => string;\r\nconst wasm_aes_gcm_wrap = (wasmPkg as any).aes_gcm_wrap as (k: string, d: string, a: string) => string;\r\nconst wasm_aes_gcm_unwrap = (wasmPkg as any).aes_gcm_unwrap as (k: string, iv: string, ct: string, a: string) => string;\r\nconst wasm_dilithium_keygen = (wasmPkg as any).dilithium_keygen as () => string;\r\nconst wasm_dilithium_sign = (wasmPkg as any).dilithium_sign as (m: string, s: string) => string;\r\nconst wasm_dilithium_verify = (wasmPkg as any).dilithium_verify as (m: string, sig: string, p: string) => string;\r\n\r\n// Deterministic/canonicalization and governance helpers\r\nexport interface CanonicalOut { canonical: string; msg_b64u?: string; msgB64u?: string }\r\n\r\n// Initialize WASM\r\nlet wasmReady = false;\r\n\r\n/**\r\n * Initialize the underlying WASM module.\r\n * - In browsers/bundlers where the glue knows how to fetch the .wasm, you can call without params.\r\n * - If your bundler provides a URL or Module for the .wasm, pass it as the first argument.\r\n */\r\nexport async function initWasm(wasmInput?: any): Promise<void> {\r\n  if (wasmReady) return;\r\n  const maybeInit = (wasmPkg as any).default;\r\n  if (typeof maybeInit === 'function') {\r\n    // Some environments require a URL/Module/bytes for initialization.\r\n    // We forward the optional value if provided; otherwise let the glue resolve it.\r\n    if (wasmInput !== undefined) {\r\n      await maybeInit(wasmInput);\r\n    } else {\r\n      await maybeInit();\r\n    }\r\n  }\r\n  wasmReady = true;\r\n}\r\n\r\n// Kyber functions\r\nexport async function kyberKeygen(): Promise<KyberKeypair> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_kyber_keygen());\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function kyberEncaps(publicB64u: string): Promise<KyberEncap> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_kyber_encaps(publicB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function kyberDecaps(secretB64u: string, kemCtB64u: string): Promise<{ shared_b64u: string }> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_kyber_decaps(secretB64u, kemCtB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// HKDF functions\r\nexport async function hkdfSha256(\r\n  secretB64u: string,\r\n  infoB64u: string,\r\n  saltB64u?: string,\r\n  len: number = 32\r\n): Promise<HkdfResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_hkdf_sha256(secretB64u, infoB64u, saltB64u, len));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// AES-GCM functions\r\nexport async function aesGcmWrap(\r\n  keyB64u: string,\r\n  dekB64u: string,\r\n  aadB64u: string\r\n): Promise<AesGcmWrap> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_aes_gcm_wrap(keyB64u, dekB64u, aadB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function aesGcmUnwrap(\r\n  keyB64u: string,\r\n  ivB64u: string,\r\n  ctB64u: string,\r\n  aadB64u: string\r\n): Promise<AesGcmUnwrapResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_aes_gcm_unwrap(keyB64u, ivB64u, ctB64u, aadB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// Dilithium functions\r\nexport async function dilithiumKeygen(): Promise<DilithiumKeypair> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_dilithium_keygen());\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function dilithiumSign(\r\n  messageB64u: string,\r\n  secretB64u: string\r\n): Promise<DilithiumSignResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_dilithium_sign(messageB64u, secretB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function dilithiumVerify(\r\n  messageB64u: string,\r\n  signatureB64u: string,\r\n  publicB64u: string\r\n): Promise<DilithiumVerifyResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_dilithium_verify(messageB64u, signatureB64u, publicB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// ---- Deterministic helpers (multisig/art token) ----\r\nexport async function jcsCanonicalize(json: unknown): Promise<string> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).jcs_canonicalize(JSON.stringify(json));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return out.canonical as string;\r\n}\r\n\r\nexport async function buildPolicyPreimage(policy: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_governance(JSON.stringify(policy));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\nexport async function buildMintPreimage(header: unknown, asset: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_asset_mint(JSON.stringify(header), JSON.stringify(asset));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\nexport async function buildTransferPreimage(header: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_asset_transfer(JSON.stringify(header));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\nexport async function buildAnchorPreimage(userId: string, rootHex: string, epoch: string, chains: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_anchor(userId, rootHex, epoch, JSON.stringify(chains));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\n// ---- Veritas Block Preimage (NEW v2 JCS canonical form) ----\r\n// We migrate block signing to a canonical (JCS) JSON similar to other preimages.\r\n// Legacy (v1) blocks used a hand-crafted JSON.stringify of a plain object with fixed insertion order.\r\n// This helper produces a canonical JSON string and msg_b64u = b64url(UTF-8(canonical JSON)).\r\n// NOTE: We intentionally EXCLUDE signature, encryptionKeyHash, and any runtime-only fields.\r\n// Fields included (ordered via JCS lexical ordering):\r\n//   contentType, dataHash, index, metadataHash, ownerPublicKey, previousHash, signatureAlg, timestamp, version\r\n// index & timestamp MUST be strings representing decimal integers (BigInt safe) – caller responsibility.\r\nexport interface BlockPreimageInput {\r\n  index: string | number | bigint;\r\n  timestamp: string | number | bigint;\r\n  previousHash: string;\r\n  dataHash: string;\r\n  metadataHash: string;\r\n  signatureAlg: string; // e.g. 'dilithium2'\r\n  ownerPublicKey: string; // Dilithium public key (base64url)\r\n  contentType?: string; // default 'application/json'\r\n  version: number; // block format / protocol version\r\n}\r\n\r\nexport async function buildBlockPreimage(block: BlockPreimageInput): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  // Normalize fields per spec\r\n  const normalized = {\r\n    contentType: block.contentType || 'application/json',\r\n    dataHash: block.dataHash,\r\n    index: block.index.toString(),\r\n    metadataHash: block.metadataHash,\r\n    ownerPublicKey: block.ownerPublicKey,\r\n    previousHash: block.previousHash,\r\n    signatureAlg: block.signatureAlg,\r\n    timestamp: block.timestamp.toString(),\r\n    version: block.version,\r\n  };\r\n  // Use JCS canonicalization via wasm jcs_canonicalize (already exposed through jcsCanonicalize helper)\r\n  const canonical = await jcsCanonicalize(normalized);\r\n  const msg_b64u = b64uEncode(new TextEncoder().encode(canonical));\r\n  return { canonical, msg_b64u, msgB64u: msg_b64u };\r\n}\r\n\r\nexport async function validateRoyalty(receiver: string, bps: number): Promise<boolean> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).validate_royalty(receiver, bps);\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) return false;\r\n  return !!out.ok;\r\n}\r\n\r\nexport async function verifyAttestations(msgB64u: string, attestations: Array<{ alg: string; publicKeyB64u: string; signatureB64u: string }>, allowedPublicKeys?: string[]): Promise<number> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).verify_attestations(msgB64u, JSON.stringify(attestations), allowedPublicKeys ? JSON.stringify(allowedPublicKeys) : undefined);\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return Number(out.valid_count || 0);\r\n}\r\n\r\n// Utility functions\r\n// Cross-env base64url helpers (browser + Node)\r\nfunction _fromByteArray(bytes: Uint8Array): string {\r\n  if (typeof btoa === 'function') {\r\n    // Browser\r\n    let s = '';\r\n    for (let i = 0; i < bytes.length; i++) s += String.fromCharCode(bytes[i]);\r\n    return btoa(s);\r\n  }\r\n  // Node\r\n  return Buffer.from(bytes).toString('base64');\r\n}\r\n\r\nfunction _toByteArray(b64: string): Uint8Array {\r\n  if (typeof atob === 'function') {\r\n    const binary = atob(b64);\r\n    const out = new Uint8Array(binary.length);\r\n    for (let i = 0; i < binary.length; i++) out[i] = binary.charCodeAt(i);\r\n    return out;\r\n  }\r\n  return new Uint8Array(Buffer.from(b64, 'base64'));\r\n}\r\n\r\nexport function b64uEncode(data: Uint8Array): string {\r\n  return _fromByteArray(data)\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=+/g, '');\r\n}\r\n\r\nexport function b64uDecode(str: string): Uint8Array {\r\n  const b64 = str.replace(/-/g, '+').replace(/_/g, '/').padEnd(Math.ceil(str.length / 4) * 4, '=');\r\n  return _toByteArray(b64);\r\n}\r\n\r\nexport function constantTimeEqual(a: Uint8Array, b: Uint8Array): boolean {\r\n  if (a.length !== b.length) return false;\r\n  let result = 0;\r\n  for (let i = 0; i < a.length; i++) {\r\n    result |= a[i] ^ b[i];\r\n  }\r\n  return result === 0;\r\n}\r\n", "// Ethereum anchoring using Cloudflare Web3 Gateway and Maatara Core API\r\nimport { Environment } from '../types';\r\nimport { buildAnchorPreimage, dilithiumSign, b64uEncode } from '@maatara/core-pqc';\r\n\r\nexport interface EthereumAnchor {\r\n  anchorHash: string;\r\n  canonical: string;\r\n  msg_b64u: string;\r\n  signature?: string;\r\n  ethereumTxHash?: string;\r\n  blockNumber?: number;\r\n  timestamp: number;\r\n}\r\n\r\nexport interface VeritasChain {\r\n  ipfs: string[];    // IPFS hashes of documents\r\n  ethereum: string[]; // Ethereum transaction hashes  \r\n  apf?: string[];     // Additional proof fields\r\n}\r\n\r\nexport class EthereumAnchoringClient {\r\n  private rpcUrl: string;\r\n  private gatewayUrl: string;\r\n\r\n  constructor(env: Environment) {\r\n    // Use Cloudflare's Ethereum Gateway - https://developers.cloudflare.com/web3/\r\n    this.rpcUrl = env.ETHEREUM_RPC_URL || 'https://cloudflare-eth.com/v1/mainnet';\r\n    this.gatewayUrl = env.IPFS_GATEWAY_URL || 'https://cloudflare-ipfs.com';\r\n  }\r\n\r\n  /**\r\n   * Create an Ethereum anchor using Maatara's deterministic preimage builder\r\n   * This anchors IPFS document hashes to the Ethereum blockchain\r\n   */\r\n  async createEthereumAnchor(\r\n    userId: string,\r\n    ipfsHashes: string[],\r\n    ethereumHashes: string[] = [],\r\n    epoch: string = new Date().toISOString().slice(0, 7) // YYYY-MM format\r\n  ): Promise<EthereumAnchor> {\r\n    try {\r\n      // Create combined root hash from all IPFS hashes\r\n      const combinedData = ipfsHashes.join('');\r\n      const rootHex = this.createSimpleHash(combinedData);\r\n\r\n      // Create Veritas chain structure for Maatara anchoring\r\n      const chains: VeritasChain = {\r\n        ipfs: ipfsHashes,\r\n        ethereum: ethereumHashes,\r\n        apf: [`veritas-root-${Date.now()}`] // Additional proof field\r\n      };\r\n\r\n      // Use Maatara's buildAnchorPreimage for deterministic anchoring\r\n      const preimage = await buildAnchorPreimage(\r\n        userId,\r\n        rootHex,\r\n        epoch,\r\n        chains\r\n      );\r\n\r\n      // Validate returned values to satisfy type safety\r\n      if (!preimage || !preimage.canonical || !preimage.msg_b64u) {\r\n        throw new Error('Invalid preimage returned from Maatara buildAnchorPreimage');\r\n      }\r\n\r\n      const { canonical, msg_b64u } = preimage;\r\n\r\n      return {\r\n        anchorHash: rootHex,\r\n        canonical,\r\n        msg_b64u,\r\n        timestamp: Date.now()\r\n      };\r\n    } catch (error) {\r\n      console.error('Ethereum anchor creation error:', error);\r\n      throw new Error(`Failed to create Ethereum anchor: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sign an Ethereum anchor with Dilithium and submit to blockchain\r\n   */\r\n  async signAndSubmitAnchor(\r\n    anchor: EthereumAnchor, \r\n    userPrivateKey: string\r\n  ): Promise<EthereumAnchor> {\r\n    try {\r\n      // Sign the anchor message with Dilithium\r\n      const sig = await dilithiumSign(anchor.msg_b64u, userPrivateKey);\r\n      const signature_b64u = sig?.signature_b64u;\r\n      if (!signature_b64u) {\r\n        throw new Error('Dilithium signature not returned by SDK');\r\n      }\r\n      \r\n      // Create the signed anchor\r\n      const signedAnchor: EthereumAnchor = {\r\n        ...anchor,\r\n        signature: signature_b64u\r\n      };\r\n\r\n      // Submit to Ethereum via Cloudflare Web3 Gateway\r\n      const ethereumTxHash = await this.submitToEthereum(signedAnchor);\r\n      \r\n      return {\r\n        ...signedAnchor,\r\n        ethereumTxHash\r\n      };\r\n    } catch (error) {\r\n      console.error('Anchor signing and submission error:', error);\r\n      throw new Error(`Failed to sign and submit anchor: ${error instanceof Error ? error.message : 'Unknown error'}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verify an anchor exists on Ethereum blockchain\r\n   */\r\n  async verifyAnchorOnEthereum(anchorHash: string): Promise<boolean> {\r\n    try {\r\n      // Query Ethereum via Cloudflare Web3 Gateway\r\n      const response = await fetch(this.rpcUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          jsonrpc: '2.0',\r\n          method: 'eth_getTransactionByHash',\r\n          params: [anchorHash],\r\n          id: 1\r\n        })\r\n      });\r\n\r\n      const result = await response.json() as { result: any };\r\n      return result.result !== null;\r\n    } catch (error) {\r\n      console.error('Anchor verification error:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Helper methods for Ethereum anchoring\r\n\r\n  private createSimpleHash(data: string): string {\r\n    // Simple deterministic hash function for demo purposes\r\n    // In production, use proper keccak256 or sha256\r\n    let hash = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      const char = data.charCodeAt(i);\r\n      hash = ((hash << 5) - hash) + char;\r\n      hash = hash & hash; // Convert to 32-bit integer\r\n    }\r\n    return '0x' + Math.abs(hash).toString(16).padStart(64, '0');\r\n  }\r\n\r\n  private async submitToEthereum(anchor: EthereumAnchor): Promise<string> {\r\n    try {\r\n      // Submit anchor to Ethereum via Cloudflare Web3 Gateway\r\n      // This would typically involve a smart contract call\r\n      const response = await fetch(this.rpcUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          jsonrpc: '2.0',\r\n          method: 'eth_sendRawTransaction',\r\n          params: [this.createMockTransaction(anchor)],\r\n          id: 1\r\n        })\r\n      });\r\n\r\n      const result = await response.json() as { result: string };\r\n      return result.result || this.generateMockTxHash();\r\n    } catch (error) {\r\n      console.error('Ethereum submission error:', error);\r\n      // Return mock transaction hash for development\r\n      return this.generateMockTxHash();\r\n    }\r\n  }\r\n\r\n  private createMockTransaction(anchor: EthereumAnchor): string {\r\n    // Create a mock transaction hex string for development\r\n    // In production, this would be a properly signed Ethereum transaction\r\n    const mockTx = {\r\n      anchor: anchor.anchorHash,\r\n      signature: anchor.signature,\r\n      timestamp: anchor.timestamp\r\n    };\r\n    // Convert JSON string to hex without Node Buffer (Worker-compatible)\r\n    const encoder = new TextEncoder();\r\n    const bytes = encoder.encode(JSON.stringify(mockTx));\r\n    let hex = '';\r\n    for (let i = 0; i < bytes.length; i++) {\r\n      hex += bytes[i].toString(16).padStart(2, '0');\r\n    }\r\n    return '0x' + hex;\r\n  }\r\n\r\n  private generateMockTxHash(): string {\r\n    return '0x' + Math.random().toString(16).slice(2).padStart(64, '0');\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function to create and submit document anchors to Ethereum\r\n */\r\nexport async function anchorDocumentsToEthereum(\r\n  client: EthereumAnchoringClient,\r\n  userId: string,\r\n  userPrivateKey: string,\r\n  ipfsHashes: string[]\r\n): Promise<EthereumAnchor> {\r\n  // Create Ethereum anchor using Maatara's deterministic preimage\r\n  const anchor = await client.createEthereumAnchor(userId, ipfsHashes);\r\n  \r\n  // Sign and submit the anchor to Ethereum blockchain\r\n  const signedAnchor = await client.signAndSubmitAnchor(anchor, userPrivateKey);\r\n  \r\n  return signedAnchor;\r\n}\r\n\r\n/**\r\n * Helper function to verify document integrity via Ethereum anchoring\r\n */\r\nexport async function verifyDocumentAnchor(\r\n  client: EthereumAnchoringClient,\r\n  anchorHash: string\r\n): Promise<boolean> {\r\n  return await client.verifyAnchorOnEthereum(anchorHash);\r\n}", "// Enhanced assets handler with IPFS and Ethereum anchoring\r\nimport { Hono } from 'hono';\r\nimport { Environment, Asset, User, APIResponse } from '../types';\r\nimport { MaataraClient } from '../utils/crypto';\r\nimport { IPFSClient, createIPFSRecord } from '../utils/ipfs';\r\nimport { EthereumAnchoringClient, anchorDocumentsToEthereum } from '../utils/ethereum';\r\n\r\nconst enhancedAssetHandler = new Hono<{ Bindings: Environment }>();\r\n\r\n// Create new asset with IPFS storage and Ethereum anchoring\r\nenhancedAssetHandler.post('/create-web3', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    console.log('Starting asset creation...');\r\n    \r\n    const requestBody = await c.req.json();\r\n    console.log('Request body received:', Object.keys(requestBody));\r\n    \r\n    const {\r\n      userId,\r\n      title,\r\n      description,\r\n      documentType,\r\n      documentData,\r\n      isPubliclySearchable,\r\n      publicMetadata,\r\n      privateKey,\r\n    } = requestBody;\r\n\r\n    console.log('Validating required fields...');\r\n    if (!userId || !title || !documentData || !privateKey) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'User ID, title, document data, and private key are required' \r\n      }, 400);\r\n    }\r\n\r\n    // Verify user exists\r\n    const userData = await env.VERITAS_KV.get(`user:${userId}`);\r\n    if (!userData) {\r\n      return c.json<APIResponse>({ success: false, error: 'User not found' }, 404);\r\n    }\r\n\r\n    const user: User = JSON.parse(userData);\r\n    console.log('User found:', user.email);\r\n    \r\n    // Initialize clients\r\n    console.log('Initializing clients...');\r\n    const maataraClient = new MaataraClient(env);\r\n    console.log('Maatara client initialized (for signing only)');\r\n    const ipfsClient = new IPFSClient(env);\r\n    console.log('IPFS client initialized');\r\n    const ethereumClient = new EthereumAnchoringClient(env);\r\n    console.log('Ethereum client initialized');\r\n\r\n    // 1. Document data should already be encrypted client-side\r\n    console.log('Using client-side encrypted document data...');\r\n    let encryptedData = documentData;\r\n    \r\n    // Check if data is already encrypted (has our encryption format)\r\n    try {\r\n      const parsed = JSON.parse(documentData);\r\n      if (parsed.encrypted && parsed.ciphertext) {\r\n        console.log('Data is already encrypted client-side');\r\n        encryptedData = documentData;\r\n      } else {\r\n        console.warn('Data does not appear to be encrypted, wrapping as-is');\r\n        encryptedData = JSON.stringify({ plaintext: documentData, encrypted: false });\r\n      }\r\n    } catch (e) {\r\n      console.warn('Data is not JSON, treating as plaintext');\r\n      encryptedData = JSON.stringify({ plaintext: documentData, encrypted: false });\r\n    }\r\n\r\n    // 2. Upload encrypted data to IPFS via Cloudflare (skip if Pinata not configured)\r\n    let ipfsRecord;\r\n    try {\r\n      ipfsRecord = await createIPFSRecord(\r\n        ipfsClient,\r\n        encryptedData,\r\n        'application/json'\r\n      );\r\n    } catch (ipfsError) {\r\n      // IPFS upload failed (likely Pinata not configured), use placeholder hash\r\n      console.warn('IPFS upload failed, using placeholder:', ipfsError);\r\n      ipfsRecord = {\r\n        hash: `placeholder_${Date.now()}`,\r\n        size: encryptedData.length,\r\n        timestamp: Date.now()\r\n      };\r\n    }\r\n\r\n    // 3. Create asset metadata for blockchain anchoring\r\n    const assetMetadata = {\r\n      id: `asset_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      title,\r\n      description,\r\n      documentType,\r\n      ownerId: userId,\r\n      creatorId: userId,\r\n      ipfsHash: ipfsRecord.hash,\r\n      createdAt: Date.now(),\r\n      isPubliclySearchable: isPubliclySearchable || false,\r\n      publicMetadata: publicMetadata || {}\r\n    };\r\n\r\n    // 4. Upload metadata to IPFS (skip if Pinata not configured)\r\n    let metadataRecord;\r\n    try {\r\n      metadataRecord = await createIPFSRecord(\r\n        ipfsClient,\r\n        JSON.stringify(assetMetadata),\r\n        'application/json'\r\n      );\r\n    } catch (metadataError) {\r\n      console.warn('IPFS metadata upload failed, using placeholder:', metadataError);\r\n      metadataRecord = {\r\n        hash: `metadata_${Date.now()}`,\r\n        size: JSON.stringify(assetMetadata).length,\r\n        timestamp: Date.now()\r\n      };\r\n    }\r\n\r\n    // 5. Create Ethereum anchor with both content and metadata hashes (skip if service fails)\r\n    let ethereumAnchor;\r\n    try {\r\n      ethereumAnchor = await anchorDocumentsToEthereum(\r\n        ethereumClient,\r\n        userId,\r\n        privateKey,\r\n        [ipfsRecord.hash, metadataRecord.hash]\r\n      );\r\n    } catch (ethError) {\r\n      console.warn('Ethereum anchoring failed, using placeholder:', ethError);\r\n      ethereumAnchor = {\r\n        anchorHash: `eth_placeholder_${Date.now()}`,\r\n        ethereumTxHash: `0x${Date.now().toString(16)}`,\r\n        canonical: '',\r\n        signature: '',\r\n        timestamp: Date.now()\r\n      };\r\n    }\r\n\r\n    // 6. Sign the asset metadata with Dilithium\r\n    const signature = await maataraClient.signData(\r\n      JSON.stringify(assetMetadata),\r\n      privateKey\r\n    );\r\n\r\n    // 7. Generate unique token ID\r\n    const tokenId = `VRT_${Date.now()}_${Math.random().toString(36).substr(2, 6).toUpperCase()}`;\r\n\r\n    // 8. Create final asset record\r\n    const asset: Asset = {\r\n      id: assetMetadata.id,\r\n      tokenId,\r\n      ownerId: userId,\r\n      creatorId: userId,\r\n      title,\r\n      description,\r\n      documentType,\r\n      ipfsHash: ipfsRecord.hash,\r\n      encryptedData: encryptedData,\r\n      signature,\r\n      createdAt: Date.now(),\r\n      updatedAt: Date.now(),\r\n      isPubliclySearchable: isPubliclySearchable || false,\r\n      publicMetadata: publicMetadata || {},\r\n      // Web3 integration fields\r\n      merkleRoot: ethereumAnchor.anchorHash,\r\n      ethereumTxHash: ethereumAnchor.ethereumTxHash,\r\n      ipfsMetadataHash: metadataRecord.hash\r\n    };\r\n\r\n    // 9. Store asset in KV\r\n    await env.VERITAS_KV.put(`asset:${asset.id}`, JSON.stringify(asset));\r\n\r\n    // 10. Add asset to user's owned assets list\r\n    const userAssetsKey = `user_assets:${userId}`;\r\n    const existingAssets = await env.VERITAS_KV.get(userAssetsKey);\r\n    const assetsList = existingAssets ? JSON.parse(existingAssets) : [];\r\n    assetsList.push(asset.id);\r\n    await env.VERITAS_KV.put(userAssetsKey, JSON.stringify(assetsList));\r\n\r\n    // 11. Create Stripe checkout session for $25 payment\r\n    const stripeUrl = `https://checkout.stripe.com/pay/${asset.id}`;\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      message: 'Asset created with IPFS storage and Ethereum anchoring',\r\n      data: {\r\n        stripeUrl,\r\n        asset: {\r\n          id: asset.id,\r\n          tokenId: asset.tokenId,\r\n          title: asset.title,\r\n          description: asset.description,\r\n          documentType: asset.documentType,\r\n          createdAt: asset.createdAt,\r\n          ipfsHash: asset.ipfsHash,\r\n          ipfsMetadataHash: asset.ipfsMetadataHash,\r\n          merkleRoot: asset.merkleRoot,\r\n          ethereumTxHash: asset.ethereumTxHash,\r\n          ipfsGatewayUrl: ipfsClient.getIPFSUrl(asset.ipfsHash),\r\n          metadataGatewayUrl: ipfsClient.getIPFSUrl(asset.ipfsMetadataHash!)\r\n        },\r\n        ethereumAnchor: {\r\n          hash: ethereumAnchor.anchorHash,\r\n          txHash: ethereumAnchor.ethereumTxHash,\r\n          canonical: ethereumAnchor.canonical,\r\n          signature: ethereumAnchor.signature\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Enhanced asset creation error:', error);\r\n    const errorMessage = error instanceof Error ? error.message : 'Unknown error';\r\n    const errorStack = error instanceof Error ? error.stack : '';\r\n    console.error('Error stack:', errorStack);\r\n    return c.json<APIResponse>({ \r\n      success: false, \r\n      error: `Failed to create asset: ${errorMessage} | Stack: ${errorStack}`\r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Get asset with IPFS and Ethereum verification\r\nenhancedAssetHandler.get('/web3/:assetId', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const assetId = c.req.param('assetId');\r\n\r\n    // Get asset from KV\r\n    const assetData = await env.VERITAS_KV.get(`asset:${assetId}`);\r\n    if (!assetData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Asset not found' }, 404);\r\n    }\r\n\r\n    const asset: Asset = JSON.parse(assetData);\r\n    \r\n    // Initialize clients for verification\r\n    const ipfsClient = new IPFSClient(env);\r\n    const ethereumClient = new EthereumAnchoringClient(env);\r\n\r\n    // Verify asset integrity\r\n    const verifications = {\r\n      ipfsAccessible: false,\r\n      metadataAccessible: false,\r\n      ethereumAnchored: false\r\n    };\r\n\r\n    try {\r\n      // Check if IPFS content is accessible\r\n      await ipfsClient.retrieveFromIPFS(asset.ipfsHash);\r\n      verifications.ipfsAccessible = true;\r\n    } catch (error) {\r\n      console.warn(`IPFS content not accessible: ${asset.ipfsHash}`);\r\n    }\r\n\r\n    try {\r\n      // Check if metadata is accessible\r\n      if (asset.ipfsMetadataHash) {\r\n        await ipfsClient.retrieveFromIPFS(asset.ipfsMetadataHash);\r\n        verifications.metadataAccessible = true;\r\n      }\r\n    } catch (error) {\r\n      console.warn(`IPFS metadata not accessible: ${asset.ipfsMetadataHash}`);\r\n    }\r\n\r\n    try {\r\n      // Verify Ethereum anchoring\r\n      if (asset.merkleRoot) {\r\n        verifications.ethereumAnchored = await ethereumClient.verifyAnchorOnEthereum(asset.merkleRoot);\r\n      }\r\n    } catch (error) {\r\n      console.warn(`Ethereum verification failed: ${asset.merkleRoot}`);\r\n    }\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: {\r\n        asset: {\r\n          id: asset.id,\r\n          tokenId: asset.tokenId,\r\n          title: asset.title,\r\n          description: asset.description,\r\n          documentType: asset.documentType,\r\n          createdAt: asset.createdAt,\r\n          updatedAt: asset.updatedAt,\r\n          ownerId: asset.ownerId,\r\n          creatorId: asset.creatorId,\r\n          isPubliclySearchable: asset.isPubliclySearchable,\r\n          publicMetadata: asset.publicMetadata,\r\n          // Web3 fields\r\n          ipfsHash: asset.ipfsHash,\r\n          ipfsMetadataHash: asset.ipfsMetadataHash,\r\n          merkleRoot: asset.merkleRoot,\r\n          ethereumTxHash: asset.ethereumTxHash,\r\n          blockNumber: asset.blockNumber,\r\n          // Gateway URLs\r\n          ipfsGatewayUrl: ipfsClient.getIPFSUrl(asset.ipfsHash),\r\n          metadataGatewayUrl: asset.ipfsMetadataHash ? ipfsClient.getIPFSUrl(asset.ipfsMetadataHash) : null\r\n        },\r\n        verifications\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Enhanced asset retrieval error:', error);\r\n    return c.json<APIResponse>({ \r\n      success: false, \r\n      error: `Failed to retrieve asset: ${error instanceof Error ? error.message : 'Unknown error'}` \r\n    }, 500);\r\n  }\r\n});\r\n\r\n// Retrieve and decrypt document content from IPFS\r\nenhancedAssetHandler.post('/web3/:assetId/decrypt', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const assetId = c.req.param('assetId');\r\n    const { privateKey } = await c.req.json();\r\n\r\n    if (!privateKey) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Private key is required for decryption' \r\n      }, 400);\r\n    }\r\n\r\n    // Get asset from KV\r\n    const assetData = await env.VERITAS_KV.get(`asset:${assetId}`);\r\n    if (!assetData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Asset not found' }, 404);\r\n    }\r\n\r\n    const asset: Asset = JSON.parse(assetData);\r\n    \r\n    // Initialize clients\r\n    const maataraClient = new MaataraClient(env);\r\n    const ipfsClient = new IPFSClient(env);\r\n\r\n    // Retrieve encrypted data from IPFS\r\n    const encryptedData = await ipfsClient.retrieveFromIPFS(asset.ipfsHash);\r\n\r\n    // Decrypt the document data\r\n    const decryptedData = await maataraClient.decryptData(encryptedData, privateKey);\r\n    const documentData = JSON.parse(decryptedData);\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: {\r\n        documentData,\r\n        asset: {\r\n          id: asset.id,\r\n          tokenId: asset.tokenId,\r\n          title: asset.title,\r\n          description: asset.description,\r\n          documentType: asset.documentType\r\n        }\r\n      }\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error('Document decryption error:', error);\r\n    return c.json<APIResponse>({ \r\n      success: false, \r\n      error: `Failed to decrypt document: ${error instanceof Error ? error.message : 'Unknown error'}` \r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport { enhancedAssetHandler };", "import { Hono } from 'hono';\r\nimport { Environment, User, APIResponse } from '../types';\r\n\r\nconst userHandler = new Hono<{ Bindings: Environment }>();\r\n\r\n// Get user profile\r\nuserHandler.get('/profile/:userId', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const userId = c.req.param('userId');\r\n\r\n    const userData = await env.VERITAS_KV.get(`user:${userId}`);\r\n    if (!userData) {\r\n      return c.json<APIResponse>({ success: false, error: 'User not found' }, 404);\r\n    }\r\n\r\n    const user: User = JSON.parse(userData);\r\n\r\n    // Remove sensitive data\r\n    const publicUser = {\r\n      id: user.id,\r\n      email: user.email,\r\n      publicKey: user.publicKey,\r\n      createdAt: user.createdAt,\r\n      accountType: user.accountType,\r\n    };\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: publicUser,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting user profile:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Create invitation link (paid users only)\r\nuserHandler.post('/invite', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { userId, email } = await c.req.json();\r\n\r\n    if (!userId || !email) {\r\n      return c.json<APIResponse>({ success: false, error: 'User ID and email are required' }, 400);\r\n    }\r\n\r\n    // Verify user exists and has paid account\r\n    const userData = await env.VERITAS_KV.get(`user:${userId}`);\r\n    if (!userData) {\r\n      return c.json<APIResponse>({ success: false, error: 'User not found' }, 404);\r\n    }\r\n\r\n    const user: User = JSON.parse(userData);\r\n    if (user.accountType !== 'paid') {\r\n      return c.json<APIResponse>({ success: false, error: 'Only paid users can send invites' }, 403);\r\n    }\r\n\r\n    // Check if email is already registered\r\n    const existingUserId = await env.VERITAS_KV.get(`user:email:${email}`);\r\n    if (existingUserId) {\r\n      return c.json<APIResponse>({ success: false, error: 'User with this email already exists' }, 400);\r\n    }\r\n\r\n    // Create invitation link\r\n    const linkId = crypto.randomUUID();\r\n    const token = crypto.randomUUID();\r\n    const expiresAt = Date.now() + (7 * 24 * 60 * 60 * 1000); // 7 days\r\n\r\n    const inviteLink = {\r\n      id: linkId,\r\n      token,\r\n      createdBy: userId,\r\n      email,\r\n      expiresAt,\r\n      used: false,\r\n      type: 'invitation',\r\n    };\r\n\r\n    await env.VERITAS_KV.put(`link:${token}`, JSON.stringify(inviteLink));\r\n\r\n    const activationUrl = `${c.req.url.split('/api')[0]}/activate?token=${token}`;\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: { activationUrl, expiresAt },\r\n      message: 'Invitation link created successfully',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating invitation:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport { userHandler };", "/**\n * Encapsulates the logic for issuing a request to the Stripe API.\n *\n * A custom HTTP client should should implement:\n * 1. A response class which extends HttpClientResponse and wraps around their\n *    own internal representation of a response.\n * 2. A client class which extends HttpClient and implements all methods,\n *    returning their own response class when making requests.\n */\nexport class HttpClient {\n    /** The client name used for diagnostics. */\n    getClientName() {\n        throw new Error('getClientName not implemented.');\n    }\n    makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        throw new Error('makeRequest not implemented.');\n    }\n    /** Helper to make a consistent timeout error across implementations. */\n    static makeTimeoutError() {\n        const timeoutErr = new TypeError(HttpClient.TIMEOUT_ERROR_CODE);\n        timeoutErr.code = HttpClient.TIMEOUT_ERROR_CODE;\n        return timeoutErr;\n    }\n}\n// Public API accessible via Stripe.HttpClient\nHttpClient.CONNECTION_CLOSED_ERROR_CODES = ['ECONNRESET', 'EPIPE'];\nHttpClient.TIMEOUT_ERROR_CODE = 'ETIMEDOUT';\nexport class HttpClientResponse {\n    constructor(statusCode, headers) {\n        this._statusCode = statusCode;\n        this._headers = headers;\n    }\n    getStatusCode() {\n        return this._statusCode;\n    }\n    getHeaders() {\n        return this._headers;\n    }\n    getRawResponse() {\n        throw new Error('getRawResponse not implemented.');\n    }\n    toStream(streamCompleteCallback) {\n        throw new Error('toStream not implemented.');\n    }\n    toJSON() {\n        throw new Error('toJSON not implemented.');\n    }\n}\n", "import { HttpClient, HttpClientResponse, } from './HttpClient.js';\n/**\n * HTTP client which uses a `fetch` function to issue requests.\n *\n * By default relies on the global `fetch` function, but an optional function\n * can be passed in. If passing in a function, it is expected to match the Web\n * Fetch API. As an example, this could be the function provided by the\n * node-fetch package (https://github.com/node-fetch/node-fetch).\n */\nexport class FetchHttpClient extends HttpClient {\n    constructor(fetchFn) {\n        super();\n        // Default to global fetch if available\n        if (!fetchFn) {\n            if (!globalThis.fetch) {\n                throw new Error('fetch() function not provided and is not defined in the global scope. ' +\n                    'You must provide a fetch implementation.');\n            }\n            fetchFn = globalThis.fetch;\n        }\n        // Both timeout behaviors differs from Node:\n        // - Fetch uses a single timeout for the entire length of the request.\n        // - Node is more fine-grained and resets the timeout after each stage of the request.\n        if (globalThis.AbortController) {\n            // Utilise native AbortController if available\n            // AbortController was added in Node v15.0.0, v14.17.0\n            this._fetchFn = FetchHttpClient.makeFetchWithAbortTimeout(fetchFn);\n        }\n        else {\n            // Fall back to racing against a timeout promise if not available in the runtime\n            // This does not actually cancel the underlying fetch operation or resources\n            this._fetchFn = FetchHttpClient.makeFetchWithRaceTimeout(fetchFn);\n        }\n    }\n    static makeFetchWithRaceTimeout(fetchFn) {\n        return (url, init, timeout) => {\n            let pendingTimeoutId;\n            const timeoutPromise = new Promise((_, reject) => {\n                pendingTimeoutId = setTimeout(() => {\n                    pendingTimeoutId = null;\n                    reject(HttpClient.makeTimeoutError());\n                }, timeout);\n            });\n            const fetchPromise = fetchFn(url, init);\n            return Promise.race([fetchPromise, timeoutPromise]).finally(() => {\n                if (pendingTimeoutId) {\n                    clearTimeout(pendingTimeoutId);\n                }\n            });\n        };\n    }\n    static makeFetchWithAbortTimeout(fetchFn) {\n        return async (url, init, timeout) => {\n            // Use AbortController because AbortSignal.timeout() was added later in Node v17.3.0, v16.14.0\n            const abort = new AbortController();\n            let timeoutId = setTimeout(() => {\n                timeoutId = null;\n                abort.abort(HttpClient.makeTimeoutError());\n            }, timeout);\n            try {\n                return await fetchFn(url, Object.assign(Object.assign({}, init), { signal: abort.signal }));\n            }\n            catch (err) {\n                // Some implementations, like node-fetch, do not respect the reason passed to AbortController.abort()\n                // and instead it always throws an AbortError\n                // We catch this case to normalise all timeout errors\n                if (err.name === 'AbortError') {\n                    throw HttpClient.makeTimeoutError();\n                }\n                else {\n                    throw err;\n                }\n            }\n            finally {\n                if (timeoutId) {\n                    clearTimeout(timeoutId);\n                }\n            }\n        };\n    }\n    /** @override. */\n    getClientName() {\n        return 'fetch';\n    }\n    async makeRequest(host, port, path, method, headers, requestData, protocol, timeout) {\n        const isInsecureConnection = protocol === 'http';\n        const url = new URL(path, `${isInsecureConnection ? 'http' : 'https'}://${host}`);\n        url.port = port;\n        // For methods which expect payloads, we should always pass a body value\n        // even when it is empty. Without this, some JS runtimes (eg. Deno) will\n        // inject a second Content-Length header. See https://github.com/stripe/stripe-node/issues/1519\n        // for more details.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        const body = requestData || (methodHasPayload ? '' : undefined);\n        const res = await this._fetchFn(url.toString(), {\n            method,\n            // @ts-ignore\n            headers,\n            // @ts-ignore\n            body,\n        }, timeout);\n        return new FetchHttpClientResponse(res);\n    }\n}\nexport class FetchHttpClientResponse extends HttpClientResponse {\n    constructor(res) {\n        super(res.status, FetchHttpClientResponse._transformHeadersToObject(res.headers));\n        this._res = res;\n    }\n    getRawResponse() {\n        return this._res;\n    }\n    toStream(streamCompleteCallback) {\n        // Unfortunately `fetch` does not have event handlers for when the stream is\n        // completely read. We therefore invoke the streamCompleteCallback right\n        // away. This callback emits a response event with metadata and completes\n        // metrics, so it's ok to do this without waiting for the stream to be\n        // completely read.\n        streamCompleteCallback();\n        // Fetch's `body` property is expected to be a readable stream of the body.\n        return this._res.body;\n    }\n    toJSON() {\n        return this._res.json();\n    }\n    static _transformHeadersToObject(headers) {\n        // Fetch uses a Headers instance so this must be converted to a barebones\n        // JS object to meet the HttpClient interface.\n        const headersObj = {};\n        for (const entry of headers) {\n            if (!Array.isArray(entry) || entry.length != 2) {\n                throw new Error('Response objects produced by the fetch function given to FetchHttpClient do not have an iterable headers map. Response#headers should be an iterable object.');\n            }\n            headersObj[entry[0]] = entry[1];\n        }\n        return headersObj;\n    }\n}\n", "/**\n * Interface encapsulating the various crypto computations used by the library,\n * allowing pluggable underlying crypto implementations.\n */\nexport class CryptoProvider {\n    /**\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignature(payload, secret) {\n        throw new Error('computeHMACSignature not implemented.');\n    }\n    /**\n     * Asynchronous version of `computeHMACSignature`. Some implementations may\n     * only allow support async signature computation.\n     *\n     * Computes a SHA-256 HMAC given a secret and a payload (encoded in UTF-8).\n     * The output HMAC should be encoded in hexadecimal.\n     *\n     * Sample values for implementations:\n     * - computeHMACSignature('', 'test_secret') => 'f7f9bd47fb987337b5796fdc1fdb9ba221d0d5396814bfcaf9521f43fd8927fd'\n     * - computeHMACSignature('\\ud83d\\ude00', 'test_secret') => '837da296d05c4fe31f61d5d7ead035099d9585a5bcde87de952012a78f0b0c43\n     */\n    computeHMACSignatureAsync(payload, secret) {\n        throw new Error('computeHMACSignatureAsync not implemented.');\n    }\n}\n/**\n * If the crypto provider only supports asynchronous operations,\n * throw CryptoProviderOnlySupportsAsyncError instead of\n * a generic error so that the caller can choose to provide\n * a more helpful error message to direct the user to use\n * an asynchronous pathway.\n */\nexport class CryptoProviderOnlySupportsAsyncError extends Error {\n}\n", "import { CryptoProvider, CryptoProviderOnlySupportsAsyncError, } from './CryptoProvider.js';\n/**\n * `CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n *\n * This only supports asynchronous operations.\n */\nexport class SubtleCryptoProvider extends CryptoProvider {\n    constructor(subtleCrypto) {\n        super();\n        // If no subtle crypto is interface, default to the global namespace. This\n        // is to allow custom interfaces (eg. using the Node webcrypto interface in\n        // tests).\n        this.subtleCrypto = subtleCrypto || crypto.subtle;\n    }\n    /** @override */\n    computeHMACSignature(payload, secret) {\n        throw new CryptoProviderOnlySupportsAsyncError('SubtleCryptoProvider cannot be used in a synchronous context.');\n    }\n    /** @override */\n    async computeHMACSignatureAsync(payload, secret) {\n        const encoder = new TextEncoder();\n        const key = await this.subtleCrypto.importKey('raw', encoder.encode(secret), {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        }, false, ['sign']);\n        const signatureBuffer = await this.subtleCrypto.sign('hmac', key, encoder.encode(payload));\n        // crypto.subtle returns the signature in base64 format. This must be\n        // encoded in hex to match the CryptoProvider contract. We map each byte in\n        // the buffer to its corresponding hex octet and then combine into a string.\n        const signatureBytes = new Uint8Array(signatureBuffer);\n        const signatureHexCodes = new Array(signatureBytes.length);\n        for (let i = 0; i < signatureBytes.length; i++) {\n            signatureHexCodes[i] = byteHexMapping[signatureBytes[i]];\n        }\n        return signatureHexCodes.join('');\n    }\n}\n// Cached mapping of byte to hex representation. We do this once to avoid re-\n// computing every time we need to convert the result of a signature to hex.\nconst byteHexMapping = new Array(256);\nfor (let i = 0; i < byteHexMapping.length; i++) {\n    byteHexMapping[i] = i.toString(16).padStart(2, '0');\n}\n", "import { FetchHttpClient } from '../net/FetchHttpClient.js';\nimport { SubtleCryptoProvider } from '../crypto/SubtleCryptoProvider.js';\n/**\n * Interface encapsulating various utility functions whose\n * implementations depend on the platform / JS runtime.\n */\nexport class PlatformFunctions {\n    constructor() {\n        this._fetchFn = null;\n        this._agent = null;\n    }\n    /**\n     * Gets uname with Node's built-in `exec` function, if available.\n     */\n    getUname() {\n        throw new Error('getUname not implemented.');\n    }\n    /**\n     * Generates a v4 UUID. See https://stackoverflow.com/a/2117523\n     */\n    uuid4() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            const r = (Math.random() * 16) | 0;\n            const v = c === 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Compares strings in constant time.\n     */\n    secureCompare(a, b) {\n        // return early here if buffer lengths are not equal\n        if (a.length !== b.length) {\n            return false;\n        }\n        const len = a.length;\n        let result = 0;\n        for (let i = 0; i < len; ++i) {\n            result |= a.charCodeAt(i) ^ b.charCodeAt(i);\n        }\n        return result === 0;\n    }\n    /**\n     * Creates an event emitter.\n     */\n    createEmitter() {\n        throw new Error('createEmitter not implemented.');\n    }\n    /**\n     * Checks if the request data is a stream. If so, read the entire stream\n     * to a buffer and return the buffer.\n     */\n    tryBufferData(data) {\n        throw new Error('tryBufferData not implemented.');\n    }\n    /**\n     * Creates an HTTP client which uses the Node `http` and `https` packages\n     * to issue requests.\n     */\n    createNodeHttpClient(agent) {\n        throw new Error('createNodeHttpClient not implemented.');\n    }\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    createFetchHttpClient(fetchFn) {\n        return new FetchHttpClient(fetchFn);\n    }\n    /**\n     * Creates an HTTP client using runtime-specific APIs.\n     */\n    createDefaultHttpClient() {\n        throw new Error('createDefaultHttpClient not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the Node `crypto` package for its computations.\n     */\n    createNodeCryptoProvider() {\n        throw new Error('createNodeCryptoProvider not implemented.');\n    }\n    /**\n     * Creates a CryptoProvider which uses the SubtleCrypto interface of the Web Crypto API.\n     */\n    createSubtleCryptoProvider(subtleCrypto) {\n        return new SubtleCryptoProvider(subtleCrypto);\n    }\n    createDefaultCryptoProvider() {\n        throw new Error('createDefaultCryptoProvider not implemented.');\n    }\n}\n", "/**\n * @private\n * (For internal use in stripe-node.)\n * Wrapper around the Event Web API.\n */\nclass _StripeEvent extends Event {\n    constructor(eventName, data) {\n        super(eventName);\n        this.data = data;\n    }\n}\n/** Minimal EventEmitter wrapper around EventTarget. */\nexport class StripeEmitter {\n    constructor() {\n        this.eventTarget = new EventTarget();\n        this.listenerMapping = new Map();\n    }\n    on(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper);\n    }\n    removeListener(eventName, listener) {\n        const listenerWrapper = this.listenerMapping.get(listener);\n        this.listenerMapping.delete(listener);\n        return this.eventTarget.removeEventListener(eventName, listenerWrapper);\n    }\n    once(eventName, listener) {\n        const listenerWrapper = (event) => {\n            listener(event.data);\n        };\n        this.listenerMapping.set(listener, listenerWrapper);\n        return this.eventTarget.addEventListener(eventName, listenerWrapper, {\n            once: true,\n        });\n    }\n    emit(eventName, data) {\n        return this.eventTarget.dispatchEvent(new _StripeEvent(eventName, data));\n    }\n}\n", "import { PlatformFunctions } from './PlatformFunctions.js';\nimport { StripeEmitter } from '../StripeEmitter.js';\n/**\n * Specializes WebPlatformFunctions using APIs available in Web workers.\n */\nexport class WebPlatformFunctions extends PlatformFunctions {\n    /** @override */\n    getUname() {\n        return Promise.resolve(null);\n    }\n    /** @override */\n    createEmitter() {\n        return new StripeEmitter();\n    }\n    /** @override */\n    tryBufferData(data) {\n        if (data.file.data instanceof ReadableStream) {\n            throw new Error('Uploading a file as a stream is not supported in non-Node environments. Please open or upvote an issue at github.com/stripe/stripe-node if you use this, detailing your use-case.');\n        }\n        return Promise.resolve(data);\n    }\n    /** @override */\n    createNodeHttpClient() {\n        throw new Error('Stripe: `createNodeHttpClient()` is not available in non-Node environments. Please use `createFetchHttpClient()` instead.');\n    }\n    /** @override */\n    createDefaultHttpClient() {\n        return super.createFetchHttpClient();\n    }\n    /** @override */\n    createNodeCryptoProvider() {\n        throw new Error('Stripe: `createNodeCryptoProvider()` is not available in non-Node environments. Please use `createSubtleCryptoProvider()` instead.');\n    }\n    /** @override */\n    createDefaultCryptoProvider() {\n        return this.createSubtleCryptoProvider();\n    }\n}\n", "/* eslint-disable camelcase */\nexport const generate = (rawStripeError) => {\n    switch (rawStripeError.type) {\n        case 'card_error':\n            return new StripeCardError(rawStripeError);\n        case 'invalid_request_error':\n            return new StripeInvalidRequestError(rawStripeError);\n        case 'api_error':\n            return new StripeAPIError(rawStripeError);\n        case 'authentication_error':\n            return new StripeAuthenticationError(rawStripeError);\n        case 'rate_limit_error':\n            return new StripeRateLimitError(rawStripeError);\n        case 'idempotency_error':\n            return new StripeIdempotencyError(rawStripeError);\n        case 'invalid_grant':\n            return new StripeInvalidGrantError(rawStripeError);\n        default:\n            return new StripeUnknownError(rawStripeError);\n    }\n};\n/**\n * StripeError is the base error from which all other more specific Stripe errors derive.\n * Specifically for errors returned from Stripe's REST API.\n */\nexport class StripeError extends Error {\n    constructor(raw = {}, type = null) {\n        super(raw.message);\n        this.type = type || this.constructor.name;\n        this.raw = raw;\n        this.rawType = raw.type;\n        this.code = raw.code;\n        this.doc_url = raw.doc_url;\n        this.param = raw.param;\n        this.detail = raw.detail;\n        this.headers = raw.headers;\n        this.requestId = raw.requestId;\n        this.statusCode = raw.statusCode;\n        // @ts-ignore\n        this.message = raw.message;\n        this.charge = raw.charge;\n        this.decline_code = raw.decline_code;\n        this.payment_intent = raw.payment_intent;\n        this.payment_method = raw.payment_method;\n        this.payment_method_type = raw.payment_method_type;\n        this.setup_intent = raw.setup_intent;\n        this.source = raw.source;\n    }\n}\n/**\n * Helper factory which takes raw stripe errors and outputs wrapping instances\n */\nStripeError.generate = generate;\n// Specific Stripe Error types:\n/**\n * CardError is raised when a user enters a card that can't be charged for\n * some reason.\n */\nexport class StripeCardError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeCardError');\n    }\n}\n/**\n * InvalidRequestError is raised when a request is initiated with invalid\n * parameters.\n */\nexport class StripeInvalidRequestError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidRequestError');\n    }\n}\n/**\n * APIError is a generic error that may be raised in cases where none of the\n * other named errors cover the problem. It could also be raised in the case\n * that a new error has been introduced in the API, but this version of the\n * Node.JS SDK doesn't know how to handle it.\n */\nexport class StripeAPIError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAPIError');\n    }\n}\n/**\n * AuthenticationError is raised when invalid credentials are used to connect\n * to Stripe's servers.\n */\nexport class StripeAuthenticationError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeAuthenticationError');\n    }\n}\n/**\n * PermissionError is raised in cases where access was attempted on a resource\n * that wasn't allowed.\n */\nexport class StripePermissionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripePermissionError');\n    }\n}\n/**\n * RateLimitError is raised in cases where an account is putting too much load\n * on Stripe's API servers (usually by performing too many requests). Please\n * back off on request rate.\n */\nexport class StripeRateLimitError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeRateLimitError');\n    }\n}\n/**\n * StripeConnectionError is raised in the event that the SDK can't connect to\n * Stripe's servers. That can be for a variety of different reasons from a\n * downed network to a bad TLS certificate.\n */\nexport class StripeConnectionError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeConnectionError');\n    }\n}\n/**\n * SignatureVerificationError is raised when the signature verification for a\n * webhook fails\n */\nexport class StripeSignatureVerificationError extends StripeError {\n    constructor(header, payload, raw = {}) {\n        super(raw, 'StripeSignatureVerificationError');\n        this.header = header;\n        this.payload = payload;\n    }\n}\n/**\n * IdempotencyError is raised in cases where an idempotency key was used\n * improperly.\n */\nexport class StripeIdempotencyError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeIdempotencyError');\n    }\n}\n/**\n * InvalidGrantError is raised when a specified code doesn't exist, is\n * expired, has been used, or doesn't belong to you; a refresh token doesn't\n * exist, or doesn't belong to you; or if an API key's mode (live or test)\n * doesn't match the mode of a code or refresh token.\n */\nexport class StripeInvalidGrantError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeInvalidGrantError');\n    }\n}\n/**\n * Any other error from Stripe not specifically captured above\n */\nexport class StripeUnknownError extends StripeError {\n    constructor(raw = {}) {\n        super(raw, 'StripeUnknownError');\n    }\n}\n", "// File generated from our OpenAPI spec\nexport const ApiVersion = '2023-10-16';\n", "// File generated from our OpenAPI spec\nimport { resourceNamespace } from './ResourceNamespace.js';\nimport { Accounts as FinancialConnectionsAccounts } from './resources/FinancialConnections/Accounts.js';\nimport { ActiveEntitlements as EntitlementsActiveEntitlements } from './resources/Entitlements/ActiveEntitlements.js';\nimport { Authorizations as TestHelpersIssuingAuthorizations } from './resources/TestHelpers/Issuing/Authorizations.js';\nimport { Authorizations as IssuingAuthorizations } from './resources/Issuing/Authorizations.js';\nimport { Calculations as TaxCalculations } from './resources/Tax/Calculations.js';\nimport { Cardholders as IssuingCardholders } from './resources/Issuing/Cardholders.js';\nimport { Cards as TestHelpersIssuingCards } from './resources/TestHelpers/Issuing/Cards.js';\nimport { Cards as IssuingCards } from './resources/Issuing/Cards.js';\nimport { Configurations as BillingPortalConfigurations } from './resources/BillingPortal/Configurations.js';\nimport { Configurations as TerminalConfigurations } from './resources/Terminal/Configurations.js';\nimport { ConfirmationTokens as TestHelpersConfirmationTokens } from './resources/TestHelpers/ConfirmationTokens.js';\nimport { ConnectionTokens as TerminalConnectionTokens } from './resources/Terminal/ConnectionTokens.js';\nimport { CreditReversals as TreasuryCreditReversals } from './resources/Treasury/CreditReversals.js';\nimport { Customers as TestHelpersCustomers } from './resources/TestHelpers/Customers.js';\nimport { DebitReversals as TreasuryDebitReversals } from './resources/Treasury/DebitReversals.js';\nimport { Disputes as IssuingDisputes } from './resources/Issuing/Disputes.js';\nimport { EarlyFraudWarnings as RadarEarlyFraudWarnings } from './resources/Radar/EarlyFraudWarnings.js';\nimport { Features as EntitlementsFeatures } from './resources/Entitlements/Features.js';\nimport { FinancialAccounts as TreasuryFinancialAccounts } from './resources/Treasury/FinancialAccounts.js';\nimport { InboundTransfers as TestHelpersTreasuryInboundTransfers } from './resources/TestHelpers/Treasury/InboundTransfers.js';\nimport { InboundTransfers as TreasuryInboundTransfers } from './resources/Treasury/InboundTransfers.js';\nimport { Locations as TerminalLocations } from './resources/Terminal/Locations.js';\nimport { MeterEventAdjustments as BillingMeterEventAdjustments } from './resources/Billing/MeterEventAdjustments.js';\nimport { MeterEvents as BillingMeterEvents } from './resources/Billing/MeterEvents.js';\nimport { Meters as BillingMeters } from './resources/Billing/Meters.js';\nimport { Orders as ClimateOrders } from './resources/Climate/Orders.js';\nimport { OutboundPayments as TestHelpersTreasuryOutboundPayments } from './resources/TestHelpers/Treasury/OutboundPayments.js';\nimport { OutboundPayments as TreasuryOutboundPayments } from './resources/Treasury/OutboundPayments.js';\nimport { OutboundTransfers as TestHelpersTreasuryOutboundTransfers } from './resources/TestHelpers/Treasury/OutboundTransfers.js';\nimport { OutboundTransfers as TreasuryOutboundTransfers } from './resources/Treasury/OutboundTransfers.js';\nimport { PersonalizationDesigns as TestHelpersIssuingPersonalizationDesigns } from './resources/TestHelpers/Issuing/PersonalizationDesigns.js';\nimport { PersonalizationDesigns as IssuingPersonalizationDesigns } from './resources/Issuing/PersonalizationDesigns.js';\nimport { PhysicalBundles as IssuingPhysicalBundles } from './resources/Issuing/PhysicalBundles.js';\nimport { Products as ClimateProducts } from './resources/Climate/Products.js';\nimport { Readers as TestHelpersTerminalReaders } from './resources/TestHelpers/Terminal/Readers.js';\nimport { Readers as TerminalReaders } from './resources/Terminal/Readers.js';\nimport { ReceivedCredits as TestHelpersTreasuryReceivedCredits } from './resources/TestHelpers/Treasury/ReceivedCredits.js';\nimport { ReceivedCredits as TreasuryReceivedCredits } from './resources/Treasury/ReceivedCredits.js';\nimport { ReceivedDebits as TestHelpersTreasuryReceivedDebits } from './resources/TestHelpers/Treasury/ReceivedDebits.js';\nimport { ReceivedDebits as TreasuryReceivedDebits } from './resources/Treasury/ReceivedDebits.js';\nimport { Refunds as TestHelpersRefunds } from './resources/TestHelpers/Refunds.js';\nimport { Registrations as TaxRegistrations } from './resources/Tax/Registrations.js';\nimport { ReportRuns as ReportingReportRuns } from './resources/Reporting/ReportRuns.js';\nimport { ReportTypes as ReportingReportTypes } from './resources/Reporting/ReportTypes.js';\nimport { Requests as ForwardingRequests } from './resources/Forwarding/Requests.js';\nimport { ScheduledQueryRuns as SigmaScheduledQueryRuns } from './resources/Sigma/ScheduledQueryRuns.js';\nimport { Secrets as AppsSecrets } from './resources/Apps/Secrets.js';\nimport { Sessions as BillingPortalSessions } from './resources/BillingPortal/Sessions.js';\nimport { Sessions as CheckoutSessions } from './resources/Checkout/Sessions.js';\nimport { Sessions as FinancialConnectionsSessions } from './resources/FinancialConnections/Sessions.js';\nimport { Settings as TaxSettings } from './resources/Tax/Settings.js';\nimport { Suppliers as ClimateSuppliers } from './resources/Climate/Suppliers.js';\nimport { TestClocks as TestHelpersTestClocks } from './resources/TestHelpers/TestClocks.js';\nimport { Tokens as IssuingTokens } from './resources/Issuing/Tokens.js';\nimport { TransactionEntries as TreasuryTransactionEntries } from './resources/Treasury/TransactionEntries.js';\nimport { Transactions as TestHelpersIssuingTransactions } from './resources/TestHelpers/Issuing/Transactions.js';\nimport { Transactions as FinancialConnectionsTransactions } from './resources/FinancialConnections/Transactions.js';\nimport { Transactions as IssuingTransactions } from './resources/Issuing/Transactions.js';\nimport { Transactions as TaxTransactions } from './resources/Tax/Transactions.js';\nimport { Transactions as TreasuryTransactions } from './resources/Treasury/Transactions.js';\nimport { ValueListItems as RadarValueListItems } from './resources/Radar/ValueListItems.js';\nimport { ValueLists as RadarValueLists } from './resources/Radar/ValueLists.js';\nimport { VerificationReports as IdentityVerificationReports } from './resources/Identity/VerificationReports.js';\nimport { VerificationSessions as IdentityVerificationSessions } from './resources/Identity/VerificationSessions.js';\nexport { Accounts as Account } from './resources/Accounts.js';\nexport { AccountLinks } from './resources/AccountLinks.js';\nexport { AccountSessions } from './resources/AccountSessions.js';\nexport { Accounts } from './resources/Accounts.js';\nexport { ApplePayDomains } from './resources/ApplePayDomains.js';\nexport { ApplicationFees } from './resources/ApplicationFees.js';\nexport { Balance } from './resources/Balance.js';\nexport { BalanceTransactions } from './resources/BalanceTransactions.js';\nexport { Charges } from './resources/Charges.js';\nexport { ConfirmationTokens } from './resources/ConfirmationTokens.js';\nexport { CountrySpecs } from './resources/CountrySpecs.js';\nexport { Coupons } from './resources/Coupons.js';\nexport { CreditNotes } from './resources/CreditNotes.js';\nexport { CustomerSessions } from './resources/CustomerSessions.js';\nexport { Customers } from './resources/Customers.js';\nexport { Disputes } from './resources/Disputes.js';\nexport { EphemeralKeys } from './resources/EphemeralKeys.js';\nexport { Events } from './resources/Events.js';\nexport { ExchangeRates } from './resources/ExchangeRates.js';\nexport { FileLinks } from './resources/FileLinks.js';\nexport { Files } from './resources/Files.js';\nexport { InvoiceItems } from './resources/InvoiceItems.js';\nexport { Invoices } from './resources/Invoices.js';\nexport { Mandates } from './resources/Mandates.js';\nexport { OAuth } from './resources/OAuth.js';\nexport { PaymentIntents } from './resources/PaymentIntents.js';\nexport { PaymentLinks } from './resources/PaymentLinks.js';\nexport { PaymentMethodConfigurations } from './resources/PaymentMethodConfigurations.js';\nexport { PaymentMethodDomains } from './resources/PaymentMethodDomains.js';\nexport { PaymentMethods } from './resources/PaymentMethods.js';\nexport { Payouts } from './resources/Payouts.js';\nexport { Plans } from './resources/Plans.js';\nexport { Prices } from './resources/Prices.js';\nexport { Products } from './resources/Products.js';\nexport { PromotionCodes } from './resources/PromotionCodes.js';\nexport { Quotes } from './resources/Quotes.js';\nexport { Refunds } from './resources/Refunds.js';\nexport { Reviews } from './resources/Reviews.js';\nexport { SetupAttempts } from './resources/SetupAttempts.js';\nexport { SetupIntents } from './resources/SetupIntents.js';\nexport { ShippingRates } from './resources/ShippingRates.js';\nexport { Sources } from './resources/Sources.js';\nexport { SubscriptionItems } from './resources/SubscriptionItems.js';\nexport { SubscriptionSchedules } from './resources/SubscriptionSchedules.js';\nexport { Subscriptions } from './resources/Subscriptions.js';\nexport { TaxCodes } from './resources/TaxCodes.js';\nexport { TaxIds } from './resources/TaxIds.js';\nexport { TaxRates } from './resources/TaxRates.js';\nexport { Tokens } from './resources/Tokens.js';\nexport { Topups } from './resources/Topups.js';\nexport { Transfers } from './resources/Transfers.js';\nexport { WebhookEndpoints } from './resources/WebhookEndpoints.js';\nexport const Apps = resourceNamespace('apps', { Secrets: AppsSecrets });\nexport const Billing = resourceNamespace('billing', {\n    MeterEventAdjustments: BillingMeterEventAdjustments,\n    MeterEvents: BillingMeterEvents,\n    Meters: BillingMeters,\n});\nexport const BillingPortal = resourceNamespace('billingPortal', {\n    Configurations: BillingPortalConfigurations,\n    Sessions: BillingPortalSessions,\n});\nexport const Checkout = resourceNamespace('checkout', {\n    Sessions: CheckoutSessions,\n});\nexport const Climate = resourceNamespace('climate', {\n    Orders: ClimateOrders,\n    Products: ClimateProducts,\n    Suppliers: ClimateSuppliers,\n});\nexport const Entitlements = resourceNamespace('entitlements', {\n    ActiveEntitlements: EntitlementsActiveEntitlements,\n    Features: EntitlementsFeatures,\n});\nexport const FinancialConnections = resourceNamespace('financialConnections', {\n    Accounts: FinancialConnectionsAccounts,\n    Sessions: FinancialConnectionsSessions,\n    Transactions: FinancialConnectionsTransactions,\n});\nexport const Forwarding = resourceNamespace('forwarding', {\n    Requests: ForwardingRequests,\n});\nexport const Identity = resourceNamespace('identity', {\n    VerificationReports: IdentityVerificationReports,\n    VerificationSessions: IdentityVerificationSessions,\n});\nexport const Issuing = resourceNamespace('issuing', {\n    Authorizations: IssuingAuthorizations,\n    Cardholders: IssuingCardholders,\n    Cards: IssuingCards,\n    Disputes: IssuingDisputes,\n    PersonalizationDesigns: IssuingPersonalizationDesigns,\n    PhysicalBundles: IssuingPhysicalBundles,\n    Tokens: IssuingTokens,\n    Transactions: IssuingTransactions,\n});\nexport const Radar = resourceNamespace('radar', {\n    EarlyFraudWarnings: RadarEarlyFraudWarnings,\n    ValueListItems: RadarValueListItems,\n    ValueLists: RadarValueLists,\n});\nexport const Reporting = resourceNamespace('reporting', {\n    ReportRuns: ReportingReportRuns,\n    ReportTypes: ReportingReportTypes,\n});\nexport const Sigma = resourceNamespace('sigma', {\n    ScheduledQueryRuns: SigmaScheduledQueryRuns,\n});\nexport const Tax = resourceNamespace('tax', {\n    Calculations: TaxCalculations,\n    Registrations: TaxRegistrations,\n    Settings: TaxSettings,\n    Transactions: TaxTransactions,\n});\nexport const Terminal = resourceNamespace('terminal', {\n    Configurations: TerminalConfigurations,\n    ConnectionTokens: TerminalConnectionTokens,\n    Locations: TerminalLocations,\n    Readers: TerminalReaders,\n});\nexport const TestHelpers = resourceNamespace('testHelpers', {\n    ConfirmationTokens: TestHelpersConfirmationTokens,\n    Customers: TestHelpersCustomers,\n    Refunds: TestHelpersRefunds,\n    TestClocks: TestHelpersTestClocks,\n    Issuing: resourceNamespace('issuing', {\n        Authorizations: TestHelpersIssuingAuthorizations,\n        Cards: TestHelpersIssuingCards,\n        PersonalizationDesigns: TestHelpersIssuingPersonalizationDesigns,\n        Transactions: TestHelpersIssuingTransactions,\n    }),\n    Terminal: resourceNamespace('terminal', {\n        Readers: TestHelpersTerminalReaders,\n    }),\n    Treasury: resourceNamespace('treasury', {\n        InboundTransfers: TestHelpersTreasuryInboundTransfers,\n        OutboundPayments: TestHelpersTreasuryOutboundPayments,\n        OutboundTransfers: TestHelpersTreasuryOutboundTransfers,\n        ReceivedCredits: TestHelpersTreasuryReceivedCredits,\n        ReceivedDebits: TestHelpersTreasuryReceivedDebits,\n    }),\n});\nexport const Treasury = resourceNamespace('treasury', {\n    CreditReversals: TreasuryCreditReversals,\n    DebitReversals: TreasuryDebitReversals,\n    FinancialAccounts: TreasuryFinancialAccounts,\n    InboundTransfers: TreasuryInboundTransfers,\n    OutboundPayments: TreasuryOutboundPayments,\n    OutboundTransfers: TreasuryOutboundTransfers,\n    ReceivedCredits: TreasuryReceivedCredits,\n    ReceivedDebits: TreasuryReceivedDebits,\n    TransactionEntries: TreasuryTransactionEntries,\n    Transactions: TreasuryTransactions,\n});\n", "// ResourceNamespace allows you to create nested resources, i.e. `stripe.issuing.cards`.\n// It also works recursively, so you could do i.e. `stripe.billing.invoicing.pay`.\nfunction ResourceNamespace(stripe, resources) {\n    for (const name in resources) {\n        const camelCaseName = name[0].toLowerCase() + name.substring(1);\n        const resource = new resources[name](stripe);\n        this[camelCaseName] = resource;\n    }\n}\nexport function resourceNamespace(namespace, resources) {\n    return function (stripe) {\n        return new ResourceNamespace(stripe, resources);\n    };\n}\n", "import * as qs from 'qs';\nconst OPTIONS_KEYS = [\n    'apiKey',\n    'idempotencyKey',\n    'stripeAccount',\n    'apiVersion',\n    'maxNetworkRetries',\n    'timeout',\n    'host',\n];\nexport function isOptionsHash(o) {\n    return (o &&\n        typeof o === 'object' &&\n        OPTIONS_KEYS.some((prop) => Object.prototype.hasOwnProperty.call(o, prop)));\n}\n/**\n * Stringifies an Object, accommodating nested objects\n * (forming the conventional key 'parent[child]=value')\n */\nexport function stringifyRequestData(data) {\n    return (qs\n        .stringify(data, {\n        serializeDate: (d) => Math.floor(d.getTime() / 1000).toString(),\n    })\n        // Don't use strict form encoding by changing the square bracket control\n        // characters back to their literals. This is fine by the server, and\n        // makes these parameter strings easier to read.\n        .replace(/%5B/g, '[')\n        .replace(/%5D/g, ']'));\n}\n/**\n * Outputs a new function with interpolated object property values.\n * Use like so:\n *   const fn = makeURLInterpolator('some/url/{param1}/{param2}');\n *   fn({ param1: 123, param2: 456 }); // => 'some/url/123/456'\n */\nexport const makeURLInterpolator = (() => {\n    const rc = {\n        '\\n': '\\\\n',\n        '\"': '\\\\\"',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n    return (str) => {\n        const cleanString = str.replace(/[\"\\n\\r\\u2028\\u2029]/g, ($0) => rc[$0]);\n        return (outputs) => {\n            return cleanString.replace(/\\{([\\s\\S]+?)\\}/g, ($0, $1) => \n            // @ts-ignore\n            encodeURIComponent(outputs[$1] || ''));\n        };\n    };\n})();\nexport function extractUrlParams(path) {\n    const params = path.match(/\\{\\w+\\}/g);\n    if (!params) {\n        return [];\n    }\n    return params.map((param) => param.replace(/[{}]/g, ''));\n}\n/**\n * Return the data argument from a list of arguments\n *\n * @param {object[]} args\n * @returns {object}\n */\nexport function getDataFromArgs(args) {\n    if (!Array.isArray(args) || !args[0] || typeof args[0] !== 'object') {\n        return {};\n    }\n    if (!isOptionsHash(args[0])) {\n        return args.shift();\n    }\n    const argKeys = Object.keys(args[0]);\n    const optionKeysInArgs = argKeys.filter((key) => OPTIONS_KEYS.includes(key));\n    // In some cases options may be the provided as the first argument.\n    // Here we're detecting a case where there are two distinct arguments\n    // (the first being args and the second options) and with known\n    // option keys in the first so that we can warn the user about it.\n    if (optionKeysInArgs.length > 0 &&\n        optionKeysInArgs.length !== argKeys.length) {\n        emitWarning(`Options found in arguments (${optionKeysInArgs.join(', ')}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options.`);\n    }\n    return {};\n}\n/**\n * Return the options hash from a list of arguments\n */\nexport function getOptionsFromArgs(args) {\n    const opts = {\n        auth: null,\n        host: null,\n        headers: {},\n        settings: {},\n    };\n    if (args.length > 0) {\n        const arg = args[args.length - 1];\n        if (typeof arg === 'string') {\n            opts.auth = args.pop();\n        }\n        else if (isOptionsHash(arg)) {\n            const params = Object.assign({}, args.pop());\n            const extraKeys = Object.keys(params).filter((key) => !OPTIONS_KEYS.includes(key));\n            if (extraKeys.length) {\n                emitWarning(`Invalid options found (${extraKeys.join(', ')}); ignoring.`);\n            }\n            if (params.apiKey) {\n                opts.auth = params.apiKey;\n            }\n            if (params.idempotencyKey) {\n                opts.headers['Idempotency-Key'] = params.idempotencyKey;\n            }\n            if (params.stripeAccount) {\n                opts.headers['Stripe-Account'] = params.stripeAccount;\n            }\n            if (params.apiVersion) {\n                opts.headers['Stripe-Version'] = params.apiVersion;\n            }\n            if (Number.isInteger(params.maxNetworkRetries)) {\n                opts.settings.maxNetworkRetries = params.maxNetworkRetries;\n            }\n            if (Number.isInteger(params.timeout)) {\n                opts.settings.timeout = params.timeout;\n            }\n            if (params.host) {\n                opts.host = params.host;\n            }\n        }\n    }\n    return opts;\n}\n/**\n * Provide simple \"Class\" extension mechanism.\n * <!-- Public API accessible via Stripe.StripeResource.extend -->\n */\nexport function protoExtend(sub) {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const Super = this;\n    const Constructor = Object.prototype.hasOwnProperty.call(sub, 'constructor')\n        ? sub.constructor\n        : function (...args) {\n            Super.apply(this, args);\n        };\n    // This initialization logic is somewhat sensitive to be compatible with\n    // divergent JS implementations like the one found in Qt. See here for more\n    // context:\n    //\n    // https://github.com/stripe/stripe-node/pull/334\n    Object.assign(Constructor, Super);\n    Constructor.prototype = Object.create(Super.prototype);\n    Object.assign(Constructor.prototype, sub);\n    return Constructor;\n}\n/**\n * Remove empty values from an object\n */\nexport function removeNullish(obj) {\n    if (typeof obj !== 'object') {\n        throw new Error('Argument must be an object');\n    }\n    return Object.keys(obj).reduce((result, key) => {\n        if (obj[key] != null) {\n            result[key] = obj[key];\n        }\n        return result;\n    }, {});\n}\n/**\n * Normalize standard HTTP Headers:\n * {'foo-bar': 'hi'}\n * becomes\n * {'Foo-Bar': 'hi'}\n */\nexport function normalizeHeaders(obj) {\n    if (!(obj && typeof obj === 'object')) {\n        return obj;\n    }\n    return Object.keys(obj).reduce((result, header) => {\n        result[normalizeHeader(header)] = obj[header];\n        return result;\n    }, {});\n}\n/**\n * Stolen from https://github.com/marten-de-vries/header-case-normalizer/blob/master/index.js#L36-L41\n * without the exceptions which are irrelevant to us.\n */\nexport function normalizeHeader(header) {\n    return header\n        .split('-')\n        .map((text) => text.charAt(0).toUpperCase() + text.substr(1).toLowerCase())\n        .join('-');\n}\nexport function callbackifyPromiseWithTimeout(promise, callback) {\n    if (callback) {\n        // Ensure callback is called outside of promise stack.\n        return promise.then((res) => {\n            setTimeout(() => {\n                callback(null, res);\n            }, 0);\n        }, (err) => {\n            setTimeout(() => {\n                callback(err, null);\n            }, 0);\n        });\n    }\n    return promise;\n}\n/**\n * Allow for special capitalization cases (such as OAuth)\n */\nexport function pascalToCamelCase(name) {\n    if (name === 'OAuth') {\n        return 'oauth';\n    }\n    else {\n        return name[0].toLowerCase() + name.substring(1);\n    }\n}\nexport function emitWarning(warning) {\n    if (typeof process.emitWarning !== 'function') {\n        return console.warn(`Stripe: ${warning}`); /* eslint-disable-line no-console */\n    }\n    return process.emitWarning(warning, 'Stripe');\n}\nexport function isObject(obj) {\n    const type = typeof obj;\n    return (type === 'function' || type === 'object') && !!obj;\n}\n// For use in multipart requests\nexport function flattenAndStringify(data) {\n    const result = {};\n    const step = (obj, prevKey) => {\n        Object.keys(obj).forEach((key) => {\n            // @ts-ignore\n            const value = obj[key];\n            const newKey = prevKey ? `${prevKey}[${key}]` : key;\n            if (isObject(value)) {\n                if (!(value instanceof Uint8Array) &&\n                    !Object.prototype.hasOwnProperty.call(value, 'data')) {\n                    // Non-buffer non-file Objects are recursively flattened\n                    return step(value, newKey);\n                }\n                else {\n                    // Buffers and file objects are stored without modification\n                    result[newKey] = value;\n                }\n            }\n            else {\n                // Primitives are converted to strings\n                result[newKey] = String(value);\n            }\n        });\n    };\n    step(data, null);\n    return result;\n}\nexport function validateInteger(name, n, defaultVal) {\n    if (!Number.isInteger(n)) {\n        if (defaultVal !== undefined) {\n            return defaultVal;\n        }\n        else {\n            throw new Error(`${name} must be an integer`);\n        }\n    }\n    return n;\n}\nexport function determineProcessUserAgentProperties() {\n    return typeof process === 'undefined'\n        ? {}\n        : {\n            lang_version: process.version,\n            platform: process.platform,\n        };\n}\n/**\n * Joins an array of Uint8Arrays into a single Uint8Array\n */\nexport function concat(arrays) {\n    const totalLength = arrays.reduce((len, array) => len + array.length, 0);\n    const merged = new Uint8Array(totalLength);\n    let offset = 0;\n    arrays.forEach((array) => {\n        merged.set(array, offset);\n        offset += array.length;\n    });\n    return merged;\n}\n", "import { callbackifyPromiseWithTimeout, getDataFromArgs } from './utils.js';\nclass StripeIterator {\n    constructor(firstPagePromise, requestArgs, spec, stripeResource) {\n        this.index = 0;\n        this.pagePromise = firstPagePromise;\n        this.promiseCache = { currentPromise: null };\n        this.requestArgs = requestArgs;\n        this.spec = spec;\n        this.stripeResource = stripeResource;\n    }\n    async iterate(pageResult) {\n        if (!(pageResult &&\n            pageResult.data &&\n            typeof pageResult.data.length === 'number')) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `data` array.');\n        }\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        if (this.index < pageResult.data.length) {\n            const idx = reverseIteration\n                ? pageResult.data.length - 1 - this.index\n                : this.index;\n            const value = pageResult.data[idx];\n            this.index += 1;\n            return { value, done: false };\n        }\n        else if (pageResult.has_more) {\n            // Reset counter, request next page, and recurse.\n            this.index = 0;\n            this.pagePromise = this.getNextPage(pageResult);\n            const nextPageResult = await this.pagePromise;\n            return this.iterate(nextPageResult);\n        }\n        return { done: true, value: undefined };\n    }\n    /** @abstract */\n    getNextPage(_pageResult) {\n        throw new Error('Unimplemented');\n    }\n    async _next() {\n        return this.iterate(await this.pagePromise);\n    }\n    next() {\n        /**\n         * If a user calls `.next()` multiple times in parallel,\n         * return the same result until something has resolved\n         * to prevent page-turning race conditions.\n         */\n        if (this.promiseCache.currentPromise) {\n            return this.promiseCache.currentPromise;\n        }\n        const nextPromise = (async () => {\n            const ret = await this._next();\n            this.promiseCache.currentPromise = null;\n            return ret;\n        })();\n        this.promiseCache.currentPromise = nextPromise;\n        return nextPromise;\n    }\n}\nclass ListIterator extends StripeIterator {\n    getNextPage(pageResult) {\n        const reverseIteration = isReverseIteration(this.requestArgs);\n        const lastId = getLastId(pageResult, reverseIteration);\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            [reverseIteration ? 'ending_before' : 'starting_after']: lastId,\n        });\n    }\n}\nclass SearchIterator extends StripeIterator {\n    getNextPage(pageResult) {\n        if (!pageResult.next_page) {\n            throw Error('Unexpected: Stripe API response does not have a well-formed `next_page` field, but `has_more` was true.');\n        }\n        return this.stripeResource._makeRequest(this.requestArgs, this.spec, {\n            page: pageResult.next_page,\n        });\n    }\n}\nexport const makeAutoPaginationMethods = (stripeResource, requestArgs, spec, firstPagePromise) => {\n    if (spec.methodType === 'search') {\n        return makeAutoPaginationMethodsFromIterator(new SearchIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    if (spec.methodType === 'list') {\n        return makeAutoPaginationMethodsFromIterator(new ListIterator(firstPagePromise, requestArgs, spec, stripeResource));\n    }\n    return null;\n};\nconst makeAutoPaginationMethodsFromIterator = (iterator) => {\n    const autoPagingEach = makeAutoPagingEach((...args) => iterator.next(...args));\n    const autoPagingToArray = makeAutoPagingToArray(autoPagingEach);\n    const autoPaginationMethods = {\n        autoPagingEach,\n        autoPagingToArray,\n        // Async iterator functions:\n        next: () => iterator.next(),\n        return: () => {\n            // This is required for `break`.\n            return {};\n        },\n        [getAsyncIteratorSymbol()]: () => {\n            return autoPaginationMethods;\n        },\n    };\n    return autoPaginationMethods;\n};\n/**\n * ----------------\n * Private Helpers:\n * ----------------\n */\nfunction getAsyncIteratorSymbol() {\n    if (typeof Symbol !== 'undefined' && Symbol.asyncIterator) {\n        return Symbol.asyncIterator;\n    }\n    // Follow the convention from libraries like iterall: https://github.com/leebyron/iterall#asynciterator-1\n    return '@@asyncIterator';\n}\nfunction getDoneCallback(args) {\n    if (args.length < 2) {\n        return null;\n    }\n    const onDone = args[1];\n    if (typeof onDone !== 'function') {\n        throw Error(`The second argument to autoPagingEach, if present, must be a callback function; received ${typeof onDone}`);\n    }\n    return onDone;\n}\n/**\n * We allow four forms of the `onItem` callback (the middle two being equivalent),\n *\n *   1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n *   2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n *   3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n *   4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n *\n * In addition to standard validation, this helper\n * coalesces the former forms into the latter form.\n */\nfunction getItemCallback(args) {\n    if (args.length === 0) {\n        return undefined;\n    }\n    const onItem = args[0];\n    if (typeof onItem !== 'function') {\n        throw Error(`The first argument to autoPagingEach, if present, must be a callback function; received ${typeof onItem}`);\n    }\n    // 4. `.autoPagingEach((item, next) => { doSomething(item); next(false); });`\n    if (onItem.length === 2) {\n        return onItem;\n    }\n    if (onItem.length > 2) {\n        throw Error(`The \\`onItem\\` callback function passed to autoPagingEach must accept at most two arguments; got ${onItem}`);\n    }\n    // This magically handles all three of these usecases (the latter two being functionally identical):\n    // 1. `.autoPagingEach((item) => { doSomething(item); return false; });`\n    // 2. `.autoPagingEach(async (item) => { await doSomething(item); return false; });`\n    // 3. `.autoPagingEach((item) => doSomething(item).then(() => false));`\n    return function _onItem(item, next) {\n        const shouldContinue = onItem(item);\n        next(shouldContinue);\n    };\n}\nfunction getLastId(listResult, reverseIteration) {\n    const lastIdx = reverseIteration ? 0 : listResult.data.length - 1;\n    const lastItem = listResult.data[lastIdx];\n    const lastId = lastItem && lastItem.id;\n    if (!lastId) {\n        throw Error('Unexpected: No `id` found on the last item while auto-paging a list.');\n    }\n    return lastId;\n}\nfunction makeAutoPagingEach(asyncIteratorNext) {\n    return function autoPagingEach( /* onItem?, onDone? */) {\n        const args = [].slice.call(arguments);\n        const onItem = getItemCallback(args);\n        const onDone = getDoneCallback(args);\n        if (args.length > 2) {\n            throw Error(`autoPagingEach takes up to two arguments; received ${args}`);\n        }\n        const autoPagePromise = wrapAsyncIteratorWithCallback(asyncIteratorNext, \n        // @ts-ignore we might need a null check\n        onItem);\n        return callbackifyPromiseWithTimeout(autoPagePromise, onDone);\n    };\n}\nfunction makeAutoPagingToArray(autoPagingEach) {\n    return function autoPagingToArray(opts, onDone) {\n        const limit = opts && opts.limit;\n        if (!limit) {\n            throw Error('You must pass a `limit` option to autoPagingToArray, e.g., `autoPagingToArray({limit: 1000});`.');\n        }\n        if (limit > 10000) {\n            throw Error('You cannot specify a limit of more than 10,000 items to fetch in `autoPagingToArray`; use `autoPagingEach` to iterate through longer lists.');\n        }\n        const promise = new Promise((resolve, reject) => {\n            const items = [];\n            autoPagingEach((item) => {\n                items.push(item);\n                if (items.length >= limit) {\n                    return false;\n                }\n            })\n                .then(() => {\n                resolve(items);\n            })\n                .catch(reject);\n        });\n        // @ts-ignore\n        return callbackifyPromiseWithTimeout(promise, onDone);\n    };\n}\nfunction wrapAsyncIteratorWithCallback(asyncIteratorNext, onItem) {\n    return new Promise((resolve, reject) => {\n        function handleIteration(iterResult) {\n            if (iterResult.done) {\n                resolve();\n                return;\n            }\n            const item = iterResult.value;\n            return new Promise((next) => {\n                // Bit confusing, perhaps; we pass a `resolve` fn\n                // to the user, so they can decide when and if to continue.\n                // They can return false, or a promise which resolves to false, to break.\n                onItem(item, next);\n            }).then((shouldContinue) => {\n                if (shouldContinue === false) {\n                    return handleIteration({ done: true, value: undefined });\n                }\n                else {\n                    return asyncIteratorNext().then(handleIteration);\n                }\n            });\n        }\n        asyncIteratorNext()\n            .then(handleIteration)\n            .catch(reject);\n    });\n}\nfunction isReverseIteration(requestArgs) {\n    const args = [].slice.call(requestArgs);\n    const dataFromArgs = getDataFromArgs(args);\n    return !!dataFromArgs.ending_before;\n}\n", "import { callbackifyPromiseWithTimeout, extractUrlParams } from './utils.js';\nimport { makeAutoPaginationMethods } from './autoPagination.js';\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.fullPath=''] Fully qualified path to the method (eg. /v1/a/b/c).\n *  If this is specified, path should not be specified.\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n *\n * <!-- Public API accessible via Stripe.StripeResource.method -->\n */\nexport function stripeMethod(spec) {\n    if (spec.path !== undefined && spec.fullPath !== undefined) {\n        throw new Error(`Method spec specified both a 'path' (${spec.path}) and a 'fullPath' (${spec.fullPath}).`);\n    }\n    return function (...args) {\n        const callback = typeof args[args.length - 1] == 'function' && args.pop();\n        spec.urlParams = extractUrlParams(spec.fullPath || this.createResourcePathWithSymbols(spec.path || ''));\n        const requestPromise = callbackifyPromiseWithTimeout(this._makeRequest(args, spec, {}), callback);\n        Object.assign(requestPromise, makeAutoPaginationMethods(this, args, spec, requestPromise));\n        return requestPromise;\n    };\n}\n", "import { getDataFromArgs, getOptionsFromArgs, makeURLInterpolator, protoExtend, stringifyRequestData, } from './utils.js';\nimport { stripeMethod } from './StripeMethod.js';\n// Provide extension mechanism for Stripe Resource Sub-Classes\nStripeResource.extend = protoExtend;\n// Expose method-creator\nStripeResource.method = stripeMethod;\nStripeResource.MAX_BUFFERED_REQUEST_METRICS = 100;\n/**\n * Encapsulates request logic for a Stripe Resource\n */\nfunction StripeResource(stripe, deprecatedUrlData) {\n    this._stripe = stripe;\n    if (deprecatedUrlData) {\n        throw new Error('Support for curried url params was dropped in stripe-node v7.0.0. Instead, pass two ids.');\n    }\n    this.basePath = makeURLInterpolator(\n    // @ts-ignore changing type of basePath\n    this.basePath || stripe.getApiField('basePath'));\n    // @ts-ignore changing type of path\n    this.resourcePath = this.path;\n    // @ts-ignore changing type of path\n    this.path = makeURLInterpolator(this.path);\n    this.initialize(...arguments);\n}\nStripeResource.prototype = {\n    _stripe: null,\n    // @ts-ignore the type of path changes in ctor\n    path: '',\n    resourcePath: '',\n    // Methods that don't use the API's default '/v1' path can override it with this setting.\n    basePath: null,\n    initialize() { },\n    // Function to override the default data processor. This allows full control\n    // over how a StripeResource's request data will get converted into an HTTP\n    // body. This is useful for non-standard HTTP requests. The function should\n    // take method name, data, and headers as arguments.\n    requestDataProcessor: null,\n    // Function to add a validation checks before sending the request, errors should\n    // be thrown, and they will be passed to the callback/promise.\n    validateRequest: null,\n    createFullPath(commandPath, urlData) {\n        const urlParts = [this.basePath(urlData), this.path(urlData)];\n        if (typeof commandPath === 'function') {\n            const computedCommandPath = commandPath(urlData);\n            // If we have no actual command path, we just omit it to avoid adding a\n            // trailing slash. This is important for top-level listing requests, which\n            // do not have a command path.\n            if (computedCommandPath) {\n                urlParts.push(computedCommandPath);\n            }\n        }\n        else {\n            urlParts.push(commandPath);\n        }\n        return this._joinUrlParts(urlParts);\n    },\n    // Creates a relative resource path with symbols left in (unlike\n    // createFullPath which takes some data to replace them with). For example it\n    // might produce: /invoices/{id}\n    createResourcePathWithSymbols(pathWithSymbols) {\n        // If there is no path beyond the resource path, we want to produce just\n        // /<resource path> rather than /<resource path>/.\n        if (pathWithSymbols) {\n            return `/${this._joinUrlParts([this.resourcePath, pathWithSymbols])}`;\n        }\n        else {\n            return `/${this.resourcePath}`;\n        }\n    },\n    _joinUrlParts(parts) {\n        // Replace any accidentally doubled up slashes. This previously used\n        // path.join, which would do this as well. Unfortunately we need to do this\n        // as the functions for creating paths are technically part of the public\n        // interface and so we need to preserve backwards compatibility.\n        return parts.join('/').replace(/\\/{2,}/g, '/');\n    },\n    _getRequestOpts(requestArgs, spec, overrideData) {\n        // Extract spec values with defaults.\n        const requestMethod = (spec.method || 'GET').toUpperCase();\n        const usage = spec.usage || [];\n        const urlParams = spec.urlParams || [];\n        const encode = spec.encode || ((data) => data);\n        const isUsingFullPath = !!spec.fullPath;\n        const commandPath = makeURLInterpolator(isUsingFullPath ? spec.fullPath : spec.path || '');\n        // When using fullPath, we ignore the resource path as it should already be\n        // fully qualified.\n        const path = isUsingFullPath\n            ? spec.fullPath\n            : this.createResourcePathWithSymbols(spec.path);\n        // Don't mutate args externally.\n        const args = [].slice.call(requestArgs);\n        // Generate and validate url params.\n        const urlData = urlParams.reduce((urlData, param) => {\n            const arg = args.shift();\n            if (typeof arg !== 'string') {\n                throw new Error(`Stripe: Argument \"${param}\" must be a string, but got: ${arg} (on API request to \\`${requestMethod} ${path}\\`)`);\n            }\n            urlData[param] = arg;\n            return urlData;\n        }, {});\n        // Pull request data and options (headers, auth) from args.\n        const dataFromArgs = getDataFromArgs(args);\n        const data = encode(Object.assign({}, dataFromArgs, overrideData));\n        const options = getOptionsFromArgs(args);\n        const host = options.host || spec.host;\n        const streaming = !!spec.streaming;\n        // Validate that there are no more args.\n        if (args.filter((x) => x != null).length) {\n            throw new Error(`Stripe: Unknown arguments (${args}). Did you mean to pass an options object? See https://github.com/stripe/stripe-node/wiki/Passing-Options. (on API request to ${requestMethod} \\`${path}\\`)`);\n        }\n        // When using full path, we can just invoke the URL interpolator directly\n        // as we don't need to use the resource to create a full path.\n        const requestPath = isUsingFullPath\n            ? commandPath(urlData)\n            : this.createFullPath(commandPath, urlData);\n        const headers = Object.assign(options.headers, spec.headers);\n        if (spec.validator) {\n            spec.validator(data, { headers });\n        }\n        const dataInQuery = spec.method === 'GET' || spec.method === 'DELETE';\n        const bodyData = dataInQuery ? {} : data;\n        const queryData = dataInQuery ? data : {};\n        return {\n            requestMethod,\n            requestPath,\n            bodyData,\n            queryData,\n            auth: options.auth,\n            headers,\n            host: host !== null && host !== void 0 ? host : null,\n            streaming,\n            settings: options.settings,\n            usage,\n        };\n    },\n    _makeRequest(requestArgs, spec, overrideData) {\n        return new Promise((resolve, reject) => {\n            var _a;\n            let opts;\n            try {\n                opts = this._getRequestOpts(requestArgs, spec, overrideData);\n            }\n            catch (err) {\n                reject(err);\n                return;\n            }\n            function requestCallback(err, response) {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(spec.transformResponseData\n                        ? spec.transformResponseData(response)\n                        : response);\n                }\n            }\n            const emptyQuery = Object.keys(opts.queryData).length === 0;\n            const path = [\n                opts.requestPath,\n                emptyQuery ? '' : '?',\n                stringifyRequestData(opts.queryData),\n            ].join('');\n            const { headers, settings } = opts;\n            this._stripe._requestSender._request(opts.requestMethod, opts.host, path, opts.bodyData, opts.auth, { headers, settings, streaming: opts.streaming }, opts.usage, requestCallback, (_a = this.requestDataProcessor) === null || _a === void 0 ? void 0 : _a.bind(this));\n        });\n    },\n};\nexport { StripeResource };\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Accounts = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts',\n        methodType: 'list',\n    }),\n    disconnect: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/disconnect',\n    }),\n    listOwners: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/accounts/{account}/owners',\n        methodType: 'list',\n    }),\n    refresh: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/refresh',\n    }),\n    subscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/subscribe',\n    }),\n    unsubscribe: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/accounts/{account}/unsubscribe',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ActiveEntitlements = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/active_entitlements',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/capture',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/expire',\n    }),\n    increment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/increment',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/authorizations/{authorization}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Authorizations = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/authorizations',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/approve',\n    }),\n    decline: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/authorizations/{authorization}/decline',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Calculations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/calculations' }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/calculations/{calculation}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cardholders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cardholders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/cardholders/{cardholder}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cardholders',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    deliverCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/deliver',\n    }),\n    failCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/fail',\n    }),\n    returnCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/return',\n    }),\n    shipCard: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/cards/{card}/shipping/ship',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Cards = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/issuing/cards/{card}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/cards/{card}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/cards',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing_portal/configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Configurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/configurations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/configurations/{configuration}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/confirmation_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConnectionTokens = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/connection_tokens',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/credit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals/{credit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/credit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    fundCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/customers/{customer}/fund_cash_balance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const DebitReversals = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/debit_reversals',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals/{debit_reversal}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/debit_reversals',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/issuing/disputes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/disputes',\n        methodType: 'list',\n    }),\n    submit: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/disputes/{dispute}/submit',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EarlyFraudWarnings = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings/{early_fraud_warning}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/early_fraud_warnings',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Features = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/entitlements/features' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/entitlements/features/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/entitlements/features',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FinancialAccounts = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts',\n        methodType: 'list',\n    }),\n    retrieveFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n    updateFeatures: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/financial_accounts/{financial_account}/features',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/fail',\n    }),\n    returnInboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/return',\n    }),\n    succeed: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/inbound_transfers/{id}/succeed',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/inbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/inbound_transfers/{inbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Locations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/locations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/locations',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/locations/{location}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEventAdjustments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meter_event_adjustments',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const MeterEvents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meter_events' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Meters = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/billing/meters/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/billing/meters/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters',\n        methodType: 'list',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/deactivate',\n    }),\n    listEventSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/billing/meters/{id}/event_summaries',\n        methodType: 'list',\n    }),\n    reactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing/meters/{id}/reactivate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Orders = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/climate/orders' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/orders',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/climate/orders/{order}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/post',\n    }),\n    returnOutboundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_payments/{id}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundPayments = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_payments',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_payments/{id}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    fail: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/fail',\n    }),\n    post: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/post',\n    }),\n    returnOutboundTransfer: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/outbound_transfers/{outbound_transfer}/return',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const OutboundTransfers = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/outbound_transfers',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/treasury/outbound_transfers/{outbound_transfer}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    activate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/activate',\n    }),\n    deactivate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/deactivate',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/personalization_designs/{personalization_design}/reject',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PersonalizationDesigns = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/personalization_designs/{personalization_design}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/personalization_designs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PhysicalBundles = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles/{physical_bundle}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/physical_bundles',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products/{product}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/products',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    presentPaymentMethod: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/terminal/readers/{reader}/present_payment_method',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Readers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/terminal/readers' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/terminal/readers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/terminal/readers/{reader}',\n    }),\n    cancelAction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/cancel_action',\n    }),\n    processPaymentIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_payment_intent',\n    }),\n    processSetupIntent: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/process_setup_intent',\n    }),\n    refundPayment: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/refund_payment',\n    }),\n    setReaderDisplay: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/terminal/readers/{reader}/set_reader_display',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_credits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedCredits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_credits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/treasury/received_debits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReceivedDebits = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/received_debits',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/refunds/{refund}/expire',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Registrations = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax/registrations' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/registrations/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/registrations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportRuns = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/reporting/report_runs' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs/{report_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ReportTypes = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types/{report_type}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reporting/report_types',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Requests = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/forwarding/requests' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/forwarding/requests',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ScheduledQueryRuns = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs/{scheduled_query_run}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sigma/scheduled_query_runs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Secrets = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apps/secrets' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apps/secrets',\n        methodType: 'list',\n    }),\n    deleteWhere: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/apps/secrets/delete',\n    }),\n    find: stripeMethod({ method: 'GET', fullPath: '/v1/apps/secrets/find' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/billing_portal/sessions',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/checkout/sessions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions',\n        methodType: 'list',\n    }),\n    expire: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/checkout/sessions/{session}/expire',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/checkout/sessions/{session}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/financial_connections/sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/sessions/{session}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Settings = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax/settings' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax/settings' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Suppliers = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers/{supplier}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/climate/suppliers',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TestClocks = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/test_helpers/test_clocks',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}',\n    }),\n    advance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/test_clocks/{test_clock}/advance',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/tokens/{token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/tokens',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TransactionEntries = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transaction_entries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    createForceCapture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_force_capture',\n    }),\n    createUnlinkedRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/create_unlinked_refund',\n    }),\n    refund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/test_helpers/issuing/transactions/{transaction}/refund',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/financial_connections/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/issuing/transactions/{transaction}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/issuing/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}',\n    }),\n    createFromCalculation: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_from_calculation',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/tax/transactions/create_reversal',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax/transactions/{transaction}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/treasury/transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueListItems = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_list_items',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_list_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_list_items/{item}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ValueLists = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/radar/value_lists' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/radar/value_lists',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/radar/value_lists/{value_list}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationReports = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports/{report}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_reports',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const VerificationSessions = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/identity/verification_sessions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/cancel',\n    }),\n    redact: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/identity/verification_sessions/{session}/redact',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\n// Since path can either be `account` or `accounts`, support both through stripeMethod path\nexport const Accounts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/accounts' }),\n    retrieve(id, ...args) {\n        // No longer allow an api key to be passed as the first string to this function due to ambiguity between\n        // old account ids and api keys. To request the account for an api key, send null as the id\n        if (typeof id === 'string') {\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/accounts/{id}',\n            }).apply(this, [id, ...args]);\n        }\n        else {\n            if (id === null || id === undefined) {\n                // Remove id as stripeMethod would complain of unexpected argument\n                [].shift.apply([id, ...args]);\n            }\n            return stripeMethod({\n                method: 'GET',\n                fullPath: '/v1/account',\n            }).apply(this, [id, ...args]);\n        }\n    },\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/accounts/{account}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/accounts/{account}' }),\n    createExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n    }),\n    createLoginLink: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/login_links',\n    }),\n    createPerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons',\n    }),\n    deleteExternalAccount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    deletePerson: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    listCapabilities: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities',\n        methodType: 'list',\n    }),\n    listExternalAccounts: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts',\n        methodType: 'list',\n    }),\n    listPersons: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons',\n        methodType: 'list',\n    }),\n    reject: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/reject',\n    }),\n    retrieveCurrent: stripeMethod({ method: 'GET', fullPath: '/v1/account' }),\n    retrieveCapability: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    retrieveExternalAccount: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    retrievePerson: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n    updateCapability: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/capabilities/{capability}',\n    }),\n    updateExternalAccount: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/external_accounts/{id}',\n    }),\n    updatePerson: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/accounts/{account}/persons/{person}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_links' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const AccountSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/account_sessions' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplePayDomains = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/apple_pay/domains' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/apple_pay/domains',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/apple_pay/domains/{domain}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ApplicationFees = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees',\n        methodType: 'list',\n    }),\n    createRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{id}/refunds',\n    }),\n    listRefunds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{id}/refunds',\n        methodType: 'list',\n    }),\n    retrieveRefund: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n    updateRefund: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/application_fees/{fee}/refunds/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Balance = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/balance' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const BalanceTransactions = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions/{id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/balance_transactions',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Charges = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/charges' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/charges/{charge}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/charges/{charge}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges',\n        methodType: 'list',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/charges/{charge}/capture',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/charges/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ConfirmationTokens = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/confirmation_tokens/{confirmation_token}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CountrySpecs = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs/{country}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/country_specs',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Coupons = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/coupons' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/coupons/{coupon}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/coupons/{coupon}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/coupons',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/coupons/{coupon}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CreditNotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/credit_notes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/{credit_note}/lines',\n        methodType: 'list',\n    }),\n    listPreviewLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/credit_notes/preview/lines',\n        methodType: 'list',\n    }),\n    preview: stripeMethod({ method: 'GET', fullPath: '/v1/credit_notes/preview' }),\n    voidCreditNote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/credit_notes/{id}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const CustomerSessions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customer_sessions' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Customers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/customers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/customers/{customer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/customers/{customer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/customers/{customer}' }),\n    createBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n    }),\n    createFundingInstructions: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/funding_instructions',\n    }),\n    createSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources',\n    }),\n    createTaxId: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/discount',\n    }),\n    deleteSource: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    deleteTaxId: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    listBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions',\n        methodType: 'list',\n    }),\n    listCashBalanceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions',\n        methodType: 'list',\n    }),\n    listPaymentMethods: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods',\n        methodType: 'list',\n    }),\n    listSources: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources',\n        methodType: 'list',\n    }),\n    listTaxIds: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids',\n        methodType: 'list',\n    }),\n    retrieveBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    retrieveCashBalance: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    retrieveCashBalanceTransaction: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/cash_balance_transactions/{transaction}',\n    }),\n    retrievePaymentMethod: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/payment_methods/{payment_method}',\n    }),\n    retrieveSource: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    retrieveTaxId: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/{customer}/tax_ids/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/customers/search',\n        methodType: 'search',\n    }),\n    updateBalanceTransaction: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/balance_transactions/{transaction}',\n    }),\n    updateCashBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/cash_balance',\n    }),\n    updateSource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}',\n    }),\n    verifySource: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/customers/{customer}/sources/{id}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Disputes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/disputes/{dispute}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/disputes/{dispute}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/disputes',\n        methodType: 'list',\n    }),\n    close: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/disputes/{dispute}/close',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const EphemeralKeys = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/ephemeral_keys',\n        validator: (data, options) => {\n            if (!options.headers || !options.headers['Stripe-Version']) {\n                throw new Error('Passing apiVersion in a separate options hash is required to create an ephemeral key. See https://stripe.com/docs/api/versioning?lang=node');\n            }\n        },\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/ephemeral_keys/{key}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Events = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/events/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/events',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ExchangeRates = StripeResource.extend({\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates/{rate_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/exchange_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const FileLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/file_links' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/file_links/{link}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/file_links/{link}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/file_links',\n        methodType: 'list',\n    }),\n});\n", "import { flattenAndStringify, stringifyRequestData } from './utils.js';\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nconst multipartDataGenerator = (method, data, headers) => {\n    const segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n    headers['Content-Type'] = `multipart/form-data; boundary=${segno}`;\n    const textEncoder = new TextEncoder();\n    let buffer = new Uint8Array(0);\n    const endBuffer = textEncoder.encode('\\r\\n');\n    function push(l) {\n        const prevBuffer = buffer;\n        const newBuffer = l instanceof Uint8Array ? l : new Uint8Array(textEncoder.encode(l));\n        buffer = new Uint8Array(prevBuffer.length + newBuffer.length + 2);\n        buffer.set(prevBuffer);\n        buffer.set(newBuffer, prevBuffer.length);\n        buffer.set(endBuffer, buffer.length - 2);\n    }\n    function q(s) {\n        return `\"${s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ')}\"`;\n    }\n    const flattenedData = flattenAndStringify(data);\n    for (const k in flattenedData) {\n        const v = flattenedData[k];\n        push(`--${segno}`);\n        if (Object.prototype.hasOwnProperty.call(v, 'data')) {\n            const typedEntry = v;\n            push(`Content-Disposition: form-data; name=${q(k)}; filename=${q(typedEntry.name || 'blob')}`);\n            push(`Content-Type: ${typedEntry.type || 'application/octet-stream'}`);\n            push('');\n            push(typedEntry.data);\n        }\n        else {\n            push(`Content-Disposition: form-data; name=${q(k)}`);\n            push('');\n            push(v);\n        }\n    }\n    push(`--${segno}--`);\n    return buffer;\n};\nexport function multipartRequestDataProcessor(method, data, headers, callback) {\n    data = data || {};\n    if (method !== 'POST') {\n        return callback(null, stringifyRequestData(data));\n    }\n    this._stripe._platformFunctions\n        .tryBufferData(data)\n        .then((bufferedData) => {\n        const buffer = multipartDataGenerator(method, bufferedData, headers);\n        return callback(null, buffer);\n    })\n        .catch((err) => callback(err, null));\n}\n", "// File generated from our OpenAPI spec\nimport { multipartRequestDataProcessor } from '../multipart.js';\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Files = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/files',\n        headers: {\n            'Content-Type': 'multipart/form-data',\n        },\n        host: 'files.stripe.com',\n    }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/files/{file}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/files',\n        methodType: 'list',\n    }),\n    requestDataProcessor: multipartRequestDataProcessor,\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const InvoiceItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoiceitems' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoiceitems',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/invoiceitems/{invoiceitem}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Invoices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/invoices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/invoices/{invoice}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/invoices/{invoice}' }),\n    finalizeInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/finalize',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/{invoice}/lines',\n        methodType: 'list',\n    }),\n    listUpcomingLines: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/upcoming/lines',\n        methodType: 'list',\n    }),\n    markUncollectible: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/mark_uncollectible',\n    }),\n    pay: stripeMethod({ method: 'POST', fullPath: '/v1/invoices/{invoice}/pay' }),\n    retrieveUpcoming: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/upcoming',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/invoices/search',\n        methodType: 'search',\n    }),\n    sendInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/send',\n    }),\n    updateLineItem: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/lines/{line_item_id}',\n    }),\n    voidInvoice: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/invoices/{invoice}/void',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Mandates = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/mandates/{mandate}' }),\n});\n", "'use strict';\nimport { StripeResource } from '../StripeResource.js';\nimport { stringifyRequestData } from '../utils.js';\nconst stripeMethod = StripeResource.method;\nconst oAuthHost = 'connect.stripe.com';\nexport const OAuth = StripeResource.extend({\n    basePath: '/',\n    authorizeUrl(params, options) {\n        params = params || {};\n        options = options || {};\n        let path = 'oauth/authorize';\n        // For Express accounts, the path changes\n        if (options.express) {\n            path = `express/${path}`;\n        }\n        if (!params.response_type) {\n            params.response_type = 'code';\n        }\n        if (!params.client_id) {\n            params.client_id = this._stripe.getClientId();\n        }\n        if (!params.scope) {\n            params.scope = 'read_write';\n        }\n        return `https://${oAuthHost}/${path}?${stringifyRequestData(params)}`;\n    },\n    token: stripeMethod({\n        method: 'POST',\n        path: 'oauth/token',\n        host: oAuthHost,\n    }),\n    deauthorize(spec, ...args) {\n        if (!spec.client_id) {\n            spec.client_id = this._stripe.getClientId();\n        }\n        return stripeMethod({\n            method: 'POST',\n            path: 'oauth/deauthorize',\n            host: oAuthHost,\n        }).apply(this, [spec, ...args]);\n    },\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents',\n        methodType: 'list',\n    }),\n    applyCustomerBalance: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/apply_customer_balance',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/cancel',\n    }),\n    capture: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/capture',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/confirm',\n    }),\n    incrementAuthorization: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/increment_authorization',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_intents/search',\n        methodType: 'search',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentLinks = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_links' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_links/{payment_link}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_links/{payment_link}/line_items',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodConfigurations = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_configurations/{configuration}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_configurations',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethodDomains = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_method_domains',\n        methodType: 'list',\n    }),\n    validate: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_method_domains/{payment_method_domain}/validate',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PaymentMethods = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payment_methods' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payment_methods',\n        methodType: 'list',\n    }),\n    attach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/attach',\n    }),\n    detach: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payment_methods/{payment_method}/detach',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Payouts = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/payouts' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/payouts/{payout}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/payouts/{payout}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/payouts',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/cancel',\n    }),\n    reverse: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/payouts/{payout}/reverse',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Plans = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/plans' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/plans/{plan}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/plans/{plan}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/plans',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/plans/{plan}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Prices = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/prices' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/prices/{price}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/prices/{price}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices',\n        methodType: 'list',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/prices/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Products = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/products' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/products/{id}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/products/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/products/{id}' }),\n    createFeature: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/products/{product}/features',\n    }),\n    deleteFeature: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    listFeatures: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features',\n        methodType: 'list',\n    }),\n    retrieveFeature: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/{product}/features/{id}',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/products/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const PromotionCodes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/promotion_codes' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/promotion_codes/{promotion_code}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/promotion_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Quotes = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/quotes' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/quotes/{quote}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes',\n        methodType: 'list',\n    }),\n    accept: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/accept' }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/quotes/{quote}/cancel' }),\n    finalizeQuote: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/quotes/{quote}/finalize',\n    }),\n    listComputedUpfrontLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/computed_upfront_line_items',\n        methodType: 'list',\n    }),\n    listLineItems: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/line_items',\n        methodType: 'list',\n    }),\n    pdf: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/quotes/{quote}/pdf',\n        host: 'files.stripe.com',\n        streaming: true,\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Refunds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/refunds' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/refunds/{refund}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/refunds/{refund}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/refunds',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/refunds/{refund}/cancel',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Reviews = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/reviews/{review}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/reviews',\n        methodType: 'list',\n    }),\n    approve: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/reviews/{review}/approve',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupAttempts = StripeResource.extend({\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_attempts',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SetupIntents = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/setup_intents' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/setup_intents',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/cancel',\n    }),\n    confirm: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/confirm',\n    }),\n    verifyMicrodeposits: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/setup_intents/{intent}/verify_microdeposits',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const ShippingRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/shipping_rates' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/shipping_rates/{shipping_rate_token}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/shipping_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Sources = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/sources' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/sources/{source}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/sources/{source}' }),\n    listSourceTransactions: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/sources/{source}/source_transactions',\n        methodType: 'list',\n    }),\n    verify: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/sources/{source}/verify',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionItems = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscription_items' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscription_items/{item}',\n    }),\n    createUsageRecord: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_items/{subscription_item}/usage_records',\n    }),\n    listUsageRecordSummaries: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_items/{subscription_item}/usage_record_summaries',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const SubscriptionSchedules = StripeResource.extend({\n    create: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules',\n    }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscription_schedules',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/cancel',\n    }),\n    release: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscription_schedules/{schedule}/release',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Subscriptions = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/subscriptions' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}',\n    }),\n    deleteDiscount: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/subscriptions/{subscription_exposed_id}/discount',\n    }),\n    resume: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/subscriptions/{subscription}/resume',\n    }),\n    search: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/subscriptions/search',\n        methodType: 'search',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxCodes = StripeResource.extend({\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_codes/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_codes',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxIds = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_ids' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_ids/{id}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_ids',\n        methodType: 'list',\n    }),\n    del: stripeMethod({ method: 'DELETE', fullPath: '/v1/tax_ids/{id}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const TaxRates = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/tax_rates/{tax_rate}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/tax_rates',\n        methodType: 'list',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Tokens = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/tokens' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/tokens/{token}' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Topups = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/topups' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/topups/{topup}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/topups',\n        methodType: 'list',\n    }),\n    cancel: stripeMethod({ method: 'POST', fullPath: '/v1/topups/{topup}/cancel' }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const Transfers = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/transfers' }),\n    retrieve: stripeMethod({ method: 'GET', fullPath: '/v1/transfers/{transfer}' }),\n    update: stripeMethod({ method: 'POST', fullPath: '/v1/transfers/{transfer}' }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers',\n        methodType: 'list',\n    }),\n    createReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{id}/reversals',\n    }),\n    listReversals: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{id}/reversals',\n        methodType: 'list',\n    }),\n    retrieveReversal: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n    updateReversal: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/transfers/{transfer}/reversals/{id}',\n    }),\n});\n", "// File generated from our OpenAPI spec\nimport { StripeResource } from '../StripeResource.js';\nconst stripeMethod = StripeResource.method;\nexport const WebhookEndpoints = StripeResource.extend({\n    create: stripeMethod({ method: 'POST', fullPath: '/v1/webhook_endpoints' }),\n    retrieve: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    update: stripeMethod({\n        method: 'POST',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n    list: stripeMethod({\n        method: 'GET',\n        fullPath: '/v1/webhook_endpoints',\n        methodType: 'list',\n    }),\n    del: stripeMethod({\n        method: 'DELETE',\n        fullPath: '/v1/webhook_endpoints/{webhook_endpoint}',\n    }),\n});\n", "import { StripeAPIError, StripeAuthenticationError, StripeConnectionError, StripeError, StripePermissionError, StripeRateLimitError, } from './Error.js';\nimport { emitWarning, normalizeHeaders, removeNullish, stringifyRequestData, } from './utils.js';\nimport { HttpClient } from './net/HttpClient.js';\nconst MAX_RETRY_AFTER_WAIT = 60;\nexport class RequestSender {\n    constructor(stripe, maxBufferedRequestMetric) {\n        this._stripe = stripe;\n        this._maxBufferedRequestMetric = maxBufferedRequestMetric;\n    }\n    _addHeadersDirectlyToObject(obj, headers) {\n        // For convenience, make some headers easily accessible on\n        // lastResponse.\n        // NOTE: Stripe responds with lowercase header names/keys.\n        obj.requestId = headers['request-id'];\n        obj.stripeAccount = obj.stripeAccount || headers['stripe-account'];\n        obj.apiVersion = obj.apiVersion || headers['stripe-version'];\n        obj.idempotencyKey = obj.idempotencyKey || headers['idempotency-key'];\n    }\n    _makeResponseEvent(requestEvent, statusCode, headers) {\n        const requestEndTime = Date.now();\n        const requestDurationMs = requestEndTime - requestEvent.request_start_time;\n        return removeNullish({\n            api_version: headers['stripe-version'],\n            account: headers['stripe-account'],\n            idempotency_key: headers['idempotency-key'],\n            method: requestEvent.method,\n            path: requestEvent.path,\n            status: statusCode,\n            request_id: this._getRequestId(headers),\n            elapsed: requestDurationMs,\n            request_start_time: requestEvent.request_start_time,\n            request_end_time: requestEndTime,\n        });\n    }\n    _getRequestId(headers) {\n        return headers['request-id'];\n    }\n    /**\n     * Used by methods with spec.streaming === true. For these methods, we do not\n     * buffer successful responses into memory or do parse them into stripe\n     * objects, we delegate that all of that to the user and pass back the raw\n     * http.Response object to the callback.\n     *\n     * (Unsuccessful responses shouldn't make it here, they should\n     * still be buffered/parsed and handled by _jsonResponseHandler -- see\n     * makeRequest)\n     */\n    _streamingResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const streamCompleteCallback = () => {\n                const responseEvent = this._makeResponseEvent(requestEvent, res.getStatusCode(), headers);\n                this._stripe._emitter.emit('response', responseEvent);\n                this._recordRequestMetrics(this._getRequestId(headers), responseEvent.elapsed, usage);\n            };\n            const stream = res.toStream(streamCompleteCallback);\n            // This is here for backwards compatibility, as the stream is a raw\n            // HTTP response in Node and the legacy behavior was to mutate this\n            // response.\n            this._addHeadersDirectlyToObject(stream, headers);\n            return callback(null, stream);\n        };\n    }\n    /**\n     * Default handler for Stripe responses. Buffers the response into memory,\n     * parses the JSON and returns it (i.e. passes it to the callback) if there\n     * is no \"error\" field. Otherwise constructs/passes an appropriate Error.\n     */\n    _jsonResponseHandler(requestEvent, usage, callback) {\n        return (res) => {\n            const headers = res.getHeaders();\n            const requestId = this._getRequestId(headers);\n            const statusCode = res.getStatusCode();\n            const responseEvent = this._makeResponseEvent(requestEvent, statusCode, headers);\n            this._stripe._emitter.emit('response', responseEvent);\n            res\n                .toJSON()\n                .then((jsonResponse) => {\n                if (jsonResponse.error) {\n                    let err;\n                    // Convert OAuth error responses into a standard format\n                    // so that the rest of the error logic can be shared\n                    if (typeof jsonResponse.error === 'string') {\n                        jsonResponse.error = {\n                            type: jsonResponse.error,\n                            message: jsonResponse.error_description,\n                        };\n                    }\n                    jsonResponse.error.headers = headers;\n                    jsonResponse.error.statusCode = statusCode;\n                    jsonResponse.error.requestId = requestId;\n                    if (statusCode === 401) {\n                        err = new StripeAuthenticationError(jsonResponse.error);\n                    }\n                    else if (statusCode === 403) {\n                        err = new StripePermissionError(jsonResponse.error);\n                    }\n                    else if (statusCode === 429) {\n                        err = new StripeRateLimitError(jsonResponse.error);\n                    }\n                    else {\n                        err = StripeError.generate(jsonResponse.error);\n                    }\n                    throw err;\n                }\n                return jsonResponse;\n            }, (e) => {\n                throw new StripeAPIError({\n                    message: 'Invalid JSON received from the Stripe API',\n                    exception: e,\n                    requestId: headers['request-id'],\n                });\n            })\n                .then((jsonResponse) => {\n                this._recordRequestMetrics(requestId, responseEvent.elapsed, usage);\n                // Expose raw response object.\n                const rawResponse = res.getRawResponse();\n                this._addHeadersDirectlyToObject(rawResponse, headers);\n                Object.defineProperty(jsonResponse, 'lastResponse', {\n                    enumerable: false,\n                    writable: false,\n                    value: rawResponse,\n                });\n                callback(null, jsonResponse);\n            }, (e) => callback(e, null));\n        };\n    }\n    static _generateConnectionErrorMessage(requestRetries) {\n        return `An error occurred with our connection to Stripe.${requestRetries > 0 ? ` Request was retried ${requestRetries} times.` : ''}`;\n    }\n    // For more on when and how to retry API requests, see https://stripe.com/docs/error-handling#safely-retrying-requests-with-idempotency\n    static _shouldRetry(res, numRetries, maxRetries, error) {\n        if (error &&\n            numRetries === 0 &&\n            HttpClient.CONNECTION_CLOSED_ERROR_CODES.includes(error.code)) {\n            return true;\n        }\n        // Do not retry if we are out of retries.\n        if (numRetries >= maxRetries) {\n            return false;\n        }\n        // Retry on connection error.\n        if (!res) {\n            return true;\n        }\n        // The API may ask us not to retry (e.g., if doing so would be a no-op)\n        // or advise us to retry (e.g., in cases of lock timeouts); we defer to that.\n        if (res.getHeaders()['stripe-should-retry'] === 'false') {\n            return false;\n        }\n        if (res.getHeaders()['stripe-should-retry'] === 'true') {\n            return true;\n        }\n        // Retry on conflict errors.\n        if (res.getStatusCode() === 409) {\n            return true;\n        }\n        // Retry on 500, 503, and other internal errors.\n        //\n        // Note that we expect the stripe-should-retry header to be false\n        // in most cases when a 500 is returned, since our idempotency framework\n        // would typically replay it anyway.\n        if (res.getStatusCode() >= 500) {\n            return true;\n        }\n        return false;\n    }\n    _getSleepTimeInMS(numRetries, retryAfter = null) {\n        const initialNetworkRetryDelay = this._stripe.getInitialNetworkRetryDelay();\n        const maxNetworkRetryDelay = this._stripe.getMaxNetworkRetryDelay();\n        // Apply exponential backoff with initialNetworkRetryDelay on the\n        // number of numRetries so far as inputs. Do not allow the number to exceed\n        // maxNetworkRetryDelay.\n        let sleepSeconds = Math.min(initialNetworkRetryDelay * Math.pow(numRetries - 1, 2), maxNetworkRetryDelay);\n        // Apply some jitter by randomizing the value in the range of\n        // (sleepSeconds / 2) to (sleepSeconds).\n        sleepSeconds *= 0.5 * (1 + Math.random());\n        // But never sleep less than the base sleep seconds.\n        sleepSeconds = Math.max(initialNetworkRetryDelay, sleepSeconds);\n        // And never sleep less than the time the API asks us to wait, assuming it's a reasonable ask.\n        if (Number.isInteger(retryAfter) && retryAfter <= MAX_RETRY_AFTER_WAIT) {\n            sleepSeconds = Math.max(sleepSeconds, retryAfter);\n        }\n        return sleepSeconds * 1000;\n    }\n    // Max retries can be set on a per request basis. Favor those over the global setting\n    _getMaxNetworkRetries(settings = {}) {\n        return settings.maxNetworkRetries !== undefined &&\n            Number.isInteger(settings.maxNetworkRetries)\n            ? settings.maxNetworkRetries\n            : this._stripe.getMaxNetworkRetries();\n    }\n    _defaultIdempotencyKey(method, settings) {\n        // If this is a POST and we allow multiple retries, ensure an idempotency key.\n        const maxRetries = this._getMaxNetworkRetries(settings);\n        if (method === 'POST' && maxRetries > 0) {\n            return `stripe-node-retry-${this._stripe._platformFunctions.uuid4()}`;\n        }\n        return null;\n    }\n    _makeHeaders(auth, contentLength, apiVersion, clientUserAgent, method, userSuppliedHeaders, userSuppliedSettings) {\n        const defaultHeaders = {\n            // Use specified auth token or use default from this stripe instance:\n            Authorization: auth ? `Bearer ${auth}` : this._stripe.getApiField('auth'),\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'User-Agent': this._getUserAgentString(),\n            'X-Stripe-Client-User-Agent': clientUserAgent,\n            'X-Stripe-Client-Telemetry': this._getTelemetryHeader(),\n            'Stripe-Version': apiVersion,\n            'Stripe-Account': this._stripe.getApiField('stripeAccount'),\n            'Idempotency-Key': this._defaultIdempotencyKey(method, userSuppliedSettings),\n        };\n        // As per https://datatracker.ietf.org/doc/html/rfc7230#section-3.3.2:\n        //   A user agent SHOULD send a Content-Length in a request message when\n        //   no Transfer-Encoding is sent and the request method defines a meaning\n        //   for an enclosed payload body.  For example, a Content-Length header\n        //   field is normally sent in a POST request even when the value is 0\n        //   (indicating an empty payload body).  A user agent SHOULD NOT send a\n        //   Content-Length header field when the request message does not contain\n        //   a payload body and the method semantics do not anticipate such a\n        //   body.\n        //\n        // These method types are expected to have bodies and so we should always\n        // include a Content-Length.\n        const methodHasPayload = method == 'POST' || method == 'PUT' || method == 'PATCH';\n        // If a content length was specified, we always include it regardless of\n        // whether the method semantics anticipate such a body. This keeps us\n        // consistent with historical behavior. We do however want to warn on this\n        // and fix these cases as they are semantically incorrect.\n        if (methodHasPayload || contentLength) {\n            if (!methodHasPayload) {\n                emitWarning(`${method} method had non-zero contentLength but no payload is expected for this verb`);\n            }\n            defaultHeaders['Content-Length'] = contentLength;\n        }\n        return Object.assign(removeNullish(defaultHeaders), \n        // If the user supplied, say 'idempotency-key', override instead of appending by ensuring caps are the same.\n        normalizeHeaders(userSuppliedHeaders));\n    }\n    _getUserAgentString() {\n        const packageVersion = this._stripe.getConstant('PACKAGE_VERSION');\n        const appInfo = this._stripe._appInfo\n            ? this._stripe.getAppInfoAsString()\n            : '';\n        return `Stripe/v1 NodeBindings/${packageVersion} ${appInfo}`.trim();\n    }\n    _getTelemetryHeader() {\n        if (this._stripe.getTelemetryEnabled() &&\n            this._stripe._prevRequestMetrics.length > 0) {\n            const metrics = this._stripe._prevRequestMetrics.shift();\n            return JSON.stringify({\n                last_request_metrics: metrics,\n            });\n        }\n    }\n    _recordRequestMetrics(requestId, requestDurationMs, usage) {\n        if (this._stripe.getTelemetryEnabled() && requestId) {\n            if (this._stripe._prevRequestMetrics.length > this._maxBufferedRequestMetric) {\n                emitWarning('Request metrics buffer is full, dropping telemetry message.');\n            }\n            else {\n                const m = {\n                    request_id: requestId,\n                    request_duration_ms: requestDurationMs,\n                };\n                if (usage && usage.length > 0) {\n                    m.usage = usage;\n                }\n                this._stripe._prevRequestMetrics.push(m);\n            }\n        }\n    }\n    _request(method, host, path, data, auth, options = {}, usage = [], callback, requestDataProcessor = null) {\n        let requestData;\n        const retryRequest = (requestFn, apiVersion, headers, requestRetries, retryAfter) => {\n            return setTimeout(requestFn, this._getSleepTimeInMS(requestRetries, retryAfter), apiVersion, headers, requestRetries + 1);\n        };\n        const makeRequest = (apiVersion, headers, numRetries) => {\n            // timeout can be set on a per-request basis. Favor that over the global setting\n            const timeout = options.settings &&\n                options.settings.timeout &&\n                Number.isInteger(options.settings.timeout) &&\n                options.settings.timeout >= 0\n                ? options.settings.timeout\n                : this._stripe.getApiField('timeout');\n            const req = this._stripe\n                .getApiField('httpClient')\n                .makeRequest(host || this._stripe.getApiField('host'), this._stripe.getApiField('port'), path, method, headers, requestData, this._stripe.getApiField('protocol'), timeout);\n            const requestStartTime = Date.now();\n            // @ts-ignore\n            const requestEvent = removeNullish({\n                api_version: apiVersion,\n                account: headers['Stripe-Account'],\n                idempotency_key: headers['Idempotency-Key'],\n                method,\n                path,\n                request_start_time: requestStartTime,\n            });\n            const requestRetries = numRetries || 0;\n            const maxRetries = this._getMaxNetworkRetries(options.settings || {});\n            this._stripe._emitter.emit('request', requestEvent);\n            req\n                .then((res) => {\n                if (RequestSender._shouldRetry(res, requestRetries, maxRetries)) {\n                    return retryRequest(makeRequest, apiVersion, headers, requestRetries, \n                    // @ts-ignore\n                    res.getHeaders()['retry-after']);\n                }\n                else if (options.streaming && res.getStatusCode() < 400) {\n                    return this._streamingResponseHandler(requestEvent, usage, callback)(res);\n                }\n                else {\n                    return this._jsonResponseHandler(requestEvent, usage, callback)(res);\n                }\n            })\n                .catch((error) => {\n                if (RequestSender._shouldRetry(null, requestRetries, maxRetries, error)) {\n                    return retryRequest(makeRequest, apiVersion, headers, requestRetries, null);\n                }\n                else {\n                    const isTimeoutError = error.code && error.code === HttpClient.TIMEOUT_ERROR_CODE;\n                    return callback(new StripeConnectionError({\n                        message: isTimeoutError\n                            ? `Request aborted due to timeout being reached (${timeout}ms)`\n                            : RequestSender._generateConnectionErrorMessage(requestRetries),\n                        // @ts-ignore\n                        detail: error,\n                    }));\n                }\n            });\n        };\n        const prepareAndMakeRequest = (error, data) => {\n            if (error) {\n                return callback(error);\n            }\n            requestData = data;\n            this._stripe.getClientUserAgent((clientUserAgent) => {\n                var _a, _b;\n                const apiVersion = this._stripe.getApiField('version');\n                const headers = this._makeHeaders(auth, requestData.length, apiVersion, clientUserAgent, method, (_a = options.headers) !== null && _a !== void 0 ? _a : null, (_b = options.settings) !== null && _b !== void 0 ? _b : {});\n                makeRequest(apiVersion, headers, 0);\n            });\n        };\n        if (requestDataProcessor) {\n            requestDataProcessor(method, data, options.headers, prepareAndMakeRequest);\n        }\n        else {\n            prepareAndMakeRequest(null, stringifyRequestData(data || {}));\n        }\n    }\n}\n", "import { StripeError, StripeSignatureVerificationError } from './Error.js';\nimport { CryptoProviderOnlySupportsAsyncError, } from './crypto/CryptoProvider.js';\nexport function createWebhooks(platformFunctions) {\n    const Webhook = {\n        DEFAULT_TOLERANCE: 300,\n        // @ts-ignore\n        signature: null,\n        constructEvent(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            try {\n                this.signature.verifyHeader(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            }\n            catch (e) {\n                if (e instanceof CryptoProviderOnlySupportsAsyncError) {\n                    e.message +=\n                        '\\nUse `await constructEventAsync(...)` instead of `constructEvent(...)`';\n                }\n                throw e;\n            }\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        async constructEventAsync(payload, header, secret, tolerance, cryptoProvider, receivedAt) {\n            await this.signature.verifyHeaderAsync(payload, header, secret, tolerance || Webhook.DEFAULT_TOLERANCE, cryptoProvider, receivedAt);\n            const jsonPayload = payload instanceof Uint8Array\n                ? JSON.parse(new TextDecoder('utf8').decode(payload))\n                : JSON.parse(payload);\n            return jsonPayload;\n        },\n        /**\n         * Generates a header to be used for webhook mocking\n         *\n         * @typedef {object} opts\n         * @property {number} timestamp - Timestamp of the header. Defaults to Date.now()\n         * @property {string} payload - JSON stringified payload object, containing the 'id' and 'object' parameters\n         * @property {string} secret - Stripe webhook secret 'whsec_...'\n         * @property {string} scheme - Version of API to hit. Defaults to 'v1'.\n         * @property {string} signature - Computed webhook signature\n         * @property {CryptoProvider} cryptoProvider - Crypto provider to use for computing the signature if none was provided. Defaults to NodeCryptoProvider.\n         */\n        generateTestHeaderString: function (opts) {\n            if (!opts) {\n                throw new StripeError({\n                    message: 'Options are required',\n                });\n            }\n            opts.timestamp =\n                Math.floor(opts.timestamp) || Math.floor(Date.now() / 1000);\n            opts.scheme = opts.scheme || signature.EXPECTED_SCHEME;\n            opts.cryptoProvider = opts.cryptoProvider || getCryptoProvider();\n            opts.signature =\n                opts.signature ||\n                    opts.cryptoProvider.computeHMACSignature(opts.timestamp + '.' + opts.payload, opts.secret);\n            const generatedHeader = [\n                't=' + opts.timestamp,\n                opts.scheme + '=' + opts.signature,\n            ].join(',');\n            return generatedHeader;\n        },\n    };\n    const signature = {\n        EXPECTED_SCHEME: 'v1',\n        verifyHeader(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = cryptoProvider.computeHMACSignature(makeHMACContent(payload, details), secret);\n            validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n            return true;\n        },\n        async verifyHeaderAsync(encodedPayload, encodedHeader, secret, tolerance, cryptoProvider, receivedAt) {\n            const { decodedHeader: header, decodedPayload: payload, details, suspectPayloadType, } = parseEventDetails(encodedPayload, encodedHeader, this.EXPECTED_SCHEME);\n            const secretContainsWhitespace = /\\s/.test(secret);\n            cryptoProvider = cryptoProvider || getCryptoProvider();\n            const expectedSignature = await cryptoProvider.computeHMACSignatureAsync(makeHMACContent(payload, details), secret);\n            return validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt);\n        },\n    };\n    function makeHMACContent(payload, details) {\n        return `${details.timestamp}.${payload}`;\n    }\n    function parseEventDetails(encodedPayload, encodedHeader, expectedScheme) {\n        if (!encodedPayload) {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No webhook payload was provided.',\n            });\n        }\n        const suspectPayloadType = typeof encodedPayload != 'string' &&\n            !(encodedPayload instanceof Uint8Array);\n        const textDecoder = new TextDecoder('utf8');\n        const decodedPayload = encodedPayload instanceof Uint8Array\n            ? textDecoder.decode(encodedPayload)\n            : encodedPayload;\n        // Express's type for `Request#headers` is `string | []string`\n        // which is because the `set-cookie` header is an array,\n        // but no other headers are an array (docs: https://nodejs.org/api/http.html#http_message_headers)\n        // (Express's Request class is an extension of http.IncomingMessage, and doesn't appear to be relevantly modified: https://github.com/expressjs/express/blob/master/lib/request.js#L31)\n        if (Array.isArray(encodedHeader)) {\n            throw new Error('Unexpected: An array was passed as a header, which should not be possible for the stripe-signature header.');\n        }\n        if (encodedHeader == null || encodedHeader == '') {\n            throw new StripeSignatureVerificationError(encodedHeader, encodedPayload, {\n                message: 'No stripe-signature header value was provided.',\n            });\n        }\n        const decodedHeader = encodedHeader instanceof Uint8Array\n            ? textDecoder.decode(encodedHeader)\n            : encodedHeader;\n        const details = parseHeader(decodedHeader, expectedScheme);\n        if (!details || details.timestamp === -1) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'Unable to extract timestamp and signatures from header',\n            });\n        }\n        if (!details.signatures.length) {\n            throw new StripeSignatureVerificationError(decodedHeader, decodedPayload, {\n                message: 'No signatures found with expected scheme',\n            });\n        }\n        return {\n            decodedPayload,\n            decodedHeader,\n            details,\n            suspectPayloadType,\n        };\n    }\n    function validateComputedSignature(payload, header, details, expectedSignature, tolerance, suspectPayloadType, secretContainsWhitespace, receivedAt) {\n        const signatureFound = !!details.signatures.filter(platformFunctions.secureCompare.bind(platformFunctions, expectedSignature)).length;\n        const docsLocation = '\\nLearn more about webhook signing and explore webhook integration examples for various frameworks at ' +\n            'https://github.com/stripe/stripe-node#webhook-signing';\n        const whitespaceMessage = secretContainsWhitespace\n            ? '\\n\\nNote: The provided signing secret contains whitespace. This often indicates an extra newline or space is in the value'\n            : '';\n        if (!signatureFound) {\n            if (suspectPayloadType) {\n                throw new StripeSignatureVerificationError(header, payload, {\n                    message: 'Webhook payload must be provided as a string or a Buffer (https://nodejs.org/api/buffer.html) instance representing the _raw_ request body.' +\n                        'Payload was provided as a parsed JavaScript object instead. \\n' +\n                        'Signature verification is impossible without access to the original signed material. \\n' +\n                        docsLocation +\n                        '\\n' +\n                        whitespaceMessage,\n                });\n            }\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'No signatures found matching the expected signature for payload.' +\n                    ' Are you passing the raw request body you received from Stripe? \\n' +\n                    ' If a webhook request is being forwarded by a third-party tool,' +\n                    ' ensure that the exact request body, including JSON formatting and new line style, is preserved.\\n' +\n                    docsLocation +\n                    '\\n' +\n                    whitespaceMessage,\n            });\n        }\n        const timestampAge = Math.floor((typeof receivedAt === 'number' ? receivedAt : Date.now()) / 1000) - details.timestamp;\n        if (tolerance > 0 && timestampAge > tolerance) {\n            // @ts-ignore\n            throw new StripeSignatureVerificationError(header, payload, {\n                message: 'Timestamp outside the tolerance zone',\n            });\n        }\n        return true;\n    }\n    function parseHeader(header, scheme) {\n        if (typeof header !== 'string') {\n            return null;\n        }\n        return header.split(',').reduce((accum, item) => {\n            const kv = item.split('=');\n            if (kv[0] === 't') {\n                accum.timestamp = parseInt(kv[1], 10);\n            }\n            if (kv[0] === scheme) {\n                accum.signatures.push(kv[1]);\n            }\n            return accum;\n        }, {\n            timestamp: -1,\n            signatures: [],\n        });\n    }\n    let webhooksCryptoProviderInstance = null;\n    /**\n     * Lazily instantiate a CryptoProvider instance. This is a stateless object\n     * so a singleton can be used here.\n     */\n    function getCryptoProvider() {\n        if (!webhooksCryptoProviderInstance) {\n            webhooksCryptoProviderInstance = platformFunctions.createDefaultCryptoProvider();\n        }\n        return webhooksCryptoProviderInstance;\n    }\n    Webhook.signature = signature;\n    return Webhook;\n}\n", "import * as _Error from './Error.js';\nimport * as apiVersion from './apiVersion.js';\nimport * as resources from './resources.js';\nimport { HttpClient, HttpClientResponse } from './net/HttpClient.js';\nimport { determineProcessUserAgentProperties, pascalToCamelCase, validateInteger, } from './utils.js';\nimport { CryptoProvider } from './crypto/CryptoProvider.js';\nimport { RequestSender } from './RequestSender.js';\nimport { StripeResource } from './StripeResource.js';\nimport { createWebhooks } from './Webhooks.js';\nconst DEFAULT_HOST = 'api.stripe.com';\nconst DEFAULT_PORT = '443';\nconst DEFAULT_BASE_PATH = '/v1/';\nconst DEFAULT_API_VERSION = apiVersion.ApiVersion;\nconst DEFAULT_TIMEOUT = 80000;\nconst MAX_NETWORK_RETRY_DELAY_SEC = 2;\nconst INITIAL_NETWORK_RETRY_DELAY_SEC = 0.5;\nconst APP_INFO_PROPERTIES = ['name', 'version', 'url', 'partner_id'];\nconst ALLOWED_CONFIG_PROPERTIES = [\n    'apiVersion',\n    'typescript',\n    'maxNetworkRetries',\n    'httpAgent',\n    'httpClient',\n    'timeout',\n    'host',\n    'port',\n    'protocol',\n    'telemetry',\n    'appInfo',\n    'stripeAccount',\n];\nconst defaultRequestSenderFactory = (stripe) => new RequestSender(stripe, StripeResource.MAX_BUFFERED_REQUEST_METRICS);\nexport function createStripe(platformFunctions, requestSender = defaultRequestSenderFactory) {\n    Stripe.PACKAGE_VERSION = '14.25.0';\n    Stripe.USER_AGENT = Object.assign({ bindings_version: Stripe.PACKAGE_VERSION, lang: 'node', publisher: 'stripe', uname: null, typescript: false }, determineProcessUserAgentProperties());\n    Stripe.StripeResource = StripeResource;\n    Stripe.resources = resources;\n    Stripe.HttpClient = HttpClient;\n    Stripe.HttpClientResponse = HttpClientResponse;\n    Stripe.CryptoProvider = CryptoProvider;\n    // Previously Stripe.webhooks was just the createWebhooks() factory function\n    // however going forward it will be a WebhookObject instance. To maintain\n    // backwards compatibility it is currently a factory function that also\n    // complies to the WebhookObject signature. The factory function signature\n    // will be removed as a breaking change in the next major release.\n    // See https://github.com/stripe/stripe-node/issues/1956\n    function createWebhooksDefault(fns = platformFunctions) {\n        return createWebhooks(fns);\n    }\n    Stripe.webhooks = Object.assign(createWebhooksDefault, createWebhooks(platformFunctions));\n    function Stripe(key, config = {}) {\n        if (!(this instanceof Stripe)) {\n            return new Stripe(key, config);\n        }\n        const props = this._getPropsFromConfig(config);\n        this._platformFunctions = platformFunctions;\n        Object.defineProperty(this, '_emitter', {\n            value: this._platformFunctions.createEmitter(),\n            enumerable: false,\n            configurable: false,\n            writable: false,\n        });\n        this.VERSION = Stripe.PACKAGE_VERSION;\n        this.on = this._emitter.on.bind(this._emitter);\n        this.once = this._emitter.once.bind(this._emitter);\n        this.off = this._emitter.removeListener.bind(this._emitter);\n        const agent = props.httpAgent || null;\n        this._api = {\n            auth: null,\n            host: props.host || DEFAULT_HOST,\n            port: props.port || DEFAULT_PORT,\n            protocol: props.protocol || 'https',\n            basePath: DEFAULT_BASE_PATH,\n            version: props.apiVersion || DEFAULT_API_VERSION,\n            timeout: validateInteger('timeout', props.timeout, DEFAULT_TIMEOUT),\n            maxNetworkRetries: validateInteger('maxNetworkRetries', props.maxNetworkRetries, 1),\n            agent: agent,\n            httpClient: props.httpClient ||\n                (agent\n                    ? this._platformFunctions.createNodeHttpClient(agent)\n                    : this._platformFunctions.createDefaultHttpClient()),\n            dev: false,\n            stripeAccount: props.stripeAccount || null,\n        };\n        const typescript = props.typescript || false;\n        if (typescript !== Stripe.USER_AGENT.typescript) {\n            // The mutation here is uncomfortable, but likely fastest;\n            // serializing the user agent involves shelling out to the system,\n            // and given some users may instantiate the library many times without switching between TS and non-TS,\n            // we only want to incur the performance hit when that actually happens.\n            Stripe.USER_AGENT.typescript = typescript;\n        }\n        if (props.appInfo) {\n            this._setAppInfo(props.appInfo);\n        }\n        this._prepResources();\n        this._setApiKey(key);\n        this.errors = _Error;\n        // Once Stripe.webhooks looses the factory function signature in a future release\n        // then this should become this.webhooks = Stripe.webhooks\n        this.webhooks = createWebhooksDefault();\n        this._prevRequestMetrics = [];\n        this._enableTelemetry = props.telemetry !== false;\n        this._requestSender = requestSender(this);\n        // Expose StripeResource on the instance too\n        // @ts-ignore\n        this.StripeResource = Stripe.StripeResource;\n    }\n    Stripe.errors = _Error;\n    Stripe.createNodeHttpClient = platformFunctions.createNodeHttpClient;\n    /**\n     * Creates an HTTP client for issuing Stripe API requests which uses the Web\n     * Fetch API.\n     *\n     * A fetch function can optionally be passed in as a parameter. If none is\n     * passed, will default to the default `fetch` function in the global scope.\n     */\n    Stripe.createFetchHttpClient = platformFunctions.createFetchHttpClient;\n    /**\n     * Create a CryptoProvider which uses the built-in Node crypto libraries for\n     * its crypto operations.\n     */\n    Stripe.createNodeCryptoProvider = platformFunctions.createNodeCryptoProvider;\n    /**\n     * Creates a CryptoProvider which uses the Subtle Crypto API from the Web\n     * Crypto API spec for its crypto operations.\n     *\n     * A SubtleCrypto interface can optionally be passed in as a parameter. If none\n     * is passed, will default to the default `crypto.subtle` object in the global\n     * scope.\n     */\n    Stripe.createSubtleCryptoProvider =\n        platformFunctions.createSubtleCryptoProvider;\n    Stripe.prototype = {\n        // Properties are set in the constructor above\n        _appInfo: undefined,\n        on: null,\n        off: null,\n        once: null,\n        VERSION: null,\n        StripeResource: null,\n        webhooks: null,\n        errors: null,\n        _api: null,\n        _prevRequestMetrics: null,\n        _emitter: null,\n        _enableTelemetry: null,\n        _requestSender: null,\n        _platformFunctions: null,\n        /**\n         * @private\n         */\n        _setApiKey(key) {\n            if (key) {\n                this._setApiField('auth', `Bearer ${key}`);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setAppInfo(info) {\n            if (info && typeof info !== 'object') {\n                throw new Error('AppInfo must be an object.');\n            }\n            if (info && !info.name) {\n                throw new Error('AppInfo.name is required');\n            }\n            info = info || {};\n            this._appInfo = APP_INFO_PROPERTIES.reduce((accum, prop) => {\n                if (typeof info[prop] == 'string') {\n                    accum = accum || {};\n                    accum[prop] = info[prop];\n                }\n                return accum;\n            }, \n            // @ts-ignore\n            undefined);\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiField(key, value) {\n            this._api[key] = value;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getApiField(key) {\n            return this._api[key];\n        },\n        setClientId(clientId) {\n            this._clientId = clientId;\n        },\n        getClientId() {\n            return this._clientId;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getConstant: (c) => {\n            switch (c) {\n                case 'DEFAULT_HOST':\n                    return DEFAULT_HOST;\n                case 'DEFAULT_PORT':\n                    return DEFAULT_PORT;\n                case 'DEFAULT_BASE_PATH':\n                    return DEFAULT_BASE_PATH;\n                case 'DEFAULT_API_VERSION':\n                    return DEFAULT_API_VERSION;\n                case 'DEFAULT_TIMEOUT':\n                    return DEFAULT_TIMEOUT;\n                case 'MAX_NETWORK_RETRY_DELAY_SEC':\n                    return MAX_NETWORK_RETRY_DELAY_SEC;\n                case 'INITIAL_NETWORK_RETRY_DELAY_SEC':\n                    return INITIAL_NETWORK_RETRY_DELAY_SEC;\n            }\n            return Stripe[c];\n        },\n        getMaxNetworkRetries() {\n            return this.getApiField('maxNetworkRetries');\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _setApiNumberField(prop, n, defaultVal) {\n            const val = validateInteger(prop, n, defaultVal);\n            this._setApiField(prop, val);\n        },\n        getMaxNetworkRetryDelay() {\n            return MAX_NETWORK_RETRY_DELAY_SEC;\n        },\n        getInitialNetworkRetryDelay() {\n            return INITIAL_NETWORK_RETRY_DELAY_SEC;\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent and uses a cached version for a slight\n         * speed advantage.\n         */\n        getClientUserAgent(cb) {\n            return this.getClientUserAgentSeeded(Stripe.USER_AGENT, cb);\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         *\n         * Gets a JSON version of a User-Agent by encoding a seeded object and\n         * fetching a uname from the system.\n         */\n        getClientUserAgentSeeded(seed, cb) {\n            this._platformFunctions.getUname().then((uname) => {\n                var _a;\n                const userAgent = {};\n                for (const field in seed) {\n                    userAgent[field] = encodeURIComponent((_a = seed[field]) !== null && _a !== void 0 ? _a : 'null');\n                }\n                // URI-encode in case there are unusual characters in the system's uname.\n                userAgent.uname = encodeURIComponent(uname || 'UNKNOWN');\n                const client = this.getApiField('httpClient');\n                if (client) {\n                    userAgent.httplib = encodeURIComponent(client.getClientName());\n                }\n                if (this._appInfo) {\n                    userAgent.application = this._appInfo;\n                }\n                cb(JSON.stringify(userAgent));\n            });\n        },\n        /**\n         * @private\n         * Please open or upvote an issue at github.com/stripe/stripe-node\n         * if you use this, detailing your use-case.\n         *\n         * It may be deprecated and removed in the future.\n         */\n        getAppInfoAsString() {\n            if (!this._appInfo) {\n                return '';\n            }\n            let formatted = this._appInfo.name;\n            if (this._appInfo.version) {\n                formatted += `/${this._appInfo.version}`;\n            }\n            if (this._appInfo.url) {\n                formatted += ` (${this._appInfo.url})`;\n            }\n            return formatted;\n        },\n        getTelemetryEnabled() {\n            return this._enableTelemetry;\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _prepResources() {\n            for (const name in resources) {\n                // @ts-ignore\n                this[pascalToCamelCase(name)] = new resources[name](this);\n            }\n        },\n        /**\n         * @private\n         * This may be removed in the future.\n         */\n        _getPropsFromConfig(config) {\n            // If config is null or undefined, just bail early with no props\n            if (!config) {\n                return {};\n            }\n            // config can be an object or a string\n            const isString = typeof config === 'string';\n            const isObject = config === Object(config) && !Array.isArray(config);\n            if (!isObject && !isString) {\n                throw new Error('Config must either be an object or a string');\n            }\n            // If config is a string, we assume the old behavior of passing in a string representation of the api version\n            if (isString) {\n                return {\n                    apiVersion: config,\n                };\n            }\n            // If config is an object, we assume the new behavior and make sure it doesn't contain any unexpected values\n            const values = Object.keys(config).filter((value) => !ALLOWED_CONFIG_PROPERTIES.includes(value));\n            if (values.length > 0) {\n                throw new Error(`Config object may only contain the following: ${ALLOWED_CONFIG_PROPERTIES.join(', ')}`);\n            }\n            return config;\n        },\n    };\n    return Stripe;\n}\n", "import { WebPlatformFunctions } from './platform/WebPlatformFunctions.js';\nimport { createStripe } from './stripe.core.js';\nexport const Stripe = createStripe(new WebPlatformFunctions());\nexport default Stripe;\n", "import { Hono } from 'hono';\r\nimport Stripe from 'stripe';\r\nimport { Environment, Transaction, APIResponse } from '../types';\r\nimport { generateId } from '../utils/crypto';\r\n\r\nconst stripeHandler = new Hono<{ Bindings: Environment }>();\r\n\r\n// Create payment intent for account creation or asset creation\r\nstripeHandler.post('/create-payment-intent', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const { userId, type, email } = await c.req.json();\r\n\r\n    if (!type || !email) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Payment type and email are required' \r\n      }, 400);\r\n    }\r\n\r\n    if (!['account_creation', 'asset_creation'].includes(type)) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Invalid payment type' \r\n      }, 400);\r\n    }\r\n\r\n    const stripe = new Stripe(env.STRIPE_SECRET_KEY, {\r\n      apiVersion: '2023-10-16',\r\n    });\r\n\r\n    // Create payment intent for $25\r\n    const paymentIntent = await stripe.paymentIntents.create({\r\n      amount: 2500, // $25.00 in cents\r\n      currency: 'usd',\r\n      metadata: {\r\n        type,\r\n        userId: userId || '',\r\n        email,\r\n      },\r\n      description: type === 'account_creation' \r\n        ? 'Veritas Documents - Account Creation' \r\n        : 'Veritas Documents - Asset Creation',\r\n    });\r\n\r\n    // Create transaction record\r\n    const transactionId = generateId();\r\n    const transaction: Transaction = {\r\n      id: transactionId,\r\n      userId: userId || '',\r\n      type: type as 'account_creation' | 'asset_creation',\r\n      amount: 25.00,\r\n      stripePaymentIntentId: paymentIntent.id,\r\n      status: 'pending',\r\n      createdAt: Date.now(),\r\n    };\r\n\r\n    await env.VERITAS_KV.put(`transaction:${transactionId}`, JSON.stringify(transaction));\r\n    await env.VERITAS_KV.put(`stripe:${paymentIntent.id}`, transactionId);\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: {\r\n        clientSecret: paymentIntent.client_secret,\r\n        transactionId,\r\n      },\r\n      message: 'Payment intent created successfully',\r\n    });\r\n  } catch (error) {\r\n    console.error('Error creating payment intent:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Handle Stripe webhooks\r\nstripeHandler.post('/webhook', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const signature = c.req.header('stripe-signature');\r\n    const body = await c.req.text();\r\n\r\n    if (!signature) {\r\n      return c.json<APIResponse>({ success: false, error: 'Missing signature' }, 400);\r\n    }\r\n\r\n    const stripe = new Stripe(env.STRIPE_SECRET_KEY, {\r\n      apiVersion: '2023-10-16',\r\n    });\r\n\r\n    let event;\r\n    try {\r\n      event = stripe.webhooks.constructEvent(body, signature, env.STRIPE_WEBHOOK_SECRET);\r\n    } catch (err) {\r\n      console.error('Webhook signature verification failed:', err);\r\n      return c.json<APIResponse>({ success: false, error: 'Invalid signature' }, 400);\r\n    }\r\n\r\n    // Handle payment intent succeeded\r\n    if (event.type === 'payment_intent.succeeded') {\r\n      const paymentIntent = event.data.object as Stripe.PaymentIntent;\r\n      \r\n      // Get transaction ID\r\n      const transactionId = await env.VERITAS_KV.get(`stripe:${paymentIntent.id}`);\r\n      if (!transactionId) {\r\n        console.error('Transaction not found for payment intent:', paymentIntent.id);\r\n        return c.json<APIResponse>({ success: false, error: 'Transaction not found' }, 404);\r\n      }\r\n\r\n      // Update transaction status\r\n      const transactionData = await env.VERITAS_KV.get(`transaction:${transactionId}`);\r\n      if (transactionData) {\r\n        const transaction: Transaction = JSON.parse(transactionData);\r\n        transaction.status = 'completed';\r\n        await env.VERITAS_KV.put(`transaction:${transactionId}`, JSON.stringify(transaction));\r\n\r\n        // If this was for account creation, you might want to trigger additional logic here\r\n        if (transaction.type === 'account_creation') {\r\n          // Could trigger email notification or other account setup logic\r\n          console.log('Account creation payment completed for:', paymentIntent.metadata?.email);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Handle payment intent failed\r\n    if (event.type === 'payment_intent.payment_failed') {\r\n      const paymentIntent = event.data.object as Stripe.PaymentIntent;\r\n      \r\n      const transactionId = await env.VERITAS_KV.get(`stripe:${paymentIntent.id}`);\r\n      if (transactionId) {\r\n        const transactionData = await env.VERITAS_KV.get(`transaction:${transactionId}`);\r\n        if (transactionData) {\r\n          const transaction: Transaction = JSON.parse(transactionData);\r\n          transaction.status = 'failed';\r\n          await env.VERITAS_KV.put(`transaction:${transactionId}`, JSON.stringify(transaction));\r\n        }\r\n      }\r\n    }\r\n\r\n    return c.json<APIResponse>({ success: true, message: 'Webhook processed' });\r\n  } catch (error) {\r\n    console.error('Error processing webhook:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Get transaction status\r\nstripeHandler.get('/transaction/:transactionId', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const transactionId = c.req.param('transactionId');\r\n\r\n    const transactionData = await env.VERITAS_KV.get(`transaction:${transactionId}`);\r\n    if (!transactionData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Transaction not found' }, 404);\r\n    }\r\n\r\n    const transaction: Transaction = JSON.parse(transactionData);\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: transaction,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting transaction:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\nexport { stripeHandler };", "import { Hono } from 'hono';\r\nimport { Environment, Asset, SearchResult, APIResponse } from '../types';\r\n\r\nconst searchHandler = new Hono<{ Bindings: Environment }>();\r\n\r\n// Search assets by various criteria\r\nsearchHandler.get('/', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const query = c.req.query('q') || '';\r\n    const documentType = c.req.query('type');\r\n    const page = parseInt(c.req.query('page') || '1');\r\n    const limit = parseInt(c.req.query('limit') || '20');\r\n\r\n    // For simplicity, we'll do a basic search through KV store\r\n    // In production, you'd want to use a proper search index\r\n    const assets: Asset[] = [];\r\n    \r\n    // Get all asset keys (this is not efficient for large datasets)\r\n    const list = await env.VERITAS_KV.list({ prefix: 'asset:' });\r\n    \r\n    for (const key of list.keys) {\r\n      const assetData = await env.VERITAS_KV.get(key.name);\r\n      if (assetData) {\r\n        const asset: Asset = JSON.parse(assetData);\r\n        \r\n        // Only include publicly searchable assets\r\n        if (!asset.isPubliclySearchable) {\r\n          continue;\r\n        }\r\n\r\n        // Apply filters\r\n        let matches = true;\r\n\r\n        if (query) {\r\n          const searchLower = query.toLowerCase();\r\n          matches = matches && (\r\n            asset.title.toLowerCase().includes(searchLower) ||\r\n            asset.description.toLowerCase().includes(searchLower) ||\r\n            asset.tokenId.toLowerCase().includes(searchLower)\r\n          );\r\n        }\r\n\r\n        if (documentType && documentType !== 'all') {\r\n          matches = matches && asset.documentType === documentType;\r\n        }\r\n\r\n        if (matches) {\r\n          // Return public data only\r\n          assets.push({\r\n            id: asset.id,\r\n            tokenId: asset.tokenId,\r\n            ownerId: asset.ownerId,\r\n            creatorId: asset.creatorId,\r\n            title: asset.title,\r\n            description: asset.description,\r\n            documentType: asset.documentType,\r\n            createdAt: asset.createdAt,\r\n            updatedAt: asset.updatedAt,\r\n            isPubliclySearchable: asset.isPubliclySearchable,\r\n            publicMetadata: asset.publicMetadata,\r\n          } as Asset);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Sort by creation date (newest first)\r\n    assets.sort((a, b) => b.createdAt - a.createdAt);\r\n\r\n    // Paginate results\r\n    const startIndex = (page - 1) * limit;\r\n    const endIndex = startIndex + limit;\r\n    const paginatedAssets = assets.slice(startIndex, endIndex);\r\n\r\n    const searchResult: SearchResult = {\r\n      assets: paginatedAssets,\r\n      total: assets.length,\r\n      page,\r\n      limit,\r\n    };\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: searchResult,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error searching assets:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Get asset provenance/ownership history\r\nsearchHandler.get('/provenance/:assetId', async (c) => {\r\n  try {\r\n    const env = c.env;\r\n    const assetId = c.req.param('assetId');\r\n\r\n    // Verify asset exists and is publicly searchable\r\n    const assetData = await env.VERITAS_KV.get(`asset:${assetId}`);\r\n    if (!assetData) {\r\n      return c.json<APIResponse>({ success: false, error: 'Asset not found' }, 404);\r\n    }\r\n\r\n    const asset: Asset = JSON.parse(assetData);\r\n    if (!asset.isPubliclySearchable) {\r\n      return c.json<APIResponse>({ \r\n        success: false, \r\n        error: 'Asset provenance is not publicly available' \r\n      }, 403);\r\n    }\r\n\r\n    // In a real implementation, you'd query the blockchain for all transactions\r\n    // related to this asset. For now, we'll return basic ownership information\r\n    const provenance = [\r\n      {\r\n        event: 'created',\r\n        timestamp: asset.createdAt,\r\n        userId: asset.creatorId,\r\n        details: {\r\n          title: asset.title,\r\n          documentType: asset.documentType,\r\n        },\r\n      },\r\n    ];\r\n\r\n    // If the current owner is different from creator, add transfer event\r\n    if (asset.ownerId !== asset.creatorId) {\r\n      provenance.push({\r\n        event: 'transferred',\r\n        timestamp: asset.updatedAt,\r\n        userId: asset.ownerId,\r\n        details: {\r\n          from: asset.creatorId,\r\n          to: asset.ownerId,\r\n        } as any,\r\n      });\r\n    }\r\n\r\n    return c.json<APIResponse>({\r\n      success: true,\r\n      data: {\r\n        assetId,\r\n        tokenId: asset.tokenId,\r\n        provenance,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error getting asset provenance:', error);\r\n    return c.json<APIResponse>({ success: false, error: 'Internal server error' }, 500);\r\n  }\r\n});\r\n\r\n// Get document types for filtering\r\nsearchHandler.get('/document-types', async (c) => {\r\n  const documentTypes = [\r\n    { value: 'will', label: 'Will' },\r\n    { value: 'deed', label: 'Property Deed' },\r\n    { value: 'certificate', label: 'Certificate' },\r\n    { value: 'contract', label: 'Contract' },\r\n    { value: 'other', label: 'Other' },\r\n  ];\r\n\r\n  return c.json<APIResponse>({\r\n    success: true,\r\n    data: documentTypes,\r\n  });\r\n});\r\n\r\nexport { searchHandler };", "import { Hono } from 'hono';\r\n\r\n// Import markdown files as raw strings\r\n// @ts-ignore - These will be bundled by esbuild text loader\r\nimport README from '../../README.md';\r\nimport BLOCKCHAIN_ARCHITECTURE from '../../BLOCKCHAIN_ARCHITECTURE.md';\r\nimport BLOCKCHAIN_USER_SYSTEM from '../../BLOCKCHAIN_USER_SYSTEM.md';\r\nimport ZERO_KNOWLEDGE_ARCHITECTURE from '../../ZERO_KNOWLEDGE_ARCHITECTURE.md';\r\nimport VDC_INTEGRATION_GUIDE from '../../VDC_INTEGRATION_GUIDE.md';\r\nimport DEVELOPMENT_PLAN from '../../DEVELOPMENT_PLAN.md';\r\nimport TECHNICAL_STATUS from '../../TECHNICAL_STATUS.md';\r\nimport SECURITY_GUARDRAILS from '../../SECURITY_GUARDRAILS.md';\r\n\r\nconst app = new Hono();\r\n\r\n// Documentation content map\r\nconst DOC_CONTENT: Record<string, string> = {\r\n  'README': README,\r\n  'BLOCKCHAIN_ARCHITECTURE': BLOCKCHAIN_ARCHITECTURE,\r\n  'BLOCKCHAIN_USER_SYSTEM': BLOCKCHAIN_USER_SYSTEM,\r\n  'ZERO_KNOWLEDGE_ARCHITECTURE': ZERO_KNOWLEDGE_ARCHITECTURE,\r\n  'VDC_INTEGRATION_GUIDE': VDC_INTEGRATION_GUIDE,\r\n  'DEVELOPMENT_PLAN': DEVELOPMENT_PLAN,\r\n  'TECHNICAL_STATUS': TECHNICAL_STATUS,\r\n  'SECURITY_GUARDRAILS': SECURITY_GUARDRAILS,\r\n};\r\n\r\n// Simple markdown to HTML converter\r\nfunction markdownToHtml(markdown: string): string {\r\n  let html = markdown;\r\n\r\n  // Code blocks (must be before inline code)\r\n  html = html.replace(/```(\\w*)\\n([\\s\\S]*?)```/g, '<pre><code>$2</code></pre>');\r\n\r\n  // Inline code\r\n  html = html.replace(/`([^`]+)`/g, '<code>$1</code>');\r\n\r\n  // Headers (must be before bold/italic)\r\n  html = html.replace(/^#### (.*$)/gim, '<h4>$1</h4>');\r\n  html = html.replace(/^### (.*$)/gim, '<h3>$1</h3>');\r\n  html = html.replace(/^## (.*$)/gim, '<h2>$1</h2>');\r\n  html = html.replace(/^# (.*$)/gim, '<h1>$1</h1>');\r\n\r\n  // Bold\r\n  html = html.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\r\n  html = html.replace(/__(.*?)__/g, '<strong>$1</strong>');\r\n\r\n  // Italic\r\n  html = html.replace(/\\*(.*?)\\*/g, '<em>$1</em>');\r\n  html = html.replace(/_(.*?)_/g, '<em>$1</em>');\r\n\r\n  // Links\r\n  html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\">$1</a>');\r\n\r\n  // Unordered lists\r\n  const ulPattern = /(?:^[\\*\\-] .*$\\n?)+/gim;\r\n  html = html.replace(ulPattern, (match) => {\r\n    const items = match.split('\\n').filter(line => line.trim());\r\n    const listItems = items.map(item => item.replace(/^[\\*\\-] /, '<li>') + '</li>').join('');\r\n    return '<ul>' + listItems + '</ul>';\r\n  });\r\n\r\n  // Ordered lists\r\n  const olPattern = /(?:^\\d+\\. .*$\\n?)+/gim;\r\n  html = html.replace(olPattern, (match) => {\r\n    const items = match.split('\\n').filter(line => line.trim());\r\n    const listItems = items.map(item => item.replace(/^\\d+\\. /, '<li>') + '</li>').join('');\r\n    return '<ol>' + listItems + '</ol>';\r\n  });\r\n\r\n  // Blockquotes\r\n  html = html.replace(/^> (.*$)/gim, '<blockquote>$1</blockquote>');\r\n\r\n  // Horizontal rules\r\n  html = html.replace(/^---$/gim, '<hr>');\r\n  html = html.replace(/^\\*\\*\\*$/gim, '<hr>');\r\n\r\n  // Tables (basic support)\r\n  const tablePattern = /(?:^\\|.+\\|$\\n)+/gim;\r\n  html = html.replace(tablePattern, (match) => {\r\n    const rows = match.split('\\n').filter(line => line.trim() && !line.match(/^\\|[\\s\\-:]+\\|$/));\r\n    if (rows.length === 0) return match;\r\n    \r\n    const headerRow = rows[0].split('|').filter(cell => cell.trim()).map(cell => `<th>${cell.trim()}</th>`).join('');\r\n    const bodyRows = rows.slice(1).map(row => {\r\n      const cells = row.split('|').filter(cell => cell.trim()).map(cell => `<td>${cell.trim()}</td>`).join('');\r\n      return `<tr>${cells}</tr>`;\r\n    }).join('');\r\n    \r\n    return `<table><thead><tr>${headerRow}</tr></thead><tbody>${bodyRows}</tbody></table>`;\r\n  });\r\n\r\n  // Paragraphs (apply to remaining text)\r\n  const lines = html.split('\\n');\r\n  const processed: string[] = [];\r\n  let inParagraph = false;\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const line = lines[i];\r\n    const trimmed = line.trim();\r\n\r\n    // Skip empty lines\r\n    if (!trimmed) {\r\n      if (inParagraph) {\r\n        processed.push('</p>');\r\n        inParagraph = false;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    // Don't wrap block elements in paragraphs\r\n    if (trimmed.match(/^<(h[1-6]|ul|ol|pre|blockquote|table|hr)/)) {\r\n      if (inParagraph) {\r\n        processed.push('</p>');\r\n        inParagraph = false;\r\n      }\r\n      processed.push(line);\r\n    } else if (trimmed.match(/^<\\/(h[1-6]|ul|ol|pre|blockquote|table)>/)) {\r\n      processed.push(line);\r\n    } else {\r\n      // Regular text - wrap in paragraph\r\n      if (!inParagraph) {\r\n        processed.push('<p>');\r\n        inParagraph = true;\r\n      }\r\n      processed.push(line);\r\n    }\r\n  }\r\n\r\n  if (inParagraph) {\r\n    processed.push('</p>');\r\n  }\r\n\r\n  return processed.join('\\n');\r\n}\r\n\r\n// Whitelist of allowed documentation files\r\nconst ALLOWED_DOCS = [\r\n  'README',\r\n  'BLOCKCHAIN_ARCHITECTURE',\r\n  'BLOCKCHAIN_USER_SYSTEM',\r\n  'ZERO_KNOWLEDGE_ARCHITECTURE',\r\n  'VDC_INTEGRATION_GUIDE',\r\n  'DEVELOPMENT_PLAN',\r\n  'TECHNICAL_STATUS',\r\n  'SECURITY_GUARDRAILS',\r\n];\r\n\r\n// Documentation content cache (loaded at build time)\r\nconst docCache: Record<string, string> = {};\r\n\r\n// Note: In Cloudflare Workers, we can't use fs.readFileSync\r\n// Files need to be bundled with esbuild text loader, stored in KV, or R2\r\n// For now, we'll show a helpful message directing users to the repository\r\n\r\n// Get documentation file\r\napp.get('/:docName', async (c) => {\r\n  try {\r\n    const docName = c.req.param('docName');\r\n\r\n    // Security check - only allow whitelisted docs\r\n    if (!ALLOWED_DOCS.includes(docName)) {\r\n      return c.json({\r\n        success: false,\r\n        error: 'Documentation not found',\r\n      }, 404);\r\n    }\r\n\r\n    // Get markdown content from imported files\r\n    let markdown = DOC_CONTENT[docName];\r\n\r\n    if (!markdown || markdown === '' || typeof markdown !== 'string') {\r\n      // Fallback message if file couldn't be loaded\r\n      markdown = `# ${docName.replace(/_/g, ' ')}\r\n\r\n## Documentation Loading\r\n\r\nThe markdown files are being bundled with the worker. If you see this message, the esbuild text loader may need configuration.\r\n\r\n### Current Status\r\n\r\n- **File**: \\`${docName}.md\\`\r\n- **Import Type**: ${typeof markdown}\r\n- **Content Available**: ${!!markdown}\r\n\r\n### Available Documentation\r\n\r\n${ALLOWED_DOCS.map(doc => `- **${doc.replace(/_/g, ' ')}**`).join('\\n')}\r\n\r\n### To View Documentation\r\n\r\nPlease refer to the [\\`${docName}.md\\`](https://github.com/Rob142857/VeritasDocs/blob/main/${docName}.md) file in the GitHub repository.\r\n`;\r\n    }\r\n\r\n    const html = markdownToHtml(markdown);\r\n\r\n    return c.json({\r\n      success: true,\r\n      data: {\r\n        name: docName,\r\n        html,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error('Error loading documentation:', error);\r\n    return c.json({\r\n      success: false,\r\n      error: 'Failed to load documentation',\r\n    }, 500);\r\n  }\r\n});\r\n\r\nexport default app;\r\n", "import { Hono } from 'hono';\r\nimport { cors } from 'hono/cors';\r\n\r\nimport { Environment } from './types';\r\nimport { authHandler } from './handlers/auth';\r\nimport { assetHandler } from './handlers/assets';\r\nimport { enhancedAssetHandler } from './handlers/web3-assets';\r\nimport { userHandler } from './handlers/users';\r\nimport { stripeHandler } from './handlers/stripe';\r\nimport { searchHandler } from './handlers/search';\r\n\r\ntype Bindings = Environment;\r\n\r\nconst app = new Hono<{ Bindings: Bindings }>();\r\n\r\n// CORS middleware\r\napp.use('*', cors({\r\n  origin: ['https://veritas-documents.workers.dev', 'http://localhost:8787'],\r\n  allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n  allowHeaders: ['Content-Type', 'Authorization'],\r\n}));\r\n\r\n// Serve static files\r\napp.get('/static/styles.css', async (c) => {\r\n  const css = `/* Veritas Documents - Clean, minimalist styles */\r\n\r\n:root {\r\n  --primary-color: #2563eb;\r\n  --primary-hover: #1d4ed8;\r\n  --secondary-color: #64748b;\r\n  --success-color: #059669;\r\n  --error-color: #dc2626;\r\n  --warning-color: #d97706;\r\n  --background: #ffffff;\r\n  --surface: #f8fafc;\r\n  --border: #e2e8f0;\r\n  --text-primary: #0f172a;\r\n  --text-secondary: #64748b;\r\n  --text-muted: #94a3b8;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;\r\n  background-color: var(--background);\r\n  color: var(--text-primary);\r\n  line-height: 1.6;\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 0 1rem;\r\n}\r\n\r\n/* Header */\r\n.header {\r\n  background-color: var(--background);\r\n  border-bottom: 1px solid var(--border);\r\n  padding: 1rem 0;\r\n}\r\n\r\n.header .container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.logo {\r\n  font-size: 1.5rem;\r\n  font-weight: 600;\r\n  color: var(--primary-color);\r\n}\r\n\r\n.nav {\r\n  display: flex;\r\n  gap: 2rem;\r\n}\r\n\r\n.nav a {\r\n  color: var(--text-secondary);\r\n  text-decoration: none;\r\n  font-weight: 500;\r\n  transition: color 0.2s;\r\n}\r\n\r\n.nav a:hover,\r\n.nav a.active {\r\n  color: var(--primary-color);\r\n}\r\n\r\n/* Main content */\r\n.main {\r\n  min-height: calc(100vh - 80px);\r\n  padding: 2rem 0;\r\n}\r\n\r\n/* Cards */\r\n.card {\r\n  background-color: var(--background);\r\n  border: 1px solid var(--border);\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.card-header {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.card-title {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.card-subtitle {\r\n  color: var(--text-secondary);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n/* Forms */\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  color: var(--text-primary);\r\n}\r\n\r\n.input,\r\n.textarea,\r\n.select {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid var(--border);\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  transition: border-color 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.input:focus,\r\n.textarea:focus,\r\n.select:focus {\r\n  outline: none;\r\n  border-color: var(--primary-color);\r\n  box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);\r\n}\r\n\r\n.textarea {\r\n  resize: vertical;\r\n  min-height: 100px;\r\n}\r\n\r\n/* Buttons */\r\n.btn {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 6px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  transition: all 0.2s;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.btn-primary:hover {\r\n  background-color: var(--primary-hover);\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: var(--surface);\r\n  color: var(--text-primary);\r\n  border: 1px solid var(--border);\r\n}\r\n\r\n.btn-secondary:hover {\r\n  background-color: var(--border);\r\n}\r\n\r\n.btn-success {\r\n  background-color: var(--success-color);\r\n  color: white;\r\n}\r\n\r\n.btn-danger {\r\n  background-color: var(--error-color);\r\n  color: white;\r\n}\r\n\r\n.btn:disabled {\r\n  opacity: 0.5;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Alerts */\r\n.alert {\r\n  padding: 1rem;\r\n  border-radius: 6px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.alert-success {\r\n  background-color: #f0fdf4;\r\n  color: var(--success-color);\r\n  border: 1px solid #bbf7d0;\r\n}\r\n\r\n.alert-error {\r\n  background-color: #fef2f2;\r\n  color: var(--error-color);\r\n  border: 1px solid #fecaca;\r\n}\r\n\r\n.alert-warning {\r\n  background-color: #fffbeb;\r\n  color: var(--warning-color);\r\n  border: 1px solid #fed7aa;\r\n}\r\n\r\n/* Grid */\r\n.grid {\r\n  display: grid;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.grid-2 {\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n}\r\n\r\n.grid-3 {\r\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n}\r\n\r\n/* Asset cards */\r\n.asset-card {\r\n  background-color: var(--background);\r\n  border: 1px solid var(--border);\r\n  border-radius: 8px;\r\n  padding: 1.5rem;\r\n  transition: box-shadow 0.2s;\r\n}\r\n\r\n.asset-card:hover {\r\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.asset-type {\r\n  display: inline-block;\r\n  padding: 0.25rem 0.75rem;\r\n  background-color: var(--surface);\r\n  border-radius: 4px;\r\n  font-size: 0.75rem;\r\n  font-weight: 500;\r\n  text-transform: uppercase;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.asset-title {\r\n  font-size: 1.125rem;\r\n  font-weight: 600;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.asset-description {\r\n  color: var(--text-secondary);\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.asset-meta {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  font-size: 0.875rem;\r\n  color: var(--text-muted);\r\n}\r\n\r\n/* Dashboard */\r\n.dashboard-stats {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n  margin-bottom: 2rem;\r\n}\r\n\r\n.stat-card {\r\n  background-color: var(--surface);\r\n  padding: 1.5rem;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n}\r\n\r\n.stat-number {\r\n  font-size: 2rem;\r\n  font-weight: 600;\r\n  color: var(--primary-color);\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.stat-label {\r\n  color: var(--text-secondary);\r\n  font-size: 0.875rem;\r\n}\r\n\r\n/* Loading states */\r\n.loading {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n}\r\n\r\n.spinner {\r\n  width: 32px;\r\n  height: 32px;\r\n  border: 3px solid var(--border);\r\n  border-top: 3px solid var(--primary-color);\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* Responsive */\r\n@media (max-width: 768px) {\r\n  .header .container {\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n  }\r\n  \r\n  .nav {\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n  }\r\n  \r\n  .container {\r\n    padding: 0 0.5rem;\r\n  }\r\n  \r\n  .card {\r\n    padding: 1rem;\r\n  }\r\n}\r\n\r\n/* Modal */\r\n.modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n  padding: 1rem;\r\n}\r\n\r\n.modal-content {\r\n  background-color: var(--background);\r\n  border-radius: 12px;\r\n  max-width: 600px;\r\n  width: 100%;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.modal-header {\r\n  padding: 1.5rem;\r\n  border-bottom: 1px solid var(--border);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.25rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.modal-close {\r\n  background: none;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: var(--text-muted);\r\n  cursor: pointer;\r\n  padding: 0;\r\n  width: 32px;\r\n  height: 32px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.modal-close:hover {\r\n  color: var(--text-primary);\r\n}\r\n\r\n.modal-body {\r\n  padding: 1.5rem;\r\n}\r\n\r\n.modal-footer {\r\n  padding: 1.5rem;\r\n  border-top: 1px solid var(--border);\r\n  display: flex;\r\n  gap: 1rem;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.checkbox-group {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  gap: 0.75rem;\r\n  padding: 0.75rem;\r\n  background-color: var(--surface);\r\n  border-radius: 6px;\r\n  margin-bottom: 0.75rem;\r\n}\r\n\r\n.checkbox-group input[type=\"checkbox\"] {\r\n  margin-top: 0.25rem;\r\n  cursor: pointer;\r\n}\r\n\r\n.checkbox-group label {\r\n  cursor: pointer;\r\n  font-size: 0.875rem;\r\n  line-height: 1.5;\r\n}\r\n\r\n/* Utility classes */\r\n.hidden { display: none !important; }\r\n.text-center { text-align: center; }\r\n.text-right { text-align: right; }\r\n.mb-0 { margin-bottom: 0 !important; }\r\n.mb-1 { margin-bottom: 0.5rem !important; }\r\n.mb-2 { margin-bottom: 1rem !important; }\r\n.mt-2 { margin-top: 1rem !important; }\r\n.p-4 { padding: 2rem !important; }`;\r\n\r\n  return c.text(css, 200, {\r\n    'Content-Type': 'text/css; charset=utf-8',\r\n    'Cache-Control': 'public, max-age=3600'\r\n  });\r\n});\r\n\r\n// Serve bundled frontend application from KV or inline\r\napp.get('/static/app.bundle.js', async (c) => {\r\n  try {\r\n    // Try to load from KV first\r\n    const env = c.env as Environment;\r\n    const bundle = await env.VERITAS_KV.get('frontend-bundle');\r\n    if (bundle) {\r\n      return c.text(bundle, 200, { 'Content-Type': 'application/javascript' });\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load bundle from KV:', error);\r\n  }\r\n  \r\n  return c.text('console.error(\"Frontend bundle not found\");', 200, { 'Content-Type': 'application/javascript' });\r\n});\r\n\r\n// Serve WASM file\r\napp.get('/static/core_pqc_wasm_bg.wasm', async (c) => {\r\n  try {\r\n    const env = c.env as Environment;\r\n    const wasm = await env.VERITAS_KV.get('pqc-wasm', 'arrayBuffer');\r\n    if (wasm) {\r\n      return c.body(wasm, 200, { 'Content-Type': 'application/wasm' });\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load WASM from KV:', error);\r\n  }\r\n  \r\n  return c.text('WASM file not found', 404);\r\n});\r\n\r\napp.get('/static/app.js', async (c) => {\r\n  const js = `\r\n// Veritas Documents - Frontend Application\r\n\r\n// Load the bundled Post-Quantum Cryptography module\r\nconst script = document.createElement('script');\r\nscript.src = '/static/app.bundle.js';\r\nscript.onerror = () => console.error('Failed to load PQC bundle');\r\ndocument.head.appendChild(script);\r\n\r\nclass ClientCrypto {\r\n  static async encryptData(data, publicKey) {\r\n    // Generate a random AES key\r\n    const aesKey = await crypto.subtle.generateKey(\r\n      { name: 'AES-GCM', length: 256 },\r\n      true,\r\n      ['encrypt', 'decrypt']\r\n    );\r\n    \r\n    // Encrypt the data with AES-GCM\r\n    const encoder = new TextEncoder();\r\n    const dataBytes = encoder.encode(data);\r\n    const iv = crypto.getRandomValues(new Uint8Array(12));\r\n    \r\n    const encryptedData = await crypto.subtle.encrypt(\r\n      { name: 'AES-GCM', iv },\r\n      aesKey,\r\n      dataBytes\r\n    );\r\n    \r\n    // Convert to base64\r\n    const encryptedArray = new Uint8Array(encryptedData);\r\n    const encryptedB64 = btoa(String.fromCharCode(...encryptedArray));\r\n    const ivB64 = btoa(String.fromCharCode(...iv));\r\n    \r\n    return JSON.stringify({\r\n      version: '1.0',\r\n      algorithm: 'aes256gcm',\r\n      iv: ivB64,\r\n      ciphertext: encryptedB64,\r\n      encrypted: true\r\n    });\r\n  }\r\n}\r\n\r\nclass VeritasApp {\r\n  constructor() {\r\n    this.currentUser = null;\r\n    this.currentPage = 'login';\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // Check if user is logged in\r\n    const storedUser = localStorage.getItem('veritas-user');\r\n    if (storedUser) {\r\n      this.currentUser = JSON.parse(storedUser);\r\n      this.currentPage = 'dashboard';\r\n    }\r\n\r\n    this.router();\r\n    this.setupNavigation();\r\n  }\r\n\r\n  router() {\r\n    const path = window.location.pathname;\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n\r\n    if (path === '/activate' && urlParams.has('token')) {\r\n      this.currentPage = 'activate';\r\n      this.renderActivationPage(urlParams.get('token'));\r\n    } else if (this.currentUser) {\r\n      switch (path) {\r\n        case '/dashboard':\r\n          this.currentPage = 'dashboard';\r\n          this.renderDashboard();\r\n          break;\r\n        case '/create-asset':\r\n          this.currentPage = 'create-asset';\r\n          this.renderCreateAsset();\r\n          break;\r\n        case '/search':\r\n          this.currentPage = 'search';\r\n          this.renderSearch();\r\n          break;\r\n        case '/docs':\r\n          this.currentPage = 'docs';\r\n          this.renderDocs();\r\n          break;\r\n        default:\r\n          this.currentPage = 'dashboard';\r\n          this.renderDashboard();\r\n      }\r\n    } else {\r\n      // Public routes for non-logged-in users\r\n      if (path === '/search') {\r\n        this.currentPage = 'search';\r\n        this.renderSearch();\r\n      } else if (path === '/docs') {\r\n        this.currentPage = 'docs';\r\n        this.renderDocs();\r\n      } else {\r\n        this.currentPage = 'login';\r\n        this.renderLogin();\r\n      }\r\n    }\r\n\r\n    this.updateNavigation();\r\n  }\r\n\r\n  setupNavigation() {\r\n    document.addEventListener('click', (e) => {\r\n      if (e.target.matches('[data-nav]')) {\r\n        e.preventDefault();\r\n        const page = e.target.getAttribute('data-nav');\r\n        this.navigateTo(page);\r\n      }\r\n    });\r\n\r\n    // Handle browser back/forward\r\n    window.addEventListener('popstate', () => {\r\n      this.router();\r\n    });\r\n  }\r\n\r\n  navigateTo(page) {\r\n    let path = '/';\r\n    switch (page) {\r\n      case 'dashboard':\r\n        path = '/dashboard';\r\n        break;\r\n      case 'create-asset':\r\n        path = '/create-asset';\r\n        break;\r\n      case 'search':\r\n        path = '/search';\r\n        break;\r\n      case 'docs':\r\n        path = '/docs';\r\n        break;\r\n      case 'logout':\r\n        this.logout();\r\n        return;\r\n    }\r\n\r\n    window.history.pushState({}, '', path);\r\n    this.router();\r\n  }\r\n\r\n  updateNavigation() {\r\n    const nav = document.getElementById('nav');\r\n    if (!nav) return;\r\n\r\n    if (this.currentUser) {\r\n      nav.innerHTML = \\`<a href=\"#\" data-nav=\"dashboard\" class=\"\\${this.currentPage === 'dashboard' ? 'active' : ''}\">Dashboard</a><a href=\"#\" data-nav=\"create-asset\" class=\"\\${this.currentPage === 'create-asset' ? 'active' : ''}\">Create Asset</a><a href=\"#\" data-nav=\"search\" class=\"\\${this.currentPage === 'search' ? 'active' : ''}\">Search</a><a href=\"#\" data-nav=\"docs\" class=\"\\${this.currentPage === 'docs' ? 'active' : ''}\">Docs</a><a href=\"#\" data-nav=\"logout\">Logout</a>\\`;\r\n    } else {\r\n      nav.innerHTML = \\`<a href=\"#\" data-nav=\"search\" class=\"\\${this.currentPage === 'search' ? 'active' : ''}\">Search</a><a href=\"#\" data-nav=\"docs\" class=\"\\${this.currentPage === 'docs' ? 'active' : ''}\">Docs</a>\\`;\r\n    }\r\n  }\r\n\r\n  renderLogin() {\r\n    const content = document.getElementById('content');\r\n    content.innerHTML = \\`<div class=\"card\" style=\"max-width: 400px; margin: 2rem auto;\"><div class=\"card-header\"><h2 class=\"card-title\">Login to Veritas Documents</h2><p class=\"card-subtitle\">Secure legal document storage with post-quantum cryptography</p></div><form id=\"login-form\"><div class=\"form-group\"><label class=\"label\" for=\"email\">Email</label><input type=\"email\" id=\"email\" class=\"input\" required></div><div class=\"form-group\"><label class=\"label\" for=\"private-key\">Private Key</label><textarea id=\"private-key\" class=\"textarea\" placeholder=\"Enter your private key...\" required></textarea></div><button type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\">Login</button></form><div class=\"mt-2 text-center\"><p class=\"text-muted\">Don't have an account? <a href=\"#\" id=\"request-account-link\" class=\"text-primary\" style=\"text-decoration: underline;\">Request new account</a></p></div></div>\\`;\r\n\r\n    document.getElementById('login-form').addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.handleLogin();\r\n    });\r\n\r\n    document.getElementById('request-account-link').addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      this.openAccountRequestEmail();\r\n    });\r\n  }\r\n\r\n  renderDashboard() {\r\n    const content = document.getElementById('content');\r\n    content.innerHTML = \\`<div class=\"dashboard-stats\"><div class=\"stat-card\"><div class=\"stat-number\" id=\"owned-count\">-</div><div class=\"stat-label\">Owned Assets</div></div><div class=\"stat-card\"><div class=\"stat-number\" id=\"created-count\">-</div><div class=\"stat-label\">Created Assets</div></div><div class=\"stat-card\"><div class=\"stat-number\">$25</div><div class=\"stat-label\">Per Asset</div></div></div><div class=\"grid grid-2\"><div class=\"card\"><div class=\"card-header\"><h3 class=\"card-title\">Quick Actions</h3></div><div style=\"display: flex; gap: 1rem; flex-wrap: wrap;\"><a href=\"#\" data-nav=\"create-asset\" class=\"btn btn-primary\">Create New Asset</a><button id=\"invite-user\" class=\"btn btn-secondary\">Invite User</button></div></div><div class=\"card\"><div class=\"card-header\"><h3 class=\"card-title\">Account Information</h3></div><p><strong>Email:</strong> \\${this.currentUser.email}</p><p><strong>Account Type:</strong> \\${this.currentUser.accountType}</p><p><strong>Member Since:</strong> \\${new Date(this.currentUser.createdAt).toLocaleDateString()}</p></div></div><div class=\"card\"><div class=\"card-header\"><h3 class=\"card-title\">Your Assets</h3></div><div id=\"user-assets\" class=\"loading\"><div class=\"spinner\"></div></div></div>\\`;\r\n\r\n    this.loadUserAssets();\r\n    document.getElementById('invite-user').addEventListener('click', () => this.showInviteModal());\r\n  }\r\n\r\n  renderCreateAsset() {\r\n    const content = document.getElementById('content');\r\n    content.innerHTML = \\`<div class=\"card\" style=\"max-width: 600px; margin: 0 auto;\"><div class=\"card-header\"><h2 class=\"card-title\">Create New Asset</h2><p class=\"card-subtitle\">Store your legal document as an NFT ($25 fee)</p></div><form id=\"create-asset-form\"><div class=\"form-group\"><label class=\"label\" for=\"asset-title\">Document Title</label><input type=\"text\" id=\"asset-title\" class=\"input\" required></div><div class=\"form-group\"><label class=\"label\" for=\"asset-description\">Description</label><textarea id=\"asset-description\" class=\"textarea\"></textarea></div><div class=\"form-group\"><label class=\"label\" for=\"document-type\">Document Type</label><select id=\"document-type\" class=\"select\" required><option value=\"\">Select type...</option><option value=\"will\">Will</option><option value=\"deed\">Property Deed</option><option value=\"certificate\">Certificate</option><option value=\"contract\">Contract</option><option value=\"other\">Other</option></select></div><div class=\"form-group\"><label class=\"label\" for=\"document-file\">Document File</label><input type=\"file\" id=\"document-file\" class=\"input\" required></div><div class=\"form-group\"><label><input type=\"checkbox\" id=\"public-searchable\"> Make this asset publicly searchable</label></div><div class=\"form-group\"><label class=\"label\" for=\"private-key-create\">Your Private Key (for signing)</label><textarea id=\"private-key-create\" class=\"textarea\" placeholder=\"Enter your private key...\" required></textarea></div><button type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\">Create Asset ($25)</button></form></div>\\`;\r\n\r\n    document.getElementById('create-asset-form').addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.handleCreateAsset();\r\n    });\r\n  }\r\n\r\n  renderSearch() {\r\n    const content = document.getElementById('content');\r\n    content.innerHTML = \\`<div class=\"card\"><div class=\"card-header\"><h2 class=\"card-title\">Search Assets</h2><p class=\"card-subtitle\">Explore publicly available legal documents</p></div><form id=\"search-form\" style=\"display: flex; gap: 1rem; margin-bottom: 2rem;\"><input type=\"text\" id=\"search-query\" class=\"input\" placeholder=\"Search assets...\" style=\"flex: 1;\"><select id=\"search-type\" class=\"select\" style=\"width: 200px;\"><option value=\"\">All Types</option><option value=\"will\">Will</option><option value=\"deed\">Property Deed</option><option value=\"certificate\">Certificate</option><option value=\"contract\">Contract</option><option value=\"other\">Other</option></select><button type=\"submit\" class=\"btn btn-primary\">Search</button></form></div><div id=\"search-results\" class=\"grid grid-3\"><!-- Search results will be populated here --></div>\\`;\r\n\r\n    document.getElementById('search-form').addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.handleSearch();\r\n    });\r\n\r\n    // Load initial results\r\n    this.handleSearch();\r\n  }\r\n\r\n  renderDocs() {\r\n    const content = document.getElementById('content');\r\n    content.innerHTML = \\`\r\n      <div class=\"docs-container\">\r\n        <div class=\"docs-sidebar\">\r\n          <h3 class=\"docs-sidebar-title\">\uD83D\uDCDA Documentation</h3>\r\n          <nav class=\"docs-nav\">\r\n            <a href=\"#\" class=\"docs-nav-link active\" data-doc=\"README\">README</a>\r\n            <a href=\"#\" class=\"docs-nav-link\" data-doc=\"BLOCKCHAIN_ARCHITECTURE\">Blockchain Architecture</a>\r\n            <a href=\"#\" class=\"docs-nav-link\" data-doc=\"ZERO_KNOWLEDGE_ARCHITECTURE\">Zero-Knowledge Architecture</a>\r\n            <a href=\"#\" class=\"docs-nav-link\" data-doc=\"VDC_INTEGRATION_GUIDE\">VDC Integration Guide</a>\r\n            <a href=\"#\" class=\"docs-nav-link\" data-doc=\"DEVELOPMENT_PLAN\">Development Plan</a>\r\n            <a href=\"#\" class=\"docs-nav-link\" data-doc=\"TECHNICAL_STATUS\">Technical Status</a>\r\n            <a href=\"#\" class=\"docs-nav-link\" data-doc=\"SECURITY_GUARDRAILS\">Security Guardrails</a>\r\n          </nav>\r\n        </div>\r\n        <div class=\"docs-content\">\r\n          <div id=\"doc-viewer\" class=\"doc-viewer\">\r\n            <div class=\"loading\">Loading documentation...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    \\`;\r\n\r\n    // Add styles for docs page\r\n    if (!document.getElementById('docs-styles')) {\r\n      const style = document.createElement('style');\r\n      style.id = 'docs-styles';\r\n      style.textContent = \\`\r\n        .docs-container {\r\n          display: grid;\r\n          grid-template-columns: 280px 1fr;\r\n          gap: 2rem;\r\n          max-width: 1400px;\r\n          margin: 0 auto;\r\n        }\r\n        \r\n        .docs-sidebar {\r\n          background: var(--surface);\r\n          border-radius: 8px;\r\n          padding: 1.5rem;\r\n          height: fit-content;\r\n          position: sticky;\r\n          top: 2rem;\r\n        }\r\n        \r\n        .docs-sidebar-title {\r\n          margin: 0 0 1rem 0;\r\n          font-size: 1.25rem;\r\n          color: var(--text-primary);\r\n        }\r\n        \r\n        .docs-nav {\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 0.5rem;\r\n        }\r\n        \r\n        .docs-nav-link {\r\n          padding: 0.75rem 1rem;\r\n          color: var(--text-secondary);\r\n          text-decoration: none;\r\n          border-radius: 6px;\r\n          transition: all 0.2s;\r\n          font-size: 0.95rem;\r\n        }\r\n        \r\n        .docs-nav-link:hover {\r\n          background: var(--background);\r\n          color: var(--primary-color);\r\n        }\r\n        \r\n        .docs-nav-link.active {\r\n          background: var(--primary-color);\r\n          color: white;\r\n          font-weight: 500;\r\n        }\r\n        \r\n        .docs-content {\r\n          background: white;\r\n          border-radius: 8px;\r\n          padding: 2.5rem;\r\n          box-shadow: 0 1px 3px rgba(0,0,0,0.1);\r\n          min-height: 600px;\r\n        }\r\n        \r\n        .doc-viewer {\r\n          line-height: 1.7;\r\n        }\r\n        \r\n        .doc-viewer h1 { font-size: 2.5rem; margin: 0 0 1rem 0; color: var(--text-primary); }\r\n        .doc-viewer h2 { font-size: 1.75rem; margin: 2rem 0 1rem 0; color: var(--text-primary); border-bottom: 2px solid var(--border); padding-bottom: 0.5rem; }\r\n        .doc-viewer h3 { font-size: 1.35rem; margin: 1.5rem 0 0.75rem 0; color: var(--text-primary); }\r\n        .doc-viewer h4 { font-size: 1.15rem; margin: 1.25rem 0 0.5rem 0; color: var(--text-secondary); }\r\n        .doc-viewer p { margin: 0 0 1rem 0; color: var(--text-secondary); }\r\n        .doc-viewer ul, .doc-viewer ol { margin: 0 0 1rem 0; padding-left: 2rem; }\r\n        .doc-viewer li { margin: 0.5rem 0; color: var(--text-secondary); }\r\n        .doc-viewer code { background: var(--surface); padding: 0.2rem 0.4rem; border-radius: 3px; font-family: 'Courier New', monospace; font-size: 0.9em; }\r\n        .doc-viewer pre { background: #1e293b; color: #e2e8f0; padding: 1.5rem; border-radius: 6px; overflow-x: auto; margin: 1rem 0; }\r\n        .doc-viewer pre code { background: none; padding: 0; color: inherit; }\r\n        .doc-viewer blockquote { border-left: 4px solid var(--primary-color); padding-left: 1rem; margin: 1rem 0; color: var(--text-secondary); font-style: italic; }\r\n        .doc-viewer table { width: 100%; border-collapse: collapse; margin: 1rem 0; }\r\n        .doc-viewer th, .doc-viewer td { padding: 0.75rem; text-align: left; border-bottom: 1px solid var(--border); }\r\n        .doc-viewer th { background: var(--surface); font-weight: 600; color: var(--text-primary); }\r\n        .doc-viewer a { color: var(--primary-color); text-decoration: none; }\r\n        .doc-viewer a:hover { text-decoration: underline; }\r\n        .doc-viewer hr { border: none; border-top: 1px solid var(--border); margin: 2rem 0; }\r\n        .doc-viewer .loading { text-align: center; padding: 3rem; color: var(--text-muted); }\r\n        \r\n        @media (max-width: 768px) {\r\n          .docs-container {\r\n            grid-template-columns: 1fr;\r\n          }\r\n          \r\n          .docs-sidebar {\r\n            position: static;\r\n          }\r\n        }\r\n      \\`;\r\n      document.head.appendChild(style);\r\n    }\r\n\r\n    // Load documentation\r\n    this.loadDoc('README');\r\n\r\n    // Handle doc navigation\r\n    document.querySelectorAll('.docs-nav-link').forEach(link => {\r\n      link.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        const docName = link.getAttribute('data-doc');\r\n        \r\n        // Update active state\r\n        document.querySelectorAll('.docs-nav-link').forEach(l => l.classList.remove('active'));\r\n        link.classList.add('active');\r\n        \r\n        // Load doc\r\n        this.loadDoc(docName);\r\n      });\r\n    });\r\n  }\r\n\r\n  async loadDoc(docName) {\r\n    const viewer = document.getElementById('doc-viewer');\r\n    viewer.innerHTML = '<div class=\"loading\">Loading documentation...</div>';\r\n\r\n    try {\r\n      const response = await fetch(\\`/api/docs/\\${docName}\\`);\r\n      if (!response.ok) throw new Error('Failed to load documentation');\r\n      \r\n      const data = await response.json();\r\n      if (data.success) {\r\n        viewer.innerHTML = data.data.html;\r\n      } else {\r\n        viewer.innerHTML = '<div class=\"alert alert-error\">Failed to load documentation</div>';\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading doc:', error);\r\n      viewer.innerHTML = '<div class=\"alert alert-error\">Failed to load documentation. Please try again later.</div>';\r\n    }\r\n  }\r\n\r\n  renderActivationPage(token) {\r\n    const content = document.getElementById('content');\r\n    content.innerHTML = \\`<div class=\"card\" style=\"max-width: 500px; margin: 2rem auto;\"><div class=\"card-header\"><h2 class=\"card-title\">Activate Your Account</h2><p class=\"card-subtitle\">Complete your account setup</p></div><form id=\"activation-form\"><div class=\"form-group\"><label class=\"label\" for=\"full-name\">Full Name</label><input type=\"text\" id=\"full-name\" class=\"input\" required></div><div class=\"form-group\"><label class=\"label\" for=\"date-of-birth\">Date of Birth</label><input type=\"date\" id=\"date-of-birth\" class=\"input\"></div><div class=\"form-group\"><label class=\"label\" for=\"address\">Address</label><textarea id=\"address\" class=\"textarea\"></textarea></div><div class=\"form-group\"><label class=\"label\" for=\"phone\">Phone Number</label><input type=\"tel\" id=\"phone\" class=\"input\"></div><button type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\">Activate Account</button></form></div>\\`;\r\n\r\n    document.getElementById('activation-form').addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.handleActivation(token);\r\n    });\r\n  }\r\n\r\n  async handleLogin() {\r\n    const email = document.getElementById('email').value;\r\n    const privateKey = document.getElementById('private-key').value;\r\n\r\n    try {\r\n      const response = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, privateKey }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        this.currentUser = result.data.user;\r\n        localStorage.setItem('veritas-user', JSON.stringify(this.currentUser));\r\n        this.navigateTo('dashboard');\r\n      } else {\r\n        this.showAlert('error', result.error || 'Login failed');\r\n      }\r\n    } catch (error) {\r\n      this.showAlert('error', 'Network error. Please try again.');\r\n    }\r\n  }\r\n\r\n  async handleActivation(token) {\r\n    const personalDetails = {\r\n      fullName: document.getElementById('full-name').value,\r\n      dateOfBirth: document.getElementById('date-of-birth').value,\r\n      address: document.getElementById('address').value,\r\n      phoneNumber: document.getElementById('phone').value,\r\n    };\r\n\r\n    try {\r\n      // Initialize Post-Quantum Cryptography\r\n      console.log('Initializing PQC for key generation...');\r\n      await window.VeritasCrypto.ensureCryptoReady();\r\n      \r\n      // Generate both Kyber-768 (encryption) and Dilithium-2 (signing) keypairs client-side\r\n      console.log('Generating post-quantum keypairs...');\r\n      const keyPair = await window.VeritasCrypto.generateClientKeypair();\r\n      console.log('Keypairs generated successfully');\r\n      \r\n      // Get email from activation form (should be pre-filled or from token)\r\n      const email = document.getElementById('email')?.value || '';\r\n      \r\n      // Prepare user data to encrypt (this stays client-side only)\r\n      const userData = {\r\n        email,\r\n        personalDetails,\r\n        timestamp: Date.now()\r\n      };\r\n      \r\n      // Encrypt user data with their own Kyber public key (zero-knowledge)\r\n      console.log('Encrypting user data...');\r\n      const userDataStr = JSON.stringify(userData);\r\n      const encryptedUserData = await window.VeritasCrypto.encryptDocumentData(\r\n        userDataStr,\r\n        keyPair.kyberPublicKey\r\n      );\r\n      console.log('User data encrypted');\r\n      \r\n      // Sign the blockchain transaction with Dilithium private key\r\n      console.log('Signing blockchain transaction...');\r\n      const blockData = {\r\n        kyberPublicKey: keyPair.kyberPublicKey,\r\n        dilithiumPublicKey: keyPair.dilithiumPublicKey,\r\n        encryptedUserData,\r\n        timestamp: Date.now()\r\n      };\r\n      const signature = await window.VeritasCrypto.signData(\r\n        JSON.stringify(blockData), \r\n        keyPair.dilithiumPrivateKey\r\n      );\r\n      console.log('Transaction signed');\r\n\r\n      const response = await fetch('/api/auth/activate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ \r\n          token,\r\n          kyberPublicKey: keyPair.kyberPublicKey,\r\n          dilithiumPublicKey: keyPair.dilithiumPublicKey,\r\n          encryptedUserData, // Only encrypted data sent to server\r\n          signature\r\n        }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        // Show success message with keys and important instructions\r\n        const content = document.getElementById('content');\r\n        content.innerHTML = \\`<div class=\"card\" style=\"max-width: 700px; margin: 2rem auto;\">\r\n          <div class=\"alert alert-success\">\r\n            <strong>\u2713 Account activated successfully!</strong>\r\n          </div>\r\n          \r\n          <div class=\"card-header\">\r\n            <h2 class=\"card-title\">\uD83D\uDD10 Your Cryptographic Keys</h2>\r\n            <p class=\"card-subtitle\">Post-Quantum Cryptography (Kyber-768 + Dilithium-2)</p>\r\n          </div>\r\n\r\n          <div class=\"alert alert-warning\" style=\"margin-bottom: 1.5rem;\">\r\n            <strong>\u26A0\uFE0F Critical: Save These Keys Now!</strong><br>\r\n            <small>You will need the <strong>Kyber Private Key</strong> to login and access your documents. There is no password reset or recovery option.</small>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"label\">\r\n              <strong>Kyber Private Key (Encryption)</strong> \r\n              <span style=\"color: var(--error-color); font-weight: 600;\"> (REQUIRED FOR LOGIN - SAVE THIS!)</span>\r\n            </label>\r\n            <textarea class=\"textarea\" rows=\"3\" readonly style=\"font-family: monospace; font-size: 0.875rem; background-color: #fff3cd; border: 2px solid var(--warning-color);\">\\${keyPair.kyberPrivateKey}</textarea>\r\n            <small class=\"text-muted\">You must keep this safe to access your account. Copy it now!</small>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"label\">\r\n              <strong>Dilithium Private Key (Signing)</strong> \r\n              <span style=\"color: var(--warning-color); font-weight: 600;\"> (SAVE THIS TOO!)</span>\r\n            </label>\r\n            <textarea class=\"textarea\" rows=\"3\" readonly style=\"font-family: monospace; font-size: 0.875rem; background-color: #fff3cd; border: 2px solid var(--warning-color);\">\\${keyPair.dilithiumPrivateKey}</textarea>\r\n            <small class=\"text-muted\">Used to sign blockchain transactions and prove your identity.</small>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"label\">\r\n              <strong>Kyber Public Key</strong>\r\n              <span style=\"color: var(--text-muted);\"> (Used for encryption - stored on server)</span>\r\n            </label>\r\n            <textarea class=\"textarea\" rows=\"2\" readonly style=\"font-family: monospace; font-size: 0.875rem;\">\\${keyPair.kyberPublicKey}</textarea>\r\n            <small class=\"text-muted\">This key is stored on our servers and used to encrypt your documents.</small>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"label\">\r\n              <strong>Dilithium Public Key</strong>\r\n              <span style=\"color: var(--text-muted);\"> (Used for verification - stored on blockchain)</span>\r\n            </label>\r\n            <textarea class=\"textarea\" rows=\"2\" readonly style=\"font-family: monospace; font-size: 0.875rem;\">\\${keyPair.dilithiumPublicKey}</textarea>\r\n            <small class=\"text-muted\">Used to verify your signatures on the Veritas blockchain.</small>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label class=\"label\">\r\n              <strong>Recovery Phrase</strong>\r\n              <span style=\"color: var(--text-secondary);\"> (Optional backup - recommended)</span>\r\n            </label>\r\n            <textarea class=\"textarea\" rows=\"2\" readonly style=\"font-family: monospace; font-size: 0.875rem;\">\\${result.data.recoveryPhrase}</textarea>\r\n            <small class=\"text-muted\">Additional recovery option. Store separately from your private keys.</small>\r\n          </div>\r\n\r\n          <div style=\"background-color: var(--surface); padding: 1rem; border-radius: 8px; margin: 1.5rem 0;\">\r\n            <h3 style=\"font-size: 1rem; margin-bottom: 0.75rem; color: var(--text-primary);\">\uD83D\uDCDD Where to Store Your Keys:</h3>\r\n            <ul style=\"margin-left: 1.5rem; color: var(--text-secondary); line-height: 1.8;\">\r\n              <li><strong>Password Manager</strong> (1Password, Bitwarden, LastPass)</li>\r\n              <li><strong>Secret Management Tool</strong> (AWS Secrets Manager, Azure Key Vault)</li>\r\n              <li><strong>Encrypted USB drive</strong> in a safe or lockbox</li>\r\n              <li><strong>Printed copy</strong> in a fireproof safe</li>\r\n              <li><strong>Written note</strong> stored securely (even under your pillow works... but a safe is better! \uD83D\uDE0A)</li>\r\n            </ul>\r\n            <p style=\"margin-top: 0.75rem; font-size: 0.875rem; color: var(--text-primary);\">\r\n              <strong>Pro tip:</strong> Store both private keys in <em>at least two separate secure locations</em>.\r\n            </p>\r\n          </div>\r\n\r\n          <button id=\"continue-login\" class=\"btn btn-primary\" style=\"width: 100%;\">Continue to Login</button>\r\n        </div>\\`;\r\n\r\n        document.getElementById('continue-login').addEventListener('click', () => {\r\n          this.showSecurityWarningModal();\r\n        });\r\n      } else {\r\n        this.showAlert('error', result.error || 'Activation failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Activation error:', error);\r\n      this.showAlert('error', 'Error: ' + error.message);\r\n    }\r\n  }\r\n\r\n  async handleCreateAsset() {\r\n    const title = document.getElementById('asset-title').value;\r\n    const description = document.getElementById('asset-description').value;\r\n    const documentType = document.getElementById('document-type').value;\r\n    const fileInput = document.getElementById('document-file');\r\n    const isPublic = document.getElementById('public-searchable').checked;\r\n    const privateKey = document.getElementById('private-key-create').value;\r\n\r\n    if (!fileInput.files[0]) {\r\n      this.showAlert('error', 'Please select a document file');\r\n      return;\r\n    }\r\n\r\n    const file = fileInput.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = async (e) => {\r\n      try {\r\n        const documentContent = e.target.result;\r\n        console.log('Document loaded, size:', documentContent.length);\r\n\r\n        // Wait for Post-Quantum Cryptography to initialize\r\n        console.log('Initializing PQC...');\r\n        await window.VeritasCrypto.ensureCryptoReady();\r\n        console.log('PQC ready');\r\n\r\n        // Encrypt the document client-side with Post-Quantum Cryptography\r\n        console.log('Encrypting document...');\r\n        const encryptedData = await window.VeritasCrypto.encryptDocumentData(\r\n          documentContent,\r\n          this.currentUser.publicKey\r\n        );\r\n        console.log('Document encrypted, sending to server...');\r\n\r\n        const response = await fetch('/api/web3-assets/create-web3', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            userId: this.currentUser.id,\r\n            title,\r\n            description,\r\n            documentType,\r\n            documentData: encryptedData,\r\n            isPubliclySearchable: isPublic,\r\n            privateKey,\r\n          }),\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (result.success) {\r\n          this.showAlert('success', 'Asset created successfully! Redirecting to payment...');\r\n          setTimeout(() => {\r\n            window.location.href = result.data.stripeUrl;\r\n          }, 2000);\r\n        } else {\r\n          this.showAlert('error', result.error || 'Failed to create asset');\r\n        }\r\n      } catch (error) {\r\n        console.error('Asset creation error:', error);\r\n        this.showAlert('error', 'Error: ' + error.message);\r\n      }\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  }\r\n\r\n  async loadUserAssets() {\r\n    try {\r\n      const response = await fetch(\\`/api/assets/user/\\${this.currentUser.id}\\`);\r\n      const result = await response.json();\r\n      \r\n      const container = document.getElementById('user-assets');\r\n      if (result.success && result.data.assets.length > 0) {\r\n        container.innerHTML = result.data.assets.map(asset => \\`<div class=\"asset-card\"><div class=\"asset-type\">\\${asset.documentType}</div><div class=\"asset-title\">\\${asset.title}</div><div class=\"asset-description\">\\${asset.description}</div><div class=\"asset-meta\"><span>Token: \\${asset.tokenId}</span><span>\\${new Date(asset.createdAt).toLocaleDateString()}</span></div></div>\\`).join('');\r\n        \r\n        document.getElementById('owned-count').textContent = result.data.assets.filter(a => a.ownerId === this.currentUser.id).length;\r\n        document.getElementById('created-count').textContent = result.data.assets.filter(a => a.creatorId === this.currentUser.id).length;\r\n      } else {\r\n        container.innerHTML = '<p class=\"text-center text-muted\">No assets found. Create your first asset to get started!</p>';\r\n        document.getElementById('owned-count').textContent = '0';\r\n        document.getElementById('created-count').textContent = '0';\r\n      }\r\n    } catch (error) {\r\n      document.getElementById('user-assets').innerHTML = '<div class=\"alert alert-error\">Failed to load assets</div>';\r\n    }\r\n  }\r\n\r\n  async handleSearch() {\r\n    const query = document.getElementById('search-query').value;\r\n    const type = document.getElementById('search-type').value;\r\n    \r\n    const container = document.getElementById('search-results');\r\n    container.innerHTML = '<div class=\"loading\"><div class=\"spinner\"></div></div>';\r\n\r\n    try {\r\n      const params = new URLSearchParams();\r\n      if (query) params.append('q', query);\r\n      if (type) params.append('type', type);\r\n      \r\n      const response = await fetch(\\`/api/search?\\${params}\\`);\r\n      const result = await response.json();\r\n      \r\n      if (result.success && result.data.assets.length > 0) {\r\n        container.innerHTML = result.data.assets.map(asset => \\`<div class=\"asset-card\"><div class=\"asset-type\">\\${asset.documentType}</div><div class=\"asset-title\">\\${asset.title}</div><div class=\"asset-description\">\\${asset.description}</div><div class=\"asset-meta\"><span>Token: \\${asset.tokenId}</span><span>\\${new Date(asset.createdAt).toLocaleDateString()}</span></div></div>\\`).join('');\r\n      } else {\r\n        container.innerHTML = '<p class=\"text-center text-muted\">No assets found matching your search criteria.</p>';\r\n      }\r\n    } catch (error) {\r\n      container.innerHTML = '<div class=\"alert alert-error\">Failed to search assets</div>';\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.currentUser = null;\r\n    localStorage.removeItem('veritas-user');\r\n    this.navigateTo('login');\r\n  }\r\n\r\n  showSecurityWarningModal() {\r\n    const modal = document.createElement('div');\r\n    modal.className = 'modal';\r\n    modal.innerHTML = \\`\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h3 class=\"modal-title\">\uD83D\uDD12 Important Security Information</h3>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"alert alert-warning\" style=\"margin-bottom: 1.5rem;\">\r\n            <strong>\u26A0\uFE0F Zero-Knowledge Architecture</strong><br>\r\n            Your documents are encrypted with post-quantum cryptography. Only you can decrypt them.\r\n          </div>\r\n\r\n          <h4 style=\"margin-bottom: 1rem; font-size: 1rem;\">Before you continue, please confirm:</h4>\r\n\r\n          <div class=\"checkbox-group\">\r\n            <input type=\"checkbox\" id=\"confirm-private-key\">\r\n            <label for=\"confirm-private-key\">\r\n              I have <strong>saved my Private Key</strong> in a secure location (password manager, safe, or other secure storage)\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"checkbox-group\">\r\n            <input type=\"checkbox\" id=\"confirm-understand-loss\">\r\n            <label for=\"confirm-understand-loss\">\r\n              I understand that <strong>losing my Private Key means permanent loss of access</strong> to my account and all documents\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"checkbox-group\">\r\n            <input type=\"checkbox\" id=\"confirm-no-recovery\">\r\n            <label for=\"confirm-no-recovery\">\r\n              I understand there is <strong>no password reset</strong> and <strong>no recovery process</strong> - the cryptographic keys cannot be recreated\r\n            </label>\r\n          </div>\r\n\r\n          <div class=\"checkbox-group\">\r\n            <input type=\"checkbox\" id=\"confirm-new-account\">\r\n            <label for=\"confirm-new-account\">\r\n              I understand that if I lose access, I will need to <strong>create a new account</strong> and all existing documents will be permanently inaccessible\r\n            </label>\r\n          </div>\r\n\r\n          <div style=\"background-color: var(--surface); padding: 1rem; border-radius: 8px; margin-top: 1.5rem;\">\r\n            <h4 style=\"font-size: 0.9rem; margin-bottom: 0.5rem; color: var(--text-primary);\">\uD83D\uDCDC Legal Compliance Note</h4>\r\n            <p style=\"font-size: 0.875rem; line-height: 1.6; color: var(--text-secondary); margin: 0;\">\r\n              Documents stored in Veritas are encrypted using NIST-standardized post-quantum cryptographic algorithms \r\n              (Kyber-768 and Dilithium-2), stored on IPFS with Ethereum blockchain anchoring, and timestamped with \r\n              cryptographic proofs. This ensures compliance with legal standards for digital evidence in jurisdictions \r\n              that recognize blockchain-based document authentication, including courts in the United States, European Union, \r\n              United Kingdom, Australia, and other countries with established digital evidence frameworks.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button id=\"modal-cancel\" class=\"btn btn-secondary\">Go Back</button>\r\n          <button id=\"modal-confirm\" class=\"btn btn-primary\" disabled>I Understand - Proceed to Login</button>\r\n        </div>\r\n      </div>\r\n    \\`;\r\n\r\n    document.body.appendChild(modal);\r\n\r\n    // Enable confirm button only when all checkboxes are checked\r\n    const checkboxes = modal.querySelectorAll('input[type=\"checkbox\"]');\r\n    const confirmButton = modal.querySelector('#modal-confirm');\r\n    \r\n    const updateConfirmButton = () => {\r\n      const allChecked = Array.from(checkboxes).every(cb => cb.checked);\r\n      confirmButton.disabled = !allChecked;\r\n    };\r\n\r\n    checkboxes.forEach(cb => {\r\n      cb.addEventListener('change', updateConfirmButton);\r\n    });\r\n\r\n    // Cancel button\r\n    modal.querySelector('#modal-cancel').addEventListener('click', () => {\r\n      modal.remove();\r\n    });\r\n\r\n    // Confirm button\r\n    confirmButton.addEventListener('click', () => {\r\n      modal.remove();\r\n      this.navigateTo('login');\r\n    });\r\n  }\r\n\r\n  showInviteModal() {\r\n    const modal = document.createElement('div');\r\n    modal.className = 'modal';\r\n    modal.innerHTML = \\`<div class=\"modal-content\"><div class=\"modal-header\"><h3 class=\"modal-title\">Invite New User</h3><button class=\"modal-close\" onclick=\"this.closest('.modal').remove()\">&times;</button></div><div class=\"modal-body\"><form id=\"invite-form\"><div class=\"form-group\"><label class=\"label\" for=\"invite-email\">Email Address</label><input type=\"email\" id=\"invite-email\" class=\"input\" placeholder=\"user@example.com\" required></div><div class=\"form-group\"><label><input type=\"checkbox\" id=\"invite-message\"> Include personal message</label></div><div class=\"form-group\" id=\"message-group\" style=\"display: none;\"><label class=\"label\" for=\"invite-message-text\">Personal Message (optional)</label><textarea id=\"invite-message-text\" class=\"textarea\" placeholder=\"Add a personal message to your invitation...\"></textarea></div><button type=\"submit\" class=\"btn btn-primary\" style=\"width: 100%;\">Send Invitation</button></form></div></div>\\`;\r\n\r\n    document.body.appendChild(modal);\r\n    \r\n    // Show message field when checkbox is checked\r\n    document.getElementById('invite-message').addEventListener('change', (e) => {\r\n      document.getElementById('message-group').style.display = e.target.checked ? 'block' : 'none';\r\n    });\r\n\r\n    document.getElementById('invite-form').addEventListener('submit', (e) => {\r\n      e.preventDefault();\r\n      this.handleSendInvite();\r\n    });\r\n  }\r\n\r\n  async handleSendInvite() {\r\n    const email = document.getElementById('invite-email').value;\r\n    const includeMessage = document.getElementById('invite-message').checked;\r\n    const message = includeMessage ? document.getElementById('invite-message-text').value : '';\r\n\r\n    try {\r\n      // Create authorization header\r\n      const token = btoa(\\`\\${this.currentUser.email}:\\${this.getStoredPrivateKey()}\\`);\r\n      \r\n      const response = await fetch('/api/auth/send-invite', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'Authorization': \\`Bearer \\${token}\\`\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        // Close modal\r\n        document.querySelector('.modal').remove();\r\n        \r\n        // Show success message\r\n        this.showAlert('success', 'Invitation sent successfully!');\r\n        \r\n        // Optionally send email with the invitation link\r\n        if (includeMessage) {\r\n          this.sendInviteEmail(email, result.data.activationUrl, message);\r\n        }\r\n      } else {\r\n        this.showAlert('error', result.error || 'Failed to send invitation');\r\n      }\r\n    } catch (error) {\r\n      this.showAlert('error', 'Network error. Please try again.');\r\n    }\r\n  }\r\n\r\n  sendInviteEmail(email, activationUrl, message) {\r\n    const subject = 'You have been invited to join Veritas Documents';\r\n    const body = \\`\\${message ? message + '\\\\\\\\n\\\\\\\\n' : ''}You have been invited to join Veritas Documents, a secure platform for storing legal documents as NFTs.\\\\\\\\n\\\\\\\\nClick here to activate your account: \\${activationUrl}\\\\\\\\n\\\\\\\\nThis invitation will expire in 7 days.\\\\\\\\n\\\\\\\\nBest regards,\\\\\\\\n\\${this.currentUser.email}\\`;\r\n\r\n    const mailtoLink = \\`mailto:\\${email}?subject=\\${encodeURIComponent(subject)}&body=\\${encodeURIComponent(body)}\\`;\r\n    window.open(mailtoLink);\r\n  }\r\n\r\n  getStoredPrivateKey() {\r\n    // In a real app, this would be stored securely (encrypted in localStorage or using a password manager)\r\n    // For now, we'll prompt the user to enter it when needed\r\n    return prompt('Please enter your private key to authorize this action:');\r\n  }\r\n\r\n  showAlert(type, message) {\r\n    const existing = document.querySelector('.alert');\r\n    if (existing) existing.remove();\r\n\r\n    const alert = document.createElement('div');\r\n    alert.className = \\`alert alert-\\${type}\\`;\r\n    alert.textContent = message;\r\n    \r\n    const content = document.getElementById('content');\r\n    content.insertBefore(alert, content.firstChild);\r\n    \r\n    setTimeout(() => alert.remove(), 5000);\r\n  }\r\n\r\n  openAccountRequestEmail() {\r\n    const subject = 'Request for Veritas Documents Account';\r\n    const body = 'Hello,\\\\\\\\n\\\\\\\\nI would like to request an account for Veritas Documents.\\\\\\\\n\\\\\\\\nPlease provide me with an invitation link.\\\\\\\\n\\\\\\\\nThank you.';\r\n\r\n    const mailtoLink = \\`mailto:admin@veritas-documents.com?subject=\\${encodeURIComponent(subject)}&body=\\${encodeURIComponent(body)}\\`;\r\n    window.open(mailtoLink);\r\n  }\r\n}\r\n\r\n// Initialize the application\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  new VeritasApp();\r\n});`;\r\n\r\n  return c.text(js, 200, {\r\n    'Content-Type': 'application/javascript; charset=utf-8',\r\n    'Cache-Control': 'public, max-age=3600'\r\n  });\r\n});\r\n\r\n// API Routes\r\nimport docsHandler from './handlers/docs';\r\n\r\napp.route('/api/auth', authHandler);\r\napp.route('/api/assets', assetHandler);\r\napp.route('/api/web3-assets', enhancedAssetHandler);\r\napp.route('/api/users', userHandler);\r\napp.route('/api/stripe', stripeHandler);\r\napp.route('/api/search', searchHandler);\r\napp.route('/api/docs', docsHandler);\r\n\r\n// HTML template for the SPA\r\nconst appHTML = `\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Veritas Documents</title>\r\n    <link rel=\"stylesheet\" href=\"/static/styles.css\">\r\n</head>\r\n<body>\r\n    <div id=\"app\">\r\n        <header class=\"header\">\r\n            <div class=\"container\">\r\n                <h1 class=\"logo\">Veritas Documents</h1>\r\n                <nav class=\"nav\" id=\"nav\">\r\n                    <!-- Navigation will be populated by JavaScript -->\r\n                </nav>\r\n            </div>\r\n        </header>\r\n        \r\n        <main class=\"main\">\r\n            <div class=\"container\">\r\n                <div id=\"content\">\r\n                    <!-- Content will be populated by JavaScript -->\r\n                </div>\r\n            </div>\r\n        </main>\r\n    </div>\r\n    \r\n    <script src=\"/static/app.bundle.js\"></script>\r\n    <script src=\"/static/app.js\"></script>\r\n</body>\r\n</html>\r\n`;\r\n\r\n// Serve the main application (SPA - handles client-side routing)\r\napp.get('/', (c) => c.html(appHTML));\r\napp.get('/activate', (c) => c.html(appHTML));\r\napp.get('/dashboard', (c) => c.html(appHTML));\r\napp.get('/create-asset', (c) => c.html(appHTML));\r\napp.get('/search', (c) => c.html(appHTML));\r\napp.get('/docs', (c) => c.html(appHTML));\r\n\r\n// Web3 Demo page - serve static demo file\r\napp.get('/demo', async (c) => {\r\n  const demoContent = `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Veritas Documents - Web3 Demo</title>\r\n    <style>\r\n        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; max-width: 1200px; margin: 0 auto; padding: 20px; background: #f8fafc; }\r\n        .card { background: white; border-radius: 8px; padding: 24px; margin: 16px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }\r\n        .form-group { margin: 16px 0; }\r\n        label { display: block; margin-bottom: 8px; font-weight: 500; }\r\n        input, textarea, select { width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 6px; font-size: 14px; }\r\n        button { background: #2563eb; color: white; padding: 12px 24px; border: none; border-radius: 6px; cursor: pointer; font-size: 14px; margin: 8px; }\r\n        .btn-secondary { background: #6b7280; }\r\n        .status { padding: 12px; border-radius: 6px; margin: 16px 0; }\r\n        .success { background: #dcfce7; color: #166534; }\r\n        .error { background: #fef2f2; color: #dc2626; }\r\n        .info { background: #eff6ff; color: #1d4ed8; }\r\n        .grid { display: grid; grid-template-columns: 1fr 1fr; gap: 20px; }\r\n        pre { background: #1f2937; color: #f9fafb; padding: 16px; border-radius: 6px; overflow-x: auto; font-size: 12px; }\r\n    </style>\r\n</head>\r\n<body>\r\n    <h1>\uD83D\uDD10 Veritas Documents - Web3 Integration Demo</h1>\r\n    <p>Demonstrating IPFS storage and Ethereum anchoring with post-quantum cryptography</p>\r\n    <div class=\"card\">\r\n        <h3>Web3 Integration Status</h3>\r\n        <p>\u2705 IPFS Client implemented with Cloudflare Gateway</p>\r\n        <p>\u2705 Ethereum Anchoring using Maatara post-quantum signatures</p>\r\n        <p>\u2705 Enhanced asset handlers with Web3 capabilities</p>\r\n        <p>\uD83D\uDD27 Ready for testing with real credentials</p>\r\n        \r\n        <h4>Available Endpoints:</h4>\r\n        <ul>\r\n            <li><code>POST /api/web3-assets/create-web3</code> - Create asset with IPFS + Ethereum</li>\r\n            <li><code>GET /api/web3-assets/web3/:id</code> - Get asset with verification</li>\r\n            <li><code>POST /api/web3-assets/web3/:id/decrypt</code> - Decrypt content from IPFS</li>\r\n        </ul>\r\n        \r\n        <h4>Next Steps:</h4>\r\n        <ol>\r\n            <li>Configure Cloudflare Web3 Gateway credentials in wrangler.toml</li>\r\n            <li>Set up Ethereum network configuration</li>\r\n            <li>Test IPFS upload/retrieval functionality</li>\r\n            <li>Verify Ethereum anchoring process</li>\r\n        </ol>\r\n    </div>\r\n</body>\r\n</html>`;\r\n  \r\n  return c.html(demoContent);\r\n});\r\n\r\n// Health check\r\napp.get('/health', (c) => {\r\n  return c.json({ status: 'ok', timestamp: Date.now() });\r\n});\r\n\r\n// Catch-all for SPA routing\r\napp.get('*', (c) => {\r\n  return c.redirect('/');\r\n});\r\n\r\nexport default app;"],
  "mappings": "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",
  "names": ["module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "isNaN", "module", "module", "module", "module", "module", "module", "module", "module", "module", "concatty", "slicy", "Empty", "module", "module", "module", "module", "module", "module", "module", "module", "module", "module", "undefined", "doEval", "stringToPath", "getBaseIntrinsic", "module", "module", "module", "module", "module", "module", "compactQueue", "arrayToObject", "merge", "encode", "compact", "isRegExp", "isBuffer", "combine", "maybeMap", "module", "isNonNullishPrimitive", "stringify", "value", "normalizeStringifyOptions", "module", "normalizeParseOptions", "module", "stringify", "raw", "app", "Node", "Node", "Hono", "Hono", "Hono", "ptr", "module", "module", "raw", "Hono", "Hono", "raw", "Accounts", "ConfirmationTokens", "Customers", "Disputes", "Products", "Refunds", "Tokens", "data", "urlData", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Authorizations", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Cards", "stripeMethod", "stripeMethod", "Configurations", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "InboundTransfers", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "OutboundPayments", "stripeMethod", "stripeMethod", "OutboundTransfers", "stripeMethod", "stripeMethod", "PersonalizationDesigns", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Readers", "stripeMethod", "stripeMethod", "ReceivedCredits", "stripeMethod", "stripeMethod", "ReceivedDebits", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Sessions", "stripeMethod", "Sessions", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Transactions", "stripeMethod", "Transactions", "stripeMethod", "Transactions", "stripeMethod", "Transactions", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Accounts", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "ConfirmationTokens", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Customers", "stripeMethod", "Disputes", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Products", "stripeMethod", "stripeMethod", "stripeMethod", "Refunds", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "stripeMethod", "Tokens", "stripeMethod", "stripeMethod", "stripeMethod", "Sessions", "Transactions", "Authorizations", "Cards", "PersonalizationDesigns", "Configurations", "Readers", "InboundTransfers", "OutboundPayments", "OutboundTransfers", "ReceivedCredits", "ReceivedDebits", "data", "Stripe", "isObject", "Hono", "Hono", "Hono", "app", "Hono", "wasm"]
}
