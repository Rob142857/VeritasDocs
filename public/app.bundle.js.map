{
  "version": 3,
  "sources": ["../node_modules/@maatara/core-pqc-wasm/core_pqc_wasm.js", "../node_modules/@maatara/src/index.ts", "../src/frontend/app.ts"],
  "sourcesContent": ["let wasm;\n\nfunction addToExternrefTable0(obj) {\n    const idx = wasm.__externref_table_alloc();\n    wasm.__wbindgen_export_2.set(idx, obj);\n    return idx;\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        const idx = addToExternrefTable0(e);\n        wasm.__wbindgen_exn_store(idx);\n    }\n}\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nlet cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nconst MAX_SAFARI_DECODE_BYTES = 2146435072;\nlet numBytesDecoded = 0;\nfunction decodeText(ptr, len) {\n    numBytesDecoded += len;\n    if (numBytesDecoded >= MAX_SAFARI_DECODE_BYTES) {\n        cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n        cachedTextDecoder.decode();\n        numBytesDecoded = len;\n    }\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return decodeText(ptr, len);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n * @returns {string}\n */\nexport function kyber_keygen() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const ret = wasm.kyber_keygen();\n        deferred1_0 = ret[0];\n        deferred1_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n * @param {string} public_b64u\n * @returns {string}\n */\nexport function kyber_encaps(public_b64u) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(public_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.kyber_encaps(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} secret_b64u\n * @param {string} kem_ct_b64u\n * @returns {string}\n */\nexport function kyber_decaps(secret_b64u, kem_ct_b64u) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(secret_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(kem_ct_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.kyber_decaps(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} secret_b64u\n * @param {string} info_b64u\n * @param {string | null | undefined} salt_b64u\n * @param {number} len\n * @returns {string}\n */\nexport function hkdf_sha256(secret_b64u, info_b64u, salt_b64u, len) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(secret_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(info_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(salt_b64u) ? 0 : passStringToWasm0(salt_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        const ret = wasm.hkdf_sha256(ptr0, len0, ptr1, len1, ptr2, len2, len);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\n/**\n * @param {string} key_b64u\n * @param {string} dek_b64u\n * @param {string} aad_b64u\n * @returns {string}\n */\nexport function aes_gcm_wrap(key_b64u, dek_b64u, aad_b64u) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(key_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(dek_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(aad_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ret = wasm.aes_gcm_wrap(ptr0, len0, ptr1, len1, ptr2, len2);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\n/**\n * @param {string} key_b64u\n * @param {string} iv_b64u\n * @param {string} ct_b64u\n * @param {string} aad_b64u\n * @returns {string}\n */\nexport function aes_gcm_unwrap(key_b64u, iv_b64u, ct_b64u, aad_b64u) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const ptr0 = passStringToWasm0(key_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(iv_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(ct_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ptr3 = passStringToWasm0(aad_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len3 = WASM_VECTOR_LEN;\n        const ret = wasm.aes_gcm_unwrap(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        deferred5_0 = ret[0];\n        deferred5_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @returns {string}\n */\nexport function dilithium_keygen() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n        const ret = wasm.dilithium_keygen();\n        deferred1_0 = ret[0];\n        deferred1_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n}\n\n/**\n * @param {string} message_b64u\n * @param {string} secret_b64u\n * @returns {string}\n */\nexport function dilithium_sign(message_b64u, secret_b64u) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(message_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(secret_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.dilithium_sign(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} message_b64u\n * @param {string} signature_b64u\n * @param {string} public_b64u\n * @returns {string}\n */\nexport function dilithium_verify(message_b64u, signature_b64u, public_b64u) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(message_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(signature_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(public_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ret = wasm.dilithium_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\nexport function start() {\n    wasm.start();\n}\n\n/**\n * @param {string} json\n * @returns {string}\n */\nexport function jcs_canonicalize(json) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.jcs_canonicalize(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} policy_json\n * @returns {string}\n */\nexport function preimage_governance(policy_json) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(policy_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_governance(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} header_json\n * @param {string} asset_json\n * @returns {string}\n */\nexport function preimage_asset_mint(header_json, asset_json) {\n    let deferred3_0;\n    let deferred3_1;\n    try {\n        const ptr0 = passStringToWasm0(header_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(asset_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_asset_mint(ptr0, len0, ptr1, len1);\n        deferred3_0 = ret[0];\n        deferred3_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred3_0, deferred3_1, 1);\n    }\n}\n\n/**\n * @param {string} header_json\n * @returns {string}\n */\nexport function preimage_asset_transfer(header_json) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(header_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_asset_transfer(ptr0, len0);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} user_id\n * @param {string} root_hex\n * @param {string} epoch\n * @param {string} chains_json\n * @returns {string}\n */\nexport function preimage_anchor(user_id, root_hex, epoch, chains_json) {\n    let deferred5_0;\n    let deferred5_1;\n    try {\n        const ptr0 = passStringToWasm0(user_id, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(root_hex, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        const ptr2 = passStringToWasm0(epoch, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len2 = WASM_VECTOR_LEN;\n        const ptr3 = passStringToWasm0(chains_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len3 = WASM_VECTOR_LEN;\n        const ret = wasm.preimage_anchor(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n        deferred5_0 = ret[0];\n        deferred5_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred5_0, deferred5_1, 1);\n    }\n}\n\n/**\n * @param {string} receiver\n * @param {number} bps\n * @returns {string}\n */\nexport function validate_royalty(receiver, bps) {\n    let deferred2_0;\n    let deferred2_1;\n    try {\n        const ptr0 = passStringToWasm0(receiver, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.validate_royalty(ptr0, len0, bps);\n        deferred2_0 = ret[0];\n        deferred2_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred2_0, deferred2_1, 1);\n    }\n}\n\n/**\n * @param {string} msg_b64u\n * @param {string} attestations_json\n * @param {string | null} [allowed_public_keys_json]\n * @returns {string}\n */\nexport function verify_attestations(msg_b64u, attestations_json, allowed_public_keys_json) {\n    let deferred4_0;\n    let deferred4_1;\n    try {\n        const ptr0 = passStringToWasm0(msg_b64u, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(attestations_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        var ptr2 = isLikeNone(allowed_public_keys_json) ? 0 : passStringToWasm0(allowed_public_keys_json, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len2 = WASM_VECTOR_LEN;\n        const ret = wasm.verify_attestations(ptr0, len0, ptr1, len1, ptr2, len2);\n        deferred4_0 = ret[0];\n        deferred4_1 = ret[1];\n        return getStringFromWasm0(ret[0], ret[1]);\n    } finally {\n        wasm.__wbindgen_free(deferred4_0, deferred4_1, 1);\n    }\n}\n\nconst EXPECTED_RESPONSE_TYPES = new Set(['basic', 'cors', 'default']);\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                const validResponse = module.ok && EXPECTED_RESPONSE_TYPES.has(module.type);\n\n                if (validResponse && module.headers.get('Content-Type') !== 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_buffer_a1a27a0dfa70165d = function(arg0) {\n        const ret = arg0.buffer;\n        return ret;\n    };\n    imports.wbg.__wbg_call_f2db6205e5c51dc8 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = arg0.call(arg1, arg2);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_call_fbe8be8bf6436ce5 = function() { return handleError(function (arg0, arg1) {\n        const ret = arg0.call(arg1);\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_crypto_574e78ad8b13b65f = function(arg0) {\n        const ret = arg0.crypto;\n        return ret;\n    };\n    imports.wbg.__wbg_getRandomValues_b8f5dbd5f3995a9e = function() { return handleError(function (arg0, arg1) {\n        arg0.getRandomValues(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_log_ea49c7a7eb7689d1 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_msCrypto_a61aeb35a24c1329 = function(arg0) {\n        const ret = arg0.msCrypto;\n        return ret;\n    };\n    imports.wbg.__wbg_new_e52b3efaaa774f96 = function(arg0) {\n        const ret = new Uint8Array(arg0);\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_ff528e72d35de39a = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return ret;\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_3b01ecda099177e8 = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(arg0, arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_newwithlength_08f872dc1e3ada2e = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_node_905d3e251edff8a2 = function(arg0) {\n        const ret = arg0.node;\n        return ret;\n    };\n    imports.wbg.__wbg_process_dc0fbacc7c1c06f7 = function(arg0) {\n        const ret = arg0.process;\n        return ret;\n    };\n    imports.wbg.__wbg_randomFillSync_ac0988aba3254290 = function() { return handleError(function (arg0, arg1) {\n        arg0.randomFillSync(arg1);\n    }, arguments) };\n    imports.wbg.__wbg_require_60cc747a6bc5215a = function() { return handleError(function () {\n        const ret = module.require;\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_fe4e79d1ed3b0e9b = function(arg0, arg1, arg2) {\n        arg0.set(arg1, arg2 >>> 0);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_487c52c58d65314d = function() {\n        const ret = typeof global === 'undefined' ? null : global;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_GLOBAL_THIS_ee9704f328b6b291 = function() {\n        const ret = typeof globalThis === 'undefined' ? null : globalThis;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_SELF_78c9e3071b912620 = function() {\n        const ret = typeof self === 'undefined' ? null : self;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_static_accessor_WINDOW_a093d21393777366 = function() {\n        const ret = typeof window === 'undefined' ? null : window;\n        return isLikeNone(ret) ? 0 : addToExternrefTable0(ret);\n    };\n    imports.wbg.__wbg_subarray_dd4ade7d53bd8e26 = function(arg0, arg1, arg2) {\n        const ret = arg0.subarray(arg1 >>> 0, arg2 >>> 0);\n        return ret;\n    };\n    imports.wbg.__wbg_versions_c01dfd4722a88165 = function(arg0) {\n        const ret = arg0.versions;\n        return ret;\n    };\n    imports.wbg.__wbindgen_init_externref_table = function() {\n        const table = wasm.__wbindgen_export_2;\n        const offset = table.grow(4);\n        table.set(0, undefined);\n        table.set(offset + 0, undefined);\n        table.set(offset + 1, null);\n        table.set(offset + 2, true);\n        table.set(offset + 3, false);\n        ;\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(arg0) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = arg0;\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(arg0) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = arg0 === undefined;\n        return ret;\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return ret;\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return ret;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedUint8ArrayMemory0 = null;\n\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module !== 'undefined') {\n        if (Object.getPrototypeOf(module) === Object.prototype) {\n            ({module} = module)\n        } else {\n            console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n        }\n    }\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(module_or_path) {\n    if (wasm !== undefined) return wasm;\n\n\n    if (typeof module_or_path !== 'undefined') {\n        if (Object.getPrototypeOf(module_or_path) === Object.prototype) {\n            ({module_or_path} = module_or_path)\n        } else {\n            console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n        }\n    }\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('core_pqc_wasm_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync };\nexport default __wbg_init;\n", "// Ma'atara Core PQC Toolkit\r\n// Post-Quantum Cryptography for Browser and Node.js\r\n\r\nexport interface KyberKeypair {\r\n  public_b64u: string;\r\n  secret_b64u: string;\r\n}\r\n\r\nexport interface KyberEncap {\r\n  kem_ct_b64u: string;\r\n  shared_b64u: string;\r\n}\r\n\r\nexport interface AesGcmWrap {\r\n  iv_b64u: string;\r\n  ct_b64u: string;\r\n}\r\n\r\nexport interface DilithiumKeypair {\r\n  algorithm: string;\r\n  public_b64u: string;\r\n  secret_b64u: string;\r\n}\r\n\r\nexport interface DilithiumSignResult {\r\n  signature_b64u: string;\r\n  algorithm: string;\r\n}\r\n\r\nexport interface DilithiumVerifyResult {\r\n  is_valid: boolean;\r\n  algorithm: string;\r\n}\r\n\r\nexport interface HkdfResult {\r\n  key_b64u: string;\r\n}\r\n\r\nexport interface AesGcmUnwrapResult {\r\n  dek_b64u: string;\r\n}\r\n\r\n// Import WASM functions (namespace import for better bundler compatibility)\r\nimport * as wasmPkg from '@maatara/core-pqc-wasm';\r\nconst wasm_kyber_keygen = (wasmPkg as any).kyber_keygen as () => string;\r\nconst wasm_kyber_encaps = (wasmPkg as any).kyber_encaps as (p: string) => string;\r\nconst wasm_kyber_decaps = (wasmPkg as any).kyber_decaps as (s: string, c: string) => string;\r\nconst wasm_hkdf_sha256 = (wasmPkg as any).hkdf_sha256 as (s: string, i: string, salt?: string, len?: number) => string;\r\nconst wasm_aes_gcm_wrap = (wasmPkg as any).aes_gcm_wrap as (k: string, d: string, a: string) => string;\r\nconst wasm_aes_gcm_unwrap = (wasmPkg as any).aes_gcm_unwrap as (k: string, iv: string, ct: string, a: string) => string;\r\nconst wasm_dilithium_keygen = (wasmPkg as any).dilithium_keygen as () => string;\r\nconst wasm_dilithium_sign = (wasmPkg as any).dilithium_sign as (m: string, s: string) => string;\r\nconst wasm_dilithium_verify = (wasmPkg as any).dilithium_verify as (m: string, sig: string, p: string) => string;\r\n\r\n// Deterministic/canonicalization and governance helpers\r\nexport interface CanonicalOut { canonical: string; msg_b64u?: string; msgB64u?: string }\r\n\r\n// Initialize WASM\r\nlet wasmReady = false;\r\n\r\n/**\r\n * Initialize the underlying WASM module.\r\n * - In browsers/bundlers where the glue knows how to fetch the .wasm, you can call without params.\r\n * - If your bundler provides a URL or Module for the .wasm, pass it as the first argument.\r\n */\r\nexport async function initWasm(wasmInput?: any): Promise<void> {\r\n  if (wasmReady) return;\r\n  const maybeInit = (wasmPkg as any).default;\r\n  if (typeof maybeInit === 'function') {\r\n    // Some environments require a URL/Module/bytes for initialization.\r\n    // We forward the optional value if provided; otherwise let the glue resolve it.\r\n    if (wasmInput !== undefined) {\r\n      await maybeInit(wasmInput);\r\n    } else {\r\n      await maybeInit();\r\n    }\r\n  }\r\n  wasmReady = true;\r\n}\r\n\r\n// Kyber functions\r\nexport async function kyberKeygen(): Promise<KyberKeypair> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_kyber_keygen());\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function kyberEncaps(publicB64u: string): Promise<KyberEncap> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_kyber_encaps(publicB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function kyberDecaps(secretB64u: string, kemCtB64u: string): Promise<{ shared_b64u: string }> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_kyber_decaps(secretB64u, kemCtB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// HKDF functions\r\nexport async function hkdfSha256(\r\n  secretB64u: string,\r\n  infoB64u: string,\r\n  saltB64u?: string,\r\n  len: number = 32\r\n): Promise<HkdfResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_hkdf_sha256(secretB64u, infoB64u, saltB64u, len));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// AES-GCM functions\r\nexport async function aesGcmWrap(\r\n  keyB64u: string,\r\n  dekB64u: string,\r\n  aadB64u: string\r\n): Promise<AesGcmWrap> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_aes_gcm_wrap(keyB64u, dekB64u, aadB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function aesGcmUnwrap(\r\n  keyB64u: string,\r\n  ivB64u: string,\r\n  ctB64u: string,\r\n  aadB64u: string\r\n): Promise<AesGcmUnwrapResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_aes_gcm_unwrap(keyB64u, ivB64u, ctB64u, aadB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// Dilithium functions\r\nexport async function dilithiumKeygen(): Promise<DilithiumKeypair> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_dilithium_keygen());\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function dilithiumSign(\r\n  messageB64u: string,\r\n  secretB64u: string\r\n): Promise<DilithiumSignResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_dilithium_sign(messageB64u, secretB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\nexport async function dilithiumVerify(\r\n  messageB64u: string,\r\n  signatureB64u: string,\r\n  publicB64u: string\r\n): Promise<DilithiumVerifyResult> {\r\n  await initWasm();\r\n  const result = JSON.parse(wasm_dilithium_verify(messageB64u, signatureB64u, publicB64u));\r\n  if (result.error) throw new Error(result.error);\r\n  return result;\r\n}\r\n\r\n// ---- Deterministic helpers (multisig/art token) ----\r\nexport async function jcsCanonicalize(json: unknown): Promise<string> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).jcs_canonicalize(JSON.stringify(json));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return out.canonical as string;\r\n}\r\n\r\nexport async function buildPolicyPreimage(policy: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_governance(JSON.stringify(policy));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\nexport async function buildMintPreimage(header: unknown, asset: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_asset_mint(JSON.stringify(header), JSON.stringify(asset));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\nexport async function buildTransferPreimage(header: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_asset_transfer(JSON.stringify(header));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\nexport async function buildAnchorPreimage(userId: string, rootHex: string, epoch: string, chains: unknown): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).preimage_anchor(userId, rootHex, epoch, JSON.stringify(chains));\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return { canonical: out.canonical, msg_b64u: out.msg_b64u, msgB64u: out.msg_b64u };\r\n}\r\n\r\n// ---- Veritas Block Preimage (NEW v2 JCS canonical form) ----\r\n// We migrate block signing to a canonical (JCS) JSON similar to other preimages.\r\n// Legacy (v1) blocks used a hand-crafted JSON.stringify of a plain object with fixed insertion order.\r\n// This helper produces a canonical JSON string and msg_b64u = b64url(UTF-8(canonical JSON)).\r\n// NOTE: We intentionally EXCLUDE signature, encryptionKeyHash, and any runtime-only fields.\r\n// Fields included (ordered via JCS lexical ordering):\r\n//   contentType, dataHash, index, metadataHash, ownerPublicKey, previousHash, signatureAlg, timestamp, version\r\n// index & timestamp MUST be strings representing decimal integers (BigInt safe) – caller responsibility.\r\nexport interface BlockPreimageInput {\r\n  index: string | number | bigint;\r\n  timestamp: string | number | bigint;\r\n  previousHash: string;\r\n  dataHash: string;\r\n  metadataHash: string;\r\n  signatureAlg: string; // e.g. 'dilithium2'\r\n  ownerPublicKey: string; // Dilithium public key (base64url)\r\n  contentType?: string; // default 'application/json'\r\n  version: number; // block format / protocol version\r\n}\r\n\r\nexport async function buildBlockPreimage(block: BlockPreimageInput): Promise<CanonicalOut> {\r\n  await initWasm();\r\n  // Normalize fields per spec\r\n  const normalized = {\r\n    contentType: block.contentType || 'application/json',\r\n    dataHash: block.dataHash,\r\n    index: block.index.toString(),\r\n    metadataHash: block.metadataHash,\r\n    ownerPublicKey: block.ownerPublicKey,\r\n    previousHash: block.previousHash,\r\n    signatureAlg: block.signatureAlg,\r\n    timestamp: block.timestamp.toString(),\r\n    version: block.version,\r\n  };\r\n  // Use JCS canonicalization via wasm jcs_canonicalize (already exposed through jcsCanonicalize helper)\r\n  const canonical = await jcsCanonicalize(normalized);\r\n  const msg_b64u = b64uEncode(new TextEncoder().encode(canonical));\r\n  return { canonical, msg_b64u, msgB64u: msg_b64u };\r\n}\r\n\r\nexport async function validateRoyalty(receiver: string, bps: number): Promise<boolean> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).validate_royalty(receiver, bps);\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) return false;\r\n  return !!out.ok;\r\n}\r\n\r\nexport async function verifyAttestations(msgB64u: string, attestations: Array<{ alg: string; publicKeyB64u: string; signatureB64u: string }>, allowedPublicKeys?: string[]): Promise<number> {\r\n  await initWasm();\r\n  const raw = (wasmPkg as any).verify_attestations(msgB64u, JSON.stringify(attestations), allowedPublicKeys ? JSON.stringify(allowedPublicKeys) : undefined);\r\n  const out = typeof raw === 'string' ? JSON.parse(raw) : raw;\r\n  if (out?.error) throw new Error(out.error);\r\n  return Number(out.valid_count || 0);\r\n}\r\n\r\n// Utility functions\r\n// Cross-env base64url helpers (browser + Node)\r\nfunction _fromByteArray(bytes: Uint8Array): string {\r\n  if (typeof btoa === 'function') {\r\n    // Browser\r\n    let s = '';\r\n    for (let i = 0; i < bytes.length; i++) s += String.fromCharCode(bytes[i]);\r\n    return btoa(s);\r\n  }\r\n  // Node\r\n  return Buffer.from(bytes).toString('base64');\r\n}\r\n\r\nfunction _toByteArray(b64: string): Uint8Array {\r\n  if (typeof atob === 'function') {\r\n    const binary = atob(b64);\r\n    const out = new Uint8Array(binary.length);\r\n    for (let i = 0; i < binary.length; i++) out[i] = binary.charCodeAt(i);\r\n    return out;\r\n  }\r\n  return new Uint8Array(Buffer.from(b64, 'base64'));\r\n}\r\n\r\nexport function b64uEncode(data: Uint8Array): string {\r\n  return _fromByteArray(data)\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_')\r\n    .replace(/=+/g, '');\r\n}\r\n\r\nexport function b64uDecode(str: string): Uint8Array {\r\n  const b64 = str.replace(/-/g, '+').replace(/_/g, '/').padEnd(Math.ceil(str.length / 4) * 4, '=');\r\n  return _toByteArray(b64);\r\n}\r\n\r\nexport function constantTimeEqual(a: Uint8Array, b: Uint8Array): boolean {\r\n  if (a.length !== b.length) return false;\r\n  let result = 0;\r\n  for (let i = 0; i < a.length; i++) {\r\n    result |= a[i] ^ b[i];\r\n  }\r\n  return result === 0;\r\n}\r\n", "// Frontend application with Post-Quantum Cryptography\r\nimport {\r\n  initWasm,\r\n  kyberKeygen,\r\n  kyberEncaps,\r\n  kyberDecaps,\r\n  dilithiumKeygen,\r\n  dilithiumSign,\r\n  dilithiumVerify,\r\n  hkdfSha256,\r\n  aesGcmWrap,\r\n  aesGcmUnwrap,\r\n  b64uEncode,\r\n  b64uDecode,\r\n  jcsCanonicalize\r\n} from '@maatara/core-pqc';\r\n\r\n// TypeScript declarations for browser environment\r\ndeclare const window: any;\r\n\r\n// Initialize WASM with the bundled WASM file\r\nlet wasmInitialized = false;\r\n\r\nasync function ensureCryptoReady(): Promise<void> {\r\n  if (wasmInitialized) return;\r\n  \r\n  try {\r\n    // Initialize WASM with the new API (single object parameter)\r\n    const wasmUrl = '/static/core_pqc_wasm_bg.wasm';\r\n    await initWasm({ url: wasmUrl });\r\n    wasmInitialized = true;\r\n    console.log('\u2713 Post-quantum cryptography initialized');\r\n  } catch (error) {\r\n    console.error('Failed to initialize WASM:', error);\r\n    throw new Error('Cryptography initialization failed');\r\n  }\r\n}\r\n\r\n// Client-side encryption using Post-Quantum Cryptography\r\nexport async function encryptDocumentData(data: string, publicKeyB64u: string): Promise<string> {\r\n  await ensureCryptoReady();\r\n  \r\n  // Step 1: Encapsulate shared secret using Kyber-768\r\n  const encapsResult = await (kyberEncaps as any)(publicKeyB64u);\r\n  if (encapsResult.error) throw new Error(encapsResult.error);\r\n  \r\n  const sharedSecret = encapsResult.shared_b64u;\r\n  const kemCt = encapsResult.kem_ct_b64u;\r\n  \r\n  // Step 2: Derive AES key from shared secret using HKDF\r\n  const infoB64u = b64uEncode(new TextEncoder().encode('veritas-aes'));\r\n  const kdfResult = await (hkdfSha256 as any)(sharedSecret, infoB64u, '', 32);\r\n  if (kdfResult.error) throw new Error(kdfResult.error);\r\n  \r\n  const aesKey = kdfResult.key_b64u;\r\n  \r\n  // Step 3: Encrypt data with AES-256-GCM\r\n  const dekB64u = b64uEncode(new TextEncoder().encode(data));\r\n  const aadB64u = b64uEncode(new TextEncoder().encode('veritas-documents'));\r\n  \r\n  const aesResult = await (aesGcmWrap as any)(aesKey, dekB64u, aadB64u);\r\n  if (aesResult.error) throw new Error(aesResult.error);\r\n  \r\n  // Return encrypted package\r\n  return JSON.stringify({\r\n    version: '1.0',\r\n    algorithm: 'kyber768-aes256gcm',\r\n    kem_ct: kemCt,\r\n    iv: aesResult.iv_b64u,\r\n    ciphertext: aesResult.ct_b64u\r\n  });\r\n}\r\n\r\n// Client-side decryption using Post-Quantum Cryptography\r\nexport async function decryptDocumentData(encryptedData: string, privateKeyB64u: string): Promise<string> {\r\n  await ensureCryptoReady();\r\n  \r\n  const encData = JSON.parse(encryptedData);\r\n  \r\n  // Step 1: Decapsulate shared secret using Kyber-768\r\n  const decapsResult = await (kyberDecaps as any)(privateKeyB64u, encData.kem_ct);\r\n  if (decapsResult.error) throw new Error(decapsResult.error);\r\n  \r\n  const sharedSecret = decapsResult.shared_b64u;\r\n  \r\n  // Step 2: Derive AES key from shared secret\r\n  const infoB64u = b64uEncode(new TextEncoder().encode('veritas-aes'));\r\n  const kdfResult = await (hkdfSha256 as any)(sharedSecret, infoB64u, '', 32);\r\n  if (kdfResult.error) throw new Error(kdfResult.error);\r\n  \r\n  const aesKey = kdfResult.key_b64u;\r\n  \r\n  // Step 3: Decrypt data with AES-256-GCM\r\n  const aadB64u = b64uEncode(new TextEncoder().encode('veritas-documents'));\r\n  \r\n  const aesResult = await (aesGcmUnwrap as any)(aesKey, encData.iv, encData.ciphertext, aadB64u);\r\n  if (aesResult.error) throw new Error(aesResult.error);\r\n  \r\n  // Decode decrypted data\r\n  return new TextDecoder().decode(b64uDecode(aesResult.dek_b64u));\r\n}\r\n\r\n// Generate client-side keypair (both Kyber for encryption and Dilithium for signing)\r\nexport async function generateClientKeypair(): Promise<{ \r\n  kyberPublicKey: string; \r\n  kyberPrivateKey: string;\r\n  dilithiumPublicKey: string;\r\n  dilithiumPrivateKey: string;\r\n}> {\r\n  await ensureCryptoReady();\r\n  \r\n  try {\r\n    // Generate Kyber-768 keypair for encryption\r\n    const kyberResult = await (kyberKeygen as any)();\r\n    console.log('Kyber keygen result:', kyberResult);\r\n    \r\n    if (kyberResult.error) throw new Error(kyberResult.error);\r\n    \r\n    // Generate Dilithium-2 keypair for signing\r\n    const dilithiumResult = await (dilithiumKeygen as any)();\r\n    console.log('Dilithium keygen result:', dilithiumResult);\r\n    \r\n    if (dilithiumResult.error) throw new Error(dilithiumResult.error);\r\n    \r\n    // Test the Dilithium keys immediately\r\n    console.log('Testing Dilithium keys...');\r\n    const testMessage = 'test message for dilithium';\r\n    const testMessageB64u = b64uEncode(new TextEncoder().encode(testMessage));\r\n    \r\n    try {\r\n      // Decode the secret key from base64url to bytes for the WASM function\r\n      const secretKeyBytes = b64uDecode(dilithiumResult.secret_b64u);\r\n      const testSignResult = await (dilithiumSign as any)(testMessageB64u, secretKeyBytes);\r\n      console.log('Dilithium test sign result:', testSignResult);\r\n      \r\n      if (testSignResult.error) {\r\n        console.error('Dilithium test sign failed:', testSignResult.error);\r\n        throw new Error('Dilithium key test failed: ' + testSignResult.error);\r\n      }\r\n      \r\n      // Test verification\r\n      const testVerifyResult = await (dilithiumVerify as any)(testMessageB64u, testSignResult.signature_b64u, dilithiumResult.public_b64u);\r\n      console.log('Dilithium test verify result:', testVerifyResult);\r\n      \r\n      if (testVerifyResult.error || !testVerifyResult.is_valid) {\r\n        console.error('Dilithium test verify failed:', testVerifyResult);\r\n        throw new Error('Dilithium key verification test failed');\r\n      }\r\n      \r\n      console.log('\u2713 Dilithium keys tested successfully');\r\n    } catch (testError) {\r\n      console.error('Dilithium key test error:', testError);\r\n      throw new Error('Generated Dilithium keys are invalid: ' + (testError as Error).message);\r\n    }\r\n    \r\n    return {\r\n      kyberPublicKey: kyberResult.public_b64u,\r\n      kyberPrivateKey: kyberResult.secret_b64u,\r\n      dilithiumPublicKey: dilithiumResult.public_b64u,\r\n      // Store ONLY the secret_b64u string, just like Kyber\r\n      dilithiumPrivateKey: dilithiumResult.secret_b64u\r\n    };\r\n  } catch (error) {\r\n    console.error('Key generation error:', error);\r\n    throw error;\r\n  }\r\n}\r\n\r\n// Sign data with Dilithium private key\r\nexport async function signData(data: string, dilithiumSecretB64u: string): Promise<string> {\r\n  await ensureCryptoReady();\r\n  \r\n  // For now, don't use JCS canonicalization - use the data as-is like the README example\r\n  const messageB64u = b64uEncode(new TextEncoder().encode(data));\r\n  \r\n  console.log('Attempting to sign with Dilithium...');\r\n  console.log('Secret key b64u length:', dilithiumSecretB64u.length);\r\n  console.log('Message b64u length:', messageB64u.length);\r\n  console.log('Data preview:', data.substring(0, 100));\r\n  \r\n  // Decode the secret key from base64url to bytes for the WASM function\r\n  const secretKeyBytes = b64uDecode(dilithiumSecretB64u);\r\n  console.log('Secret key bytes length:', secretKeyBytes.length);\r\n  \r\n  // IMPORTANT: dilithiumSign takes (messageB64u, secretKeyBytes) - message FIRST, secret key as bytes!\r\n  const signResult = await (dilithiumSign as any)(messageB64u, secretKeyBytes);\r\n  \r\n  console.log('Sign result:', signResult);\r\n  \r\n  if (signResult.error) {\r\n    console.error('Dilithium sign error:', signResult.error);\r\n    throw new Error(signResult.error);\r\n  }\r\n  \r\n  return signResult.signature_b64u;\r\n}\r\n\r\n// Verify signature with Dilithium public key\r\nexport async function verifySignature(data: string, signature: string, dilithiumPublicKey: string): Promise<boolean> {\r\n  await ensureCryptoReady();\r\n  \r\n  const messageB64u = b64uEncode(new TextEncoder().encode(data));\r\n  \r\n  // Decode the public key from base64url to bytes for the WASM function\r\n  const publicKeyBytes = b64uDecode(dilithiumPublicKey);\r\n  \r\n  const verifyResult = await (dilithiumVerify as any)(messageB64u, signature, publicKeyBytes);\r\n  \r\n  if (verifyResult.error) return false;\r\n  \r\n  return verifyResult.is_valid === true;\r\n}\r\n\r\n// Make functions available globally for inline HTML usage\r\n(window as any).VeritasCrypto = {\r\n  encryptDocumentData,\r\n  decryptDocumentData,\r\n  generateClientKeypair,\r\n  signData,\r\n  verifySignature,\r\n  ensureCryptoReady\r\n};\r\n\r\nconsole.log('Veritas Crypto module loaded');\r\n"],
  "mappings": "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",
  "names": ["ptr", "module", "module"]
}
